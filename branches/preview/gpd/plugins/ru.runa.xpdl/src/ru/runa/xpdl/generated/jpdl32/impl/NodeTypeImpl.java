//
// This file was ru.runa.xpdl.generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.05.04 at 12:24:30 PM MSD 
//


package ru.runa.xpdl.generated.jpdl32.impl;

public class NodeTypeImpl implements ru.runa.xpdl.generated.jpdl32.NodeType, com.sun.xml.bind.JAXBObject, ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallableObject, ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializable, ru.runa.xpdl.generated.jpdl32.impl.runtime.ValidatableObject
{

    protected java.lang.String _Name;
    protected java.lang.String _Async;
    protected ru.runa.xpdl.generated.jpdl32.ScriptType _Script;
    protected ru.runa.xpdl.generated.jpdl32.ActionType _Action;
    protected com.sun.xml.bind.util.ListImpl _DescriptionOrEventOrExceptionHandler;
    protected ru.runa.xpdl.generated.jpdl32.MailType _Mail;
    protected ru.runa.xpdl.generated.jpdl32.CancelTimerType _CancelTimer;
    protected ru.runa.xpdl.generated.jpdl32.CreateTimerType _CreateTimer;
    public final static java.lang.Class version = (ru.runa.xpdl.generated.jpdl32.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (ru.runa.xpdl.generated.jpdl32.NodeType.class);
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public java.lang.String getAsync() {
        if (_Async == null) {
            return "false";
        } else {
            return _Async;
        }
    }

    public void setAsync(java.lang.String value) {
        _Async = value;
    }

    public ru.runa.xpdl.generated.jpdl32.ScriptType getScript() {
        return _Script;
    }

    public void setScript(ru.runa.xpdl.generated.jpdl32.ScriptType value) {
        _Script = value;
    }

    public ru.runa.xpdl.generated.jpdl32.ActionType getAction() {
        return _Action;
    }

    public void setAction(ru.runa.xpdl.generated.jpdl32.ActionType value) {
        _Action = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getDescriptionOrEventOrExceptionHandler() {
        if (_DescriptionOrEventOrExceptionHandler == null) {
            _DescriptionOrEventOrExceptionHandler = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _DescriptionOrEventOrExceptionHandler;
    }

    public java.util.List getDescriptionOrEventOrExceptionHandler() {
        return _getDescriptionOrEventOrExceptionHandler();
    }

    public ru.runa.xpdl.generated.jpdl32.MailType getMail() {
        return _Mail;
    }

    public void setMail(ru.runa.xpdl.generated.jpdl32.MailType value) {
        _Mail = value;
    }

    public ru.runa.xpdl.generated.jpdl32.CancelTimerType getCancelTimer() {
        return _CancelTimer;
    }

    public void setCancelTimer(ru.runa.xpdl.generated.jpdl32.CancelTimerType value) {
        _CancelTimer = value;
    }

    public ru.runa.xpdl.generated.jpdl32.CreateTimerType getCreateTimer() {
        return _CreateTimer;
    }

    public void setCreateTimer(ru.runa.xpdl.generated.jpdl32.CreateTimerType value) {
        _CreateTimer = value;
    }

    public ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingEventHandler createUnmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context) {
        return new ru.runa.xpdl.generated.jpdl32.impl.NodeTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx5 = 0;
        final int len5 = ((_DescriptionOrEventOrExceptionHandler == null)? 0 :_DescriptionOrEventOrExceptionHandler.size());
        if (((((_CancelTimer == null)&&(_Script == null))&&(_CreateTimer == null))&&(_Action!= null))&&(_Mail == null)) {
            if (_Action instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Action), "Action");
            } else {
                context.startElement("urn:jbpm.org:jpdl-3.2", "action");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Action), "Action");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Action), "Action");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Action), "Action");
                context.endElement();
            }
        } else {
            if (((((_CancelTimer == null)&&(_Script!= null))&&(_CreateTimer == null))&&(_Action == null))&&(_Mail == null)) {
                if (_Script instanceof javax.xml.bind.Element) {
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _Script), "Script");
                } else {
                    context.startElement("urn:jbpm.org:jpdl-3.2", "script");
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Script), "Script");
                    context.endNamespaceDecls();
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Script), "Script");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _Script), "Script");
                    context.endElement();
                }
            } else {
                if (((((_CancelTimer == null)&&(_Script == null))&&(_CreateTimer!= null))&&(_Action == null))&&(_Mail == null)) {
                    if (_CreateTimer instanceof javax.xml.bind.Element) {
                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _CreateTimer), "CreateTimer");
                    } else {
                        context.startElement("urn:jbpm.org:jpdl-3.2", "create-timer");
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _CreateTimer), "CreateTimer");
                        context.endNamespaceDecls();
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _CreateTimer), "CreateTimer");
                        context.endAttributes();
                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _CreateTimer), "CreateTimer");
                        context.endElement();
                    }
                } else {
                    if (((((_CancelTimer!= null)&&(_Script == null))&&(_CreateTimer == null))&&(_Action == null))&&(_Mail == null)) {
                        if (_CancelTimer instanceof javax.xml.bind.Element) {
                            context.childAsBody(((com.sun.xml.bind.JAXBObject) _CancelTimer), "CancelTimer");
                        } else {
                            context.startElement("urn:jbpm.org:jpdl-3.2", "cancel-timer");
                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _CancelTimer), "CancelTimer");
                            context.endNamespaceDecls();
                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _CancelTimer), "CancelTimer");
                            context.endAttributes();
                            context.childAsBody(((com.sun.xml.bind.JAXBObject) _CancelTimer), "CancelTimer");
                            context.endElement();
                        }
                    } else {
                        if (((((_CancelTimer == null)&&(_Script == null))&&(_CreateTimer == null))&&(_Action == null))&&(_Mail!= null)) {
                            if (_Mail instanceof javax.xml.bind.Element) {
                                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Mail), "Mail");
                            } else {
                                context.startElement("urn:jbpm.org:jpdl-3.2", "mail");
                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Mail), "Mail");
                                context.endNamespaceDecls();
                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Mail), "Mail");
                                context.endAttributes();
                                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Mail), "Mail");
                                context.endElement();
                            }
                        }
                    }
                }
            }
        }
        while (idx5 != len5) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _DescriptionOrEventOrExceptionHandler.get(idx5 ++)), "DescriptionOrEventOrExceptionHandler");
        }
    }

    public void serializeAttributes(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx5 = 0;
        final int len5 = ((_DescriptionOrEventOrExceptionHandler == null)? 0 :_DescriptionOrEventOrExceptionHandler.size());
        if (_Async!= null) {
            context.startAttribute("", "async");
            try {
                context.text(((java.lang.String) _Async), "Async");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "name");
        try {
            context.text(((java.lang.String) _Name), "Name");
        } catch (java.lang.Exception e) {
            ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (((((_CancelTimer == null)&&(_Script == null))&&(_CreateTimer == null))&&(_Action!= null))&&(_Mail == null)) {
            if (_Action instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Action), "Action");
            }
        } else {
            if (((((_CancelTimer == null)&&(_Script!= null))&&(_CreateTimer == null))&&(_Action == null))&&(_Mail == null)) {
                if (_Script instanceof javax.xml.bind.Element) {
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Script), "Script");
                }
            } else {
                if (((((_CancelTimer == null)&&(_Script == null))&&(_CreateTimer!= null))&&(_Action == null))&&(_Mail == null)) {
                    if (_CreateTimer instanceof javax.xml.bind.Element) {
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _CreateTimer), "CreateTimer");
                    }
                } else {
                    if (((((_CancelTimer!= null)&&(_Script == null))&&(_CreateTimer == null))&&(_Action == null))&&(_Mail == null)) {
                        if (_CancelTimer instanceof javax.xml.bind.Element) {
                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _CancelTimer), "CancelTimer");
                        }
                    } else {
                        if (((((_CancelTimer == null)&&(_Script == null))&&(_CreateTimer == null))&&(_Action == null))&&(_Mail!= null)) {
                            if (_Mail instanceof javax.xml.bind.Element) {
                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Mail), "Mail");
                            }
                        }
                    }
                }
            }
        }
        while (idx5 != len5) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _DescriptionOrEventOrExceptionHandler.get(idx5 ++)), "DescriptionOrEventOrExceptionHandler");
        }
    }

    public void serializeURIs(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx5 = 0;
        final int len5 = ((_DescriptionOrEventOrExceptionHandler == null)? 0 :_DescriptionOrEventOrExceptionHandler.size());
        if (((((_CancelTimer == null)&&(_Script == null))&&(_CreateTimer == null))&&(_Action!= null))&&(_Mail == null)) {
            if (_Action instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Action), "Action");
            }
        } else {
            if (((((_CancelTimer == null)&&(_Script!= null))&&(_CreateTimer == null))&&(_Action == null))&&(_Mail == null)) {
                if (_Script instanceof javax.xml.bind.Element) {
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Script), "Script");
                }
            } else {
                if (((((_CancelTimer == null)&&(_Script == null))&&(_CreateTimer!= null))&&(_Action == null))&&(_Mail == null)) {
                    if (_CreateTimer instanceof javax.xml.bind.Element) {
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _CreateTimer), "CreateTimer");
                    }
                } else {
                    if (((((_CancelTimer!= null)&&(_Script == null))&&(_CreateTimer == null))&&(_Action == null))&&(_Mail == null)) {
                        if (_CancelTimer instanceof javax.xml.bind.Element) {
                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _CancelTimer), "CancelTimer");
                        }
                    } else {
                        if (((((_CancelTimer == null)&&(_Script == null))&&(_CreateTimer == null))&&(_Action == null))&&(_Mail!= null)) {
                            if (_Mail instanceof javax.xml.bind.Element) {
                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Mail), "Mail");
                            }
                        }
                    }
                }
            }
        }
        while (idx5 != len5) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _DescriptionOrEventOrExceptionHandler.get(idx5 ++)), "DescriptionOrEventOrExceptionHandler");
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (ru.runa.xpdl.generated.jpdl32.NodeType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar."
+"ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\bsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5"
+"\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\bq\u0000~\u0000\fpsq\u0000~\u0000\bq\u0000~\u0000\fpsq\u0000~\u0000\bq\u0000~\u0000\fpsq\u0000~\u0000\b"
+"q\u0000~\u0000\fpsq\u0000~\u0000\bq\u0000~\u0000\fpsq\u0000~\u0000\bq\u0000~\u0000\fpsq\u0000~\u0000\bq\u0000~\u0000\fpsq\u0000~\u0000\bq\u0000~\u0000\fpsr\u0000\'co"
+"m.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClass"
+"t\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.El"
+"ementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentMo"
+"delq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\fp\u0000sq\u0000~\u0000\bppsr\u0000 com.sun.msv.grammar.OneOrMo"
+"reExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L"
+"\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\fpsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0016xq\u0000~\u0000\u0003q\u0000~\u0000\fpsr\u00002com.sun"
+".msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003"
+"sq\u0000~\u0000\u000b\u0001psr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dc"
+"om.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gra"
+"mmar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000!psr\u0000#"
+"com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000"
+"\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000(xq\u0000~\u0000#t\u0000\u0017generated.jp"
+"dl32.Actiont\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000"
+"~\u0000\u0015q\u0000~\u0000\fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0015pp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u001aq\u0000~\u0000\fpsq\u0000~\u0000\u001dq\u0000~\u0000\fpq"
+"\u0000~\u0000 q\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'t\u0000\u001bgenerated.jpdl32.ActionTypeq\u0000~\u0000+sq\u0000~\u0000"
+"\bppsq\u0000~\u0000\u001dq\u0000~\u0000\fpsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002"
+"dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001d"
+"Lcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatyp"
+"e.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Built"
+"inAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Concrete"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000(L\u0000\btypeNameq\u0000~\u0000(L\u0000\nwhiteSpacet\u0000"
+".Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://w"
+"ww.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd"
+".WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.data"
+"type.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gra"
+"mmar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\fpsr\u0000\u001b"
+"com.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000(L\u0000\fna"
+"mespaceURIq\u0000~\u0000(xpq\u0000~\u0000Aq\u0000~\u0000@sq\u0000~\u0000\'t\u0000\u0004typet\u0000)http://www.w3.org"
+"/2001/XMLSchema-instanceq\u0000~\u0000&sq\u0000~\u0000\'t\u0000\u0006actiont\u0000\u0015urn:jbpm.org:"
+"jpdl-3.2sq\u0000~\u0000\u0015q\u0000~\u0000\fp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u001aq\u0000~\u0000\fpsq\u0000~\u0000\u001dq\u0000~\u0000\fpq\u0000~\u0000 q\u0000"
+"~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'t\u0000\u0017generated.jpdl32.Scriptq\u0000~\u0000+sq\u0000~\u0000\u0015q\u0000~\u0000\fp\u0000sq"
+"\u0000~\u0000\u0000ppsq\u0000~\u0000\u0015pp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u001aq\u0000~\u0000\fpsq\u0000~\u0000\u001dq\u0000~\u0000\fpq\u0000~\u0000 q\u0000~\u0000$q\u0000~"
+"\u0000&sq\u0000~\u0000\'t\u0000\u001bgenerated.jpdl32.ScriptTypeq\u0000~\u0000+sq\u0000~\u0000\bppsq\u0000~\u0000\u001dq\u0000~"
+"\u0000\fpq\u0000~\u00009q\u0000~\u0000Iq\u0000~\u0000&sq\u0000~\u0000\'t\u0000\u0006scriptq\u0000~\u0000Nsq\u0000~\u0000\u0015q\u0000~\u0000\fp\u0000sq\u0000~\u0000\bpps"
+"q\u0000~\u0000\u001aq\u0000~\u0000\fpsq\u0000~\u0000\u001dq\u0000~\u0000\fpq\u0000~\u0000 q\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'t\u0000\u001cgenerated.jpd"
+"l32.CreateTimerq\u0000~\u0000+sq\u0000~\u0000\u0015q\u0000~\u0000\fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0015pp\u0000sq\u0000~\u0000\bppsq"
+"\u0000~\u0000\u001aq\u0000~\u0000\fpsq\u0000~\u0000\u001dq\u0000~\u0000\fpq\u0000~\u0000 q\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'t\u0000 ru.runa.xpdl.generated.jpdl"
+"32.CreateTimerTypeq\u0000~\u0000+sq\u0000~\u0000\bppsq\u0000~\u0000\u001dq\u0000~\u0000\fpq\u0000~\u00009q\u0000~\u0000Iq\u0000~\u0000&sq"
+"\u0000~\u0000\'t\u0000\fcreate-timerq\u0000~\u0000Nsq\u0000~\u0000\u0015q\u0000~\u0000\fp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u001aq\u0000~\u0000\fpsq\u0000"
+"~\u0000\u001dq\u0000~\u0000\fpq\u0000~\u0000 q\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'t\u0000\u001cgenerated.jpdl32.CancelTime"
+"rq\u0000~\u0000+sq\u0000~\u0000\u0015q\u0000~\u0000\fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0015pp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u001aq\u0000~\u0000\fpsq\u0000~"
+"\u0000\u001dq\u0000~\u0000\fpq\u0000~\u0000 q\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'t\u0000 ru.runa.xpdl.generated.jpdl32.CancelTimer"
+"Typeq\u0000~\u0000+sq\u0000~\u0000\bppsq\u0000~\u0000\u001dq\u0000~\u0000\fpq\u0000~\u00009q\u0000~\u0000Iq\u0000~\u0000&sq\u0000~\u0000\'t\u0000\fcancel-"
+"timerq\u0000~\u0000Nsq\u0000~\u0000\u0015q\u0000~\u0000\fp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u001aq\u0000~\u0000\fpsq\u0000~\u0000\u001dq\u0000~\u0000\fpq\u0000~\u0000 "
+"q\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'t\u0000\u0015generated.jpdl32.Mailq\u0000~\u0000+sq\u0000~\u0000\u0015q\u0000~\u0000\fp\u0000sq"
+"\u0000~\u0000\u0000ppsq\u0000~\u0000\u0015pp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u001aq\u0000~\u0000\fpsq\u0000~\u0000\u001dq\u0000~\u0000\fpq\u0000~\u0000 q\u0000~\u0000$q\u0000~"
+"\u0000&sq\u0000~\u0000\'t\u0000\u0019generated.jpdl32.MailTypeq\u0000~\u0000+sq\u0000~\u0000\bppsq\u0000~\u0000\u001dq\u0000~\u0000\f"
+"pq\u0000~\u00009q\u0000~\u0000Iq\u0000~\u0000&sq\u0000~\u0000\'t\u0000\u0004mailq\u0000~\u0000Nq\u0000~\u0000&sq\u0000~\u0000\bppsq\u0000~\u0000\u001aq\u0000~\u0000\fps"
+"q\u0000~\u0000\bq\u0000~\u0000\fpsq\u0000~\u0000\bq\u0000~\u0000\fpsq\u0000~\u0000\bq\u0000~\u0000\fpsq\u0000~\u0000\bq\u0000~\u0000\fpsq\u0000~\u0000\u0015q\u0000~\u0000\fp\u0000"
+"sq\u0000~\u0000\bppsq\u0000~\u0000\u001aq\u0000~\u0000\fpsq\u0000~\u0000\u001dq\u0000~\u0000\fpq\u0000~\u0000 q\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'t\u0000\u001cgene"
+"rated.jpdl32.Descriptionq\u0000~\u0000+sq\u0000~\u0000\u0015q\u0000~\u0000\fp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u001aq\u0000~\u0000"
+"\fpsq\u0000~\u0000\u001dq\u0000~\u0000\fpq\u0000~\u0000 q\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'t\u0000\u0016generated.jpdl32.Event"
+"q\u0000~\u0000+sq\u0000~\u0000\u0015q\u0000~\u0000\fp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u001aq\u0000~\u0000\fpsq\u0000~\u0000\u001dq\u0000~\u0000\fpq\u0000~\u0000 q\u0000~\u0000$"
+"q\u0000~\u0000&sq\u0000~\u0000\'t\u0000!ru.runa.xpdl.generated.jpdl32.ExceptionHandlerq\u0000~\u0000+sq\u0000~\u0000\u0015q\u0000"
+"~\u0000\fp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u001aq\u0000~\u0000\fpsq\u0000~\u0000\u001dq\u0000~\u0000\fpq\u0000~\u0000 q\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'t\u0000"
+"\u0016generated.jpdl32.Timerq\u0000~\u0000+sq\u0000~\u0000\u0015q\u0000~\u0000\fp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u001aq\u0000~\u0000\f"
+"psq\u0000~\u0000\u001dq\u0000~\u0000\fpq\u0000~\u0000 q\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'t\u0000\u001bgenerated.jpdl32.Transi"
+"tionq\u0000~\u0000+q\u0000~\u0000&sq\u0000~\u0000\bppsq\u0000~\u0000\u001dq\u0000~\u0000\fpsq\u0000~\u00006q\u0000~\u0000\fpsr\u0000#com.sun.ms"
+"v.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000;q\u0000"
+"~\u0000@t\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor"
+"$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000C\u0001q\u0000~\u0000Fsq\u0000~\u0000Gq\u0000~\u0000\u00c0q\u0000~\u0000@sq\u0000~\u0000\'t\u0000\u0005asy"
+"nct\u0000\u0000q\u0000~\u0000&sq\u0000~\u0000\u001dppq\u0000~\u0000\u00bdsq\u0000~\u0000\'t\u0000\u0004nameq\u0000~\u0000\u00c6sr\u0000\"com.sun.msv.gra"
+"mmar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gra"
+"mmar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Exp"
+"ressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006"
+"parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000<\u0001pq\u0000~\u0000\u009cq\u0000"
+"~\u0000\u0011q\u0000~\u0000\rq\u0000~\u0000\u0006q\u0000~\u0000\u0010q\u0000~\u0000\u0014q\u0000~\u0000\u0098q\u0000~\u0000\u0012q\u0000~\u0000\u0099q\u0000~\u0000\u0013q\u0000~\u0000\u000eq\u0000~\u0000\u0097q\u0000~\u0000\u0007q\u0000"
+"~\u0000\u000fq\u0000~\u0000\u009bq\u0000~\u0000\u0093q\u0000~\u0000\u0081q\u0000~\u0000oq\u0000~\u0000]q\u0000~\u00004q\u0000~\u0000\u00bbq\u0000~\u0000\u00b7q\u0000~\u0000\u00b1q\u0000~\u0000\u00abq\u0000~\u0000\u00a5q\u0000"
+"~\u0000\u009fq\u0000~\u0000\u008fq\u0000~\u0000\u00b6q\u0000~\u0000\u00b0q\u0000~\u0000\u00aaq\u0000~\u0000\u00a4q\u0000~\u0000\u009eq\u0000~\u0000\u008eq\u0000~\u0000\u0086q\u0000~\u0000|q\u0000~\u0000tq\u0000~\u0000jq\u0000"
+"~\u0000bq\u0000~\u0000Xq\u0000~\u0000Pq\u0000~\u0000/q\u0000~\u0000\u0019q\u0000~\u0000\u0087q\u0000~\u0000}q\u0000~\u0000\u009aq\u0000~\u0000uq\u0000~\u0000kq\u0000~\u0000cq\u0000~\u0000Yq\u0000"
+"~\u0000Qq\u0000~\u00000q\u0000~\u0000\u001cq\u0000~\u0000\u0005q\u0000~\u0000\u008cq\u0000~\u0000zq\u0000~\u0000hq\u0000~\u0000Vq\u0000~\u0000-q\u0000~\u0000\tq\u0000~\u0000\nx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends ru.runa.xpdl.generated.jpdl32.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------");
        }

        protected Unmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return ru.runa.xpdl.generated.jpdl32.impl.NodeTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        if (("description" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrEventOrExceptionHandler().add(((ru.runa.xpdl.generated.jpdl32.impl.DescriptionImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.DescriptionImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("event" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrEventOrExceptionHandler().add(((ru.runa.xpdl.generated.jpdl32.impl.EventImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.EventImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("exception-handler" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrEventOrExceptionHandler().add(((ru.runa.xpdl.generated.jpdl32.impl.ExceptionHandlerImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ExceptionHandlerImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("timer" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrEventOrExceptionHandler().add(((ru.runa.xpdl.generated.jpdl32.impl.TimerImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.TimerImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("transition" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrEventOrExceptionHandler().add(((ru.runa.xpdl.generated.jpdl32.impl.TransitionImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.TransitionImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 10;
                        continue outer;
                    case  7 :
                        attIdx = context.getAttribute("", "accept-propagated-events");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (true) {
                            _Script = ((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Script = ((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  10 :
                        if (("description" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrEventOrExceptionHandler().add(((ru.runa.xpdl.generated.jpdl32.impl.DescriptionImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.DescriptionImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("event" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrEventOrExceptionHandler().add(((ru.runa.xpdl.generated.jpdl32.impl.EventImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.EventImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("exception-handler" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrEventOrExceptionHandler().add(((ru.runa.xpdl.generated.jpdl32.impl.ExceptionHandlerImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ExceptionHandlerImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("timer" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrEventOrExceptionHandler().add(((ru.runa.xpdl.generated.jpdl32.impl.TimerImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.TimerImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("transition" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrEventOrExceptionHandler().add(((ru.runa.xpdl.generated.jpdl32.impl.TransitionImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.TransitionImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  17 :
                        attIdx = context.getAttribute("", "duedate");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  11 :
                        attIdx = context.getAttribute("", "accept-propagated-events");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "async");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "class");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "config-type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "expression");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "ref-name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (true) {
                            _Action = ((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl.class), 12, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Action = ((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl.class), 12, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "async");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  6 :
                        if (("action" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _Action = ((ru.runa.xpdl.generated.jpdl32.impl.ActionImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ActionImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("action" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 11;
                            return ;
                        }
                        if (("script" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _Script = ((ru.runa.xpdl.generated.jpdl32.impl.ScriptImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ScriptImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("script" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        if (("create-timer" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _CreateTimer = ((ru.runa.xpdl.generated.jpdl32.impl.CreateTimerImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.CreateTimerImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("create-timer" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 17;
                            return ;
                        }
                        if (("cancel-timer" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _CancelTimer = ((ru.runa.xpdl.generated.jpdl32.impl.CancelTimerImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.CancelTimerImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("cancel-timer" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 15;
                            return ;
                        }
                        if (("mail" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _Mail = ((ru.runa.xpdl.generated.jpdl32.impl.MailImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.MailImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("mail" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 13;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText2(v);
                            continue outer;
                        }
                        break;
                    case  13 :
                        attIdx = context.getAttribute("", "actors");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "async");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Async = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        state = 10;
                        continue outer;
                    case  7 :
                        attIdx = context.getAttribute("", "accept-propagated-events");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _Script = ((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl) spawnChildFromLeaveElement((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl.class), 8, ___uri, ___local, ___qname));
                        return ;
                    case  10 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  17 :
                        attIdx = context.getAttribute("", "duedate");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  12 :
                        if (("action" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("script" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("mail" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  18 :
                        if (("create-timer" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  16 :
                        if (("cancel-timer" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  11 :
                        attIdx = context.getAttribute("", "accept-propagated-events");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "async");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "class");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "config-type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "expression");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "ref-name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _Action = ((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl) spawnChildFromLeaveElement((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl.class), 12, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "async");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText2(v);
                            continue outer;
                        }
                        break;
                    case  13 :
                        attIdx = context.getAttribute("", "actors");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "async");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        state = 10;
                        continue outer;
                    case  7 :
                        if (("accept-propagated-events" == ___local)&&("" == ___uri)) {
                            _Script = ((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl.class), 8, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("name" == ___local)&&("" == ___uri)) {
                            _Script = ((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl.class), 8, ___uri, ___local, ___qname));
                            return ;
                        }
                        _Script = ((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl.class), 8, ___uri, ___local, ___qname));
                        return ;
                    case  10 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  17 :
                        if (("duedate" == ___local)&&("" == ___uri)) {
                            _CreateTimer = ((ru.runa.xpdl.generated.jpdl32.impl.CreateTimerTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.jpdl32.impl.CreateTimerTypeImpl.class), 18, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  11 :
                        if (("accept-propagated-events" == ___local)&&("" == ___uri)) {
                            _Action = ((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl.class), 12, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("async" == ___local)&&("" == ___uri)) {
                            _Action = ((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl.class), 12, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("class" == ___local)&&("" == ___uri)) {
                            _Action = ((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl.class), 12, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("config-type" == ___local)&&("" == ___uri)) {
                            _Action = ((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl.class), 12, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("expression" == ___local)&&("" == ___uri)) {
                            _Action = ((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl.class), 12, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("name" == ___local)&&("" == ___uri)) {
                            _Action = ((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl.class), 12, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("ref-name" == ___local)&&("" == ___uri)) {
                            _Action = ((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl.class), 12, ___uri, ___local, ___qname));
                            return ;
                        }
                        _Action = ((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl.class), 12, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        if (("async" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  15 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            _CancelTimer = ((ru.runa.xpdl.generated.jpdl32.impl.CancelTimerTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.jpdl32.impl.CancelTimerTypeImpl.class), 16, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  3 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        break;
                    case  13 :
                        if (("actors" == ___local)&&("" == ___uri)) {
                            _Mail = ((ru.runa.xpdl.generated.jpdl32.impl.MailTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.jpdl32.impl.MailTypeImpl.class), 14, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("async" == ___local)&&("" == ___uri)) {
                            _Mail = ((ru.runa.xpdl.generated.jpdl32.impl.MailTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.jpdl32.impl.MailTypeImpl.class), 14, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("name" == ___local)&&("" == ___uri)) {
                            _Mail = ((ru.runa.xpdl.generated.jpdl32.impl.MailTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.jpdl32.impl.MailTypeImpl.class), 14, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        state = 10;
                        continue outer;
                    case  7 :
                        attIdx = context.getAttribute("", "accept-propagated-events");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _Script = ((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl) spawnChildFromLeaveAttribute((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl.class), 8, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  2 :
                        if (("async" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  10 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  17 :
                        attIdx = context.getAttribute("", "duedate");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  11 :
                        attIdx = context.getAttribute("", "accept-propagated-events");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "async");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "class");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "config-type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "expression");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "ref-name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _Action = ((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl) spawnChildFromLeaveAttribute((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl.class), 12, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "async");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText2(v);
                            continue outer;
                        }
                        break;
                    case  13 :
                        attIdx = context.getAttribute("", "actors");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "async");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  9 :
                            state = 10;
                            continue outer;
                        case  1 :
                            state = 2;
                            eatText1(value);
                            return ;
                        case  7 :
                            attIdx = context.getAttribute("", "accept-propagated-events");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _Script = ((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl) spawnChildFromText((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl.class), 8, value));
                            return ;
                        case  4 :
                            state = 5;
                            eatText2(value);
                            return ;
                        case  10 :
                            revertToParentFromText(value);
                            return ;
                        case  17 :
                            attIdx = context.getAttribute("", "duedate");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  11 :
                            attIdx = context.getAttribute("", "accept-propagated-events");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "async");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "class");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "config-type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "expression");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "ref-name");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _Action = ((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl) spawnChildFromText((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl.class), 12, value));
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "async");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  15 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText2(v);
                                continue outer;
                            }
                            break;
                        case  13 :
                            attIdx = context.getAttribute("", "actors");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "async");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
