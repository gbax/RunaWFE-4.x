//
// This file was ru.runa.xpdl.generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.05.04 at 12:24:30 PM MSD 
//


package ru.runa.xpdl.generated.jpdl32.impl;

public class TimerTypeImpl implements ru.runa.xpdl.generated.jpdl32.TimerType, com.sun.xml.bind.JAXBObject, ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallableObject, ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializable, ru.runa.xpdl.generated.jpdl32.impl.runtime.ValidatableObject
{

    protected java.lang.String _Name;
    protected ru.runa.xpdl.generated.jpdl32.ScriptType _Script;
    protected ru.runa.xpdl.generated.jpdl32.ActionType _Action;
    protected java.lang.String _Duedate;
    protected java.lang.String _Transition;
    protected java.lang.String _Repeat;
    public final static java.lang.Class version = (ru.runa.xpdl.generated.jpdl32.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (ru.runa.xpdl.generated.jpdl32.TimerType.class);
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public ru.runa.xpdl.generated.jpdl32.ScriptType getScript() {
        return _Script;
    }

    public void setScript(ru.runa.xpdl.generated.jpdl32.ScriptType value) {
        _Script = value;
    }

    public ru.runa.xpdl.generated.jpdl32.ActionType getAction() {
        return _Action;
    }

    public void setAction(ru.runa.xpdl.generated.jpdl32.ActionType value) {
        _Action = value;
    }

    public java.lang.String getDuedate() {
        return _Duedate;
    }

    public void setDuedate(java.lang.String value) {
        _Duedate = value;
    }

    public java.lang.String getTransition() {
        return _Transition;
    }

    public void setTransition(java.lang.String value) {
        _Transition = value;
    }

    public java.lang.String getRepeat() {
        return _Repeat;
    }

    public void setRepeat(java.lang.String value) {
        _Repeat = value;
    }

    public ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingEventHandler createUnmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context) {
        return new ru.runa.xpdl.generated.jpdl32.impl.TimerTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if ((_Script == null)&&(_Action!= null)) {
            if (_Action instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Action), "Action");
            } else {
                context.startElement("urn:jbpm.org:jpdl-3.2", "action");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Action), "Action");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Action), "Action");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Action), "Action");
                context.endElement();
            }
        } else {
            if ((_Script!= null)&&(_Action == null)) {
                if (_Script instanceof javax.xml.bind.Element) {
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _Script), "Script");
                } else {
                    context.startElement("urn:jbpm.org:jpdl-3.2", "script");
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Script), "Script");
                    context.endNamespaceDecls();
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Script), "Script");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _Script), "Script");
                    context.endElement();
                }
            }
        }
    }

    public void serializeAttributes(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startAttribute("", "duedate");
        try {
            context.text(((java.lang.String) _Duedate), "Duedate");
        } catch (java.lang.Exception e) {
            ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_Name!= null) {
            context.startAttribute("", "name");
            try {
                context.text(((java.lang.String) _Name), "Name");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Repeat!= null) {
            context.startAttribute("", "repeat");
            try {
                context.text(((java.lang.String) _Repeat), "Repeat");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Transition!= null) {
            context.startAttribute("", "transition");
            try {
                context.text(((java.lang.String) _Transition), "Transition");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if ((_Script == null)&&(_Action!= null)) {
            if (_Action instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Action), "Action");
            }
        } else {
            if ((_Script!= null)&&(_Action == null)) {
                if (_Script instanceof javax.xml.bind.Element) {
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Script), "Script");
                }
            }
        }
    }

    public void serializeURIs(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if ((_Script == null)&&(_Action!= null)) {
            if (_Action instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Action), "Action");
            }
        } else {
            if ((_Script!= null)&&(_Action == null)) {
                if (_Script instanceof javax.xml.bind.Element) {
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Script), "Script");
                }
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (ru.runa.xpdl.generated.jpdl32.TimerType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv."
+"grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\tsr\u0000\u0011java.lang.Bool"
+"ean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\tq\u0000~\u0000\rpsq\u0000~\u0000\tq\u0000~\u0000\rpsr\u0000\'com.su"
+"n.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fL"
+"com/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Elemen"
+"tExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq"
+"\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\rp\u0000sq\u0000~\u0000\tppsr\u0000 com.sun.msv.grammar.OneOrMoreEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003ex"
+"pq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\rpsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0011xq\u0000~\u0000\u0003q\u0000~\u0000\rpsr\u00002com.sun.msv"
+".grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~"
+"\u0000\f\u0001psr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.s"
+"un.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar"
+".Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001cpsr\u0000#com."
+"sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Lja"
+"va/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000#xq\u0000~\u0000\u001et\u0000\u0017generated.jpdl32"
+".Actiont\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0010q"
+"\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0010pp\u0000sq\u0000~\u0000\tppsq\u0000~\u0000\u0015q\u0000~\u0000\rpsq\u0000~\u0000\u0018q\u0000~\u0000\rpq\u0000~\u0000\u001b"
+"q\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000\u001bgenerated.jpdl32.ActionTypeq\u0000~\u0000&sq\u0000~\u0000\tpps"
+"q\u0000~\u0000\u0018q\u0000~\u0000\rpsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000"
+"\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom"
+"/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xs"
+"d.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAt"
+"omicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000#L\u0000\btypeNameq\u0000~\u0000#L\u0000\nwhiteSpacet\u0000.Lco"
+"m/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w"
+"3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.Whi"
+"teSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype"
+".xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar"
+".Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\rpsr\u0000\u001bcom."
+"sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000#L\u0000\fnamesp"
+"aceURIq\u0000~\u0000#xpq\u0000~\u0000<q\u0000~\u0000;sq\u0000~\u0000\"t\u0000\u0004typet\u0000)http://www.w3.org/200"
+"1/XMLSchema-instanceq\u0000~\u0000!sq\u0000~\u0000\"t\u0000\u0006actiont\u0000\u0015urn:jbpm.org:jpdl"
+"-3.2sq\u0000~\u0000\u0010q\u0000~\u0000\rp\u0000sq\u0000~\u0000\tppsq\u0000~\u0000\u0015q\u0000~\u0000\rpsq\u0000~\u0000\u0018q\u0000~\u0000\rpq\u0000~\u0000\u001bq\u0000~\u0000\u001fq"
+"\u0000~\u0000!sq\u0000~\u0000\"t\u0000\u0017generated.jpdl32.Scriptq\u0000~\u0000&sq\u0000~\u0000\u0010q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0000"
+"ppsq\u0000~\u0000\u0010pp\u0000sq\u0000~\u0000\tppsq\u0000~\u0000\u0015q\u0000~\u0000\rpsq\u0000~\u0000\u0018q\u0000~\u0000\rpq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq"
+"\u0000~\u0000\"t\u0000\u001bgenerated.jpdl32.ScriptTypeq\u0000~\u0000&sq\u0000~\u0000\tppsq\u0000~\u0000\u0018q\u0000~\u0000\rpq"
+"\u0000~\u00004q\u0000~\u0000Dq\u0000~\u0000!sq\u0000~\u0000\"t\u0000\u0006scriptq\u0000~\u0000Iq\u0000~\u0000!sq\u0000~\u0000\u0018ppsq\u0000~\u00001q\u0000~\u0000\rps"
+"r\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlways"
+"Validxq\u0000~\u00006q\u0000~\u0000;t\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteS"
+"paceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000>\u0001q\u0000~\u0000Asq\u0000~\u0000Bq\u0000~\u0000`q\u0000~\u0000"
+";sq\u0000~\u0000\"t\u0000\u0007duedatet\u0000\u0000sq\u0000~\u0000\tppsq\u0000~\u0000\u0018q\u0000~\u0000\rpq\u0000~\u0000]sq\u0000~\u0000\"t\u0000\u0004nameq\u0000"
+"~\u0000fq\u0000~\u0000!sq\u0000~\u0000\tppsq\u0000~\u0000\u0018q\u0000~\u0000\rpq\u0000~\u0000]sq\u0000~\u0000\"t\u0000\u0006repeatq\u0000~\u0000fq\u0000~\u0000!sq"
+"\u0000~\u0000\tppsq\u0000~\u0000\u0018q\u0000~\u0000\rpq\u0000~\u0000]sq\u0000~\u0000\"t\u0000\ntransitionq\u0000~\u0000fq\u0000~\u0000!sr\u0000\"com."
+"sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/"
+"sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv."
+"grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstrea"
+"mVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000"
+"\u0000\u0017\u0001pq\u0000~\u0000\u0006q\u0000~\u0000\nq\u0000~\u0000\bq\u0000~\u0000\u000eq\u0000~\u0000(q\u0000~\u0000Qq\u0000~\u0000\u000fq\u0000~\u0000/q\u0000~\u0000Xq\u0000~\u0000\u000bq\u0000~\u0000oq"
+"\u0000~\u0000\u0007q\u0000~\u0000\u0017q\u0000~\u0000+q\u0000~\u0000Lq\u0000~\u0000Tq\u0000~\u0000kq\u0000~\u0000\u0014q\u0000~\u0000*q\u0000~\u0000Kq\u0000~\u0000Sq\u0000~\u0000\u0005q\u0000~\u0000gx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends ru.runa.xpdl.generated.jpdl32.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context) {
            super(context, "------------------");
        }

        protected Unmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return ru.runa.xpdl.generated.jpdl32.impl.TimerTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        attIdx = context.getAttribute("", "duedate");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText2(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  12 :
                        if (("action" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _Action = ((ru.runa.xpdl.generated.jpdl32.impl.ActionImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ActionImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("action" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 14;
                            return ;
                        }
                        if (("script" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _Script = ((ru.runa.xpdl.generated.jpdl32.impl.ScriptImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ScriptImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("script" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        state = 13;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "accept-propagated-events");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (true) {
                            _Script = ((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Script = ((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl.class), 17, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  6 :
                        attIdx = context.getAttribute("", "repeat");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText3(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  13 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  9 :
                        attIdx = context.getAttribute("", "transition");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText4(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  14 :
                        attIdx = context.getAttribute("", "accept-propagated-events");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "async");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "class");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "config-type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "expression");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "ref-name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (true) {
                            _Action = ((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Action = ((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl.class), 15, ___uri, ___local, ___qname, __atts));
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Duedate = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Repeat = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Transition = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        attIdx = context.getAttribute("", "duedate");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText2(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  12 :
                        state = 13;
                        continue outer;
                    case  15 :
                        if (("action" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            context.popAttributes();
                            state = 13;
                            return ;
                        }
                        break;
                    case  16 :
                        attIdx = context.getAttribute("", "accept-propagated-events");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _Script = ((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl) spawnChildFromLeaveElement((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl.class), 17, ___uri, ___local, ___qname));
                        return ;
                    case  6 :
                        attIdx = context.getAttribute("", "repeat");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText3(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  13 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  17 :
                        if (("script" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            context.popAttributes();
                            state = 13;
                            return ;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "transition");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText4(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  14 :
                        attIdx = context.getAttribute("", "accept-propagated-events");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "async");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "class");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "config-type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "expression");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "ref-name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _Action = ((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl) spawnChildFromLeaveElement((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl.class), 15, ___uri, ___local, ___qname));
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("duedate" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  3 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  12 :
                        state = 13;
                        continue outer;
                    case  16 :
                        if (("accept-propagated-events" == ___local)&&("" == ___uri)) {
                            _Script = ((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl.class), 17, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("name" == ___local)&&("" == ___uri)) {
                            _Script = ((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl.class), 17, ___uri, ___local, ___qname));
                            return ;
                        }
                        _Script = ((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl.class), 17, ___uri, ___local, ___qname));
                        return ;
                    case  6 :
                        if (("repeat" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  13 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        if (("transition" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  14 :
                        if (("accept-propagated-events" == ___local)&&("" == ___uri)) {
                            _Action = ((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl.class), 15, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("async" == ___local)&&("" == ___uri)) {
                            _Action = ((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl.class), 15, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("class" == ___local)&&("" == ___uri)) {
                            _Action = ((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl.class), 15, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("config-type" == ___local)&&("" == ___uri)) {
                            _Action = ((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl.class), 15, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("expression" == ___local)&&("" == ___uri)) {
                            _Action = ((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl.class), 15, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("name" == ___local)&&("" == ___uri)) {
                            _Action = ((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl.class), 15, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("ref-name" == ___local)&&("" == ___uri)) {
                            _Action = ((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl.class), 15, ___uri, ___local, ___qname));
                            return ;
                        }
                        _Action = ((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl.class), 15, ___uri, ___local, ___qname));
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        attIdx = context.getAttribute("", "duedate");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case  2 :
                        if (("duedate" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText2(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  12 :
                        state = 13;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "accept-propagated-events");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _Script = ((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl) spawnChildFromLeaveAttribute((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl.class), 17, ___uri, ___local, ___qname));
                        return ;
                    case  6 :
                        attIdx = context.getAttribute("", "repeat");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText3(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  5 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  13 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  8 :
                        if (("repeat" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "transition");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText4(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  14 :
                        attIdx = context.getAttribute("", "accept-propagated-events");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "async");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "class");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "config-type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "expression");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "ref-name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _Action = ((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl) spawnChildFromLeaveAttribute((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl.class), 15, ___uri, ___local, ___qname));
                        return ;
                    case  11 :
                        if (("transition" == ___local)&&("" == ___uri)) {
                            state = 12;
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  0 :
                            attIdx = context.getAttribute("", "duedate");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  1 :
                            state = 2;
                            eatText1(value);
                            return ;
                        case  4 :
                            state = 5;
                            eatText2(value);
                            return ;
                        case  3 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText2(v);
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  7 :
                            state = 8;
                            eatText3(value);
                            return ;
                        case  12 :
                            state = 13;
                            continue outer;
                        case  16 :
                            attIdx = context.getAttribute("", "accept-propagated-events");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _Script = ((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl) spawnChildFromText((ru.runa.xpdl.generated.jpdl32.impl.ScriptTypeImpl.class), 17, value));
                            return ;
                        case  6 :
                            attIdx = context.getAttribute("", "repeat");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText3(v);
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  10 :
                            state = 11;
                            eatText4(value);
                            return ;
                        case  13 :
                            revertToParentFromText(value);
                            return ;
                        case  9 :
                            attIdx = context.getAttribute("", "transition");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText4(v);
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  14 :
                            attIdx = context.getAttribute("", "accept-propagated-events");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "async");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "class");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "config-type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "expression");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "ref-name");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _Action = ((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl) spawnChildFromText((ru.runa.xpdl.generated.jpdl32.impl.ActionTypeImpl.class), 15, value));
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
