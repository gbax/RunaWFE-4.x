//
// This file was ru.runa.xpdl.generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.05.23 at 09:51:37 PM MSD 
//


package ru.runa.xpdl.generated.bpmnxpdl;


/**
 * Java content class for anonymous complex type.
 * <p>The following schema fragment specifies the expected content contained within this java content object. (defined at file:/C:/AltLinux/projects/xsd/bpmnxpdl_31.xsd line 2612)
 * <p>
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice minOccurs="0">
 *         &lt;element ref="{http://www.wfmc.org/2008/XPDL2.1}TaskService"/>
 *         &lt;element ref="{http://www.wfmc.org/2008/XPDL2.1}TaskReceive"/>
 *         &lt;element ref="{http://www.wfmc.org/2008/XPDL2.1}TaskManual"/>
 *         &lt;element ref="{http://www.wfmc.org/2008/XPDL2.1}TaskReference"/>
 *         &lt;element ref="{http://www.wfmc.org/2008/XPDL2.1}TaskScript"/>
 *         &lt;element ref="{http://www.wfmc.org/2008/XPDL2.1}TaskSend"/>
 *         &lt;element ref="{http://www.wfmc.org/2008/XPDL2.1}TaskUser"/>
 *         &lt;element ref="{http://www.wfmc.org/2008/XPDL2.1}TaskApplication"/>
 *       &lt;/choice>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 */
public interface TaskType {


    /**
     * BPMN: Task Type = User.  Generally used for human tasks.
     * 
     * @return
     *     possible object is
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskUserType}
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskUser}
     */
    ru.runa.xpdl.generated.bpmnxpdl.TaskUserType getTaskUser();

    /**
     * BPMN: Task Type = User.  Generally used for human tasks.
     * 
     * @param value
     *     allowed object is
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskUserType}
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskUser}
     */
    void setTaskUser(ru.runa.xpdl.generated.bpmnxpdl.TaskUserType value);

    /**
     * BPMN: TaskType = Manual.  Used for human tasks other than those accessed via workflow.
     * 
     * @return
     *     possible object is
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskManual}
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskManualType}
     */
    ru.runa.xpdl.generated.bpmnxpdl.TaskManualType getTaskManual();

    /**
     * BPMN: TaskType = Manual.  Used for human tasks other than those accessed via workflow.
     * 
     * @param value
     *     allowed object is
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskManual}
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskManualType}
     */
    void setTaskManual(ru.runa.xpdl.generated.bpmnxpdl.TaskManualType value);

    /**
     * BPMN: Task Type = Send.  Equivalent to a "throwing" message event.  Sends a message immediately and continues.  In BPMN, "message" signifies any signal sent outside the process (pool).
     * 
     * @return
     *     possible object is
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskSend}
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskSendType}
     */
    ru.runa.xpdl.generated.bpmnxpdl.TaskSendType getTaskSend();

    /**
     * BPMN: Task Type = Send.  Equivalent to a "throwing" message event.  Sends a message immediately and continues.  In BPMN, "message" signifies any signal sent outside the process (pool).
     * 
     * @param value
     *     allowed object is
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskSend}
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskSendType}
     */
    void setTaskSend(ru.runa.xpdl.generated.bpmnxpdl.TaskSendType value);

    /**
     * BPMN: TaskType = Script.  Used for automated tasks executed by scripts on process engine, to distinguish from automated tasks performed externally (Service).
     * 
     * @return
     *     possible object is
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskScriptType}
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskScript}
     */
    ru.runa.xpdl.generated.bpmnxpdl.TaskScriptType getTaskScript();

    /**
     * BPMN: TaskType = Script.  Used for automated tasks executed by scripts on process engine, to distinguish from automated tasks performed externally (Service).
     * 
     * @param value
     *     allowed object is
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskScriptType}
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskScript}
     */
    void setTaskScript(ru.runa.xpdl.generated.bpmnxpdl.TaskScriptType value);

    /**
     * Gets the value of the taskApplication property.
     * 
     * @return
     *     possible object is
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskApplicationType}
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskApplication}
     */
    ru.runa.xpdl.generated.bpmnxpdl.TaskApplicationType getTaskApplication();

    /**
     * Sets the value of the taskApplication property.
     * 
     * @param value
     *     allowed object is
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskApplicationType}
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskApplication}
     */
    void setTaskApplication(ru.runa.xpdl.generated.bpmnxpdl.TaskApplicationType value);

    /**
     * BPMN: TaskType = Receive.  Waits for a message, then continues. Equivalent to a "catching" message event.  In BPMN, "message" generally signifies any signal from outside the process (pool).
     * 
     * @return
     *     possible object is
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskReceive}
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskReceiveType}
     */
    ru.runa.xpdl.generated.bpmnxpdl.TaskReceiveType getTaskReceive();

    /**
     * BPMN: TaskType = Receive.  Waits for a message, then continues. Equivalent to a "catching" message event.  In BPMN, "message" generally signifies any signal from outside the process (pool).
     * 
     * @param value
     *     allowed object is
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskReceive}
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskReceiveType}
     */
    void setTaskReceive(ru.runa.xpdl.generated.bpmnxpdl.TaskReceiveType value);

    /**
     * BPMN: TaskType = Reference.  Task properties defined in referenced activity.
     * 
     * @return
     *     possible object is
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskReferenceType}
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskReference}
     */
    ru.runa.xpdl.generated.bpmnxpdl.TaskReferenceType getTaskReference();

    /**
     * BPMN: TaskType = Reference.  Task properties defined in referenced activity.
     * 
     * @param value
     *     allowed object is
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskReferenceType}
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskReference}
     */
    void setTaskReference(ru.runa.xpdl.generated.bpmnxpdl.TaskReferenceType value);

    /**
     * BPMN: TaskType = Service.  In BPMN generally signifies any automated activity.
     * 
     * @return
     *     possible object is
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskServiceType}
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskService}
     */
    ru.runa.xpdl.generated.bpmnxpdl.TaskServiceType getTaskService();

    /**
     * BPMN: TaskType = Service.  In BPMN generally signifies any automated activity.
     * 
     * @param value
     *     allowed object is
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskServiceType}
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.TaskService}
     */
    void setTaskService(ru.runa.xpdl.generated.bpmnxpdl.TaskServiceType value);

}
