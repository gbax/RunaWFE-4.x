//
// This file was ru.runa.xpdl.generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.05.23 at 09:51:37 PM MSD 
//


package ru.runa.xpdl.generated.bpmnxpdl.impl;

public class ArtifactTypeImpl implements ru.runa.xpdl.generated.bpmnxpdl.ArtifactType, com.sun.xml.bind.JAXBObject, ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.UnmarshallableObject, ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.XMLSerializable, ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.ValidatableObject
{

    protected java.lang.String _Name;
    protected com.sun.xml.bind.util.ListImpl _Any;
    protected java.lang.String _Group2;
    protected java.lang.String _TextAnnotation;
    protected ru.runa.xpdl.generated.bpmnxpdl.DataObjectType _DataObject;
    protected java.lang.String _ArtifactType;
    protected java.lang.String _Id;
    protected ru.runa.xpdl.generated.bpmnxpdl.GroupType _Group;
    protected ru.runa.xpdl.generated.bpmnxpdl.ObjectType _Object;
    protected ru.runa.xpdl.generated.bpmnxpdl.NodeGraphicsInfosType _NodeGraphicsInfos;
    public final static java.lang.Class version = (ru.runa.xpdl.generated.bpmnxpdl.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (ru.runa.xpdl.generated.bpmnxpdl.ArtifactType.class);
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getAny() {
        if (_Any == null) {
            _Any = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Any;
    }

    public java.util.List getAny() {
        return _getAny();
    }

    public java.lang.String getGroup2() {
        return _Group2;
    }

    public void setGroup2(java.lang.String value) {
        _Group2 = value;
    }

    public java.lang.String getTextAnnotation() {
        return _TextAnnotation;
    }

    public void setTextAnnotation(java.lang.String value) {
        _TextAnnotation = value;
    }

    public ru.runa.xpdl.generated.bpmnxpdl.DataObjectType getDataObject() {
        return _DataObject;
    }

    public void setDataObject(ru.runa.xpdl.generated.bpmnxpdl.DataObjectType value) {
        _DataObject = value;
    }

    public java.lang.String getArtifactType() {
        return _ArtifactType;
    }

    public void setArtifactType(java.lang.String value) {
        _ArtifactType = value;
    }

    public java.lang.String getId() {
        return _Id;
    }

    public void setId(java.lang.String value) {
        _Id = value;
    }

    public ru.runa.xpdl.generated.bpmnxpdl.GroupType getGroup() {
        return _Group;
    }

    public void setGroup(ru.runa.xpdl.generated.bpmnxpdl.GroupType value) {
        _Group = value;
    }

    public ru.runa.xpdl.generated.bpmnxpdl.ObjectType getObject() {
        return _Object;
    }

    public void setObject(ru.runa.xpdl.generated.bpmnxpdl.ObjectType value) {
        _Object = value;
    }

    public ru.runa.xpdl.generated.bpmnxpdl.NodeGraphicsInfosType getNodeGraphicsInfos() {
        return _NodeGraphicsInfos;
    }

    public void setNodeGraphicsInfos(ru.runa.xpdl.generated.bpmnxpdl.NodeGraphicsInfosType value) {
        _NodeGraphicsInfos = value;
    }

    public ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.UnmarshallingEventHandler createUnmarshaller(ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.UnmarshallingContext context) {
        return new ru.runa.xpdl.generated.bpmnxpdl.impl.ArtifactTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_Any == null)? 0 :_Any.size());
        if (_NodeGraphicsInfos!= null) {
            if (_NodeGraphicsInfos instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _NodeGraphicsInfos), "NodeGraphicsInfos");
            } else {
                context.startElement("http://www.wfmc.org/2008/XPDL2.1", "NodeGraphicsInfos");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _NodeGraphicsInfos), "NodeGraphicsInfos");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _NodeGraphicsInfos), "NodeGraphicsInfos");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _NodeGraphicsInfos), "NodeGraphicsInfos");
                context.endElement();
            }
        }
        if (_Object!= null) {
            if (_Object instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Object), "Object");
            } else {
                context.startElement("http://www.wfmc.org/2008/XPDL2.1", "Object");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Object), "Object");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Object), "Object");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Object), "Object");
                context.endElement();
            }
        }
        if (_Group!= null) {
            if (_Group instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Group), "Group");
            } else {
                context.startElement("http://www.wfmc.org/2008/XPDL2.1", "Group");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Group), "Group");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Group), "Group");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Group), "Group");
                context.endElement();
            }
        }
        if (_DataObject!= null) {
            if (_DataObject instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _DataObject), "DataObject");
            } else {
                context.startElement("http://www.wfmc.org/2008/XPDL2.1", "DataObject");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _DataObject), "DataObject");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _DataObject), "DataObject");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _DataObject), "DataObject");
                context.endElement();
            }
        }
        while (idx2 != len2) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Any.get(idx2 ++)), "Any");
        }
    }

    public void serializeAttributes(ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_Any == null)? 0 :_Any.size());
        context.startAttribute("", "ArtifactType");
        try {
            context.text(((java.lang.String) _ArtifactType), "ArtifactType");
        } catch (java.lang.Exception e) {
            ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_Group2 != null) {
            context.startAttribute("", "Group2");
            try {
                context.text(((java.lang.String) _Group2), "Group2");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "Id");
        try {
            context.text(((java.lang.String) _Id), "Id");
        } catch (java.lang.Exception e) {
            ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_Name!= null) {
            context.startAttribute("", "Name");
            try {
                context.text(((java.lang.String) _Name), "Name");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_TextAnnotation!= null) {
            context.startAttribute("", "TextAnnotation");
            try {
                context.text(((java.lang.String) _TextAnnotation), "TextAnnotation");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_NodeGraphicsInfos!= null) {
            if (_NodeGraphicsInfos instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _NodeGraphicsInfos), "NodeGraphicsInfos");
            }
        }
        if (_Object!= null) {
            if (_Object instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Object), "Object");
            }
        }
        if (_Group!= null) {
            if (_Group instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Group), "Group");
            }
        }
        if (_DataObject!= null) {
            if (_DataObject instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _DataObject), "DataObject");
            }
        }
        while (idx2 != len2) {
            idx2 += 1;
        }
    }

    public void serializeURIs(ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_Any == null)? 0 :_Any.size());
        if (_NodeGraphicsInfos!= null) {
            if (_NodeGraphicsInfos instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _NodeGraphicsInfos), "NodeGraphicsInfos");
            }
        }
        if (_Object!= null) {
            if (_Object instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Object), "Object");
            }
        }
        if (_Group!= null) {
            if (_Group instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Group), "Group");
            }
        }
        if (_DataObject!= null) {
            if (_DataObject instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _DataObject), "DataObject");
            }
        }
        while (idx2 != len2) {
            idx2 += 1;
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (ru.runa.xpdl.generated.bpmnxpdl.ArtifactType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\u000esr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005val"
+"uexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001"
+"L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.ms"
+"v.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributes"
+"L\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u000eppsr\u0000 com.sun.msv.gra"
+"mmar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u0000 com.sun.msv.grammar.At"
+"tributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0014xq\u0000~\u0000\u0003q\u0000~\u0000\u0012"
+"psr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0011\u0001q\u0000~\u0000\u001esr\u0000 com.sun.msv.grammar.AnyNameClass"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000"
+"0com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0003q\u0000~\u0000\u001fq\u0000~\u0000$sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000&x"
+"q\u0000~\u0000!t\u0000$ru.runa.xpdl.generated.bpmnxpdl.NodeGraphicsInfost\u0000+http://java.s"
+"un.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0013q\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0013pp\u0000"
+"sq\u0000~\u0000\u000eppsq\u0000~\u0000\u0018q\u0000~\u0000\u0012psq\u0000~\u0000\u001bq\u0000~\u0000\u0012pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000(gene"
+"rated.bpmnxpdl.NodeGraphicsInfosTypeq\u0000~\u0000)sq\u0000~\u0000\u000eppsq\u0000~\u0000\u001bq\u0000~\u0000\u0012"
+"psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/rela"
+"xng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/u"
+"til/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fna"
+"mespaceUriq\u0000~\u0000&L\u0000\btypeNameq\u0000~\u0000&L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/"
+"datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001"
+"/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpacePro"
+"cessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.White"
+"SpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expressio"
+"n$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv.ut"
+"il.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000&L\u0000\fnamespaceURIq\u0000~\u0000"
+"&xpq\u0000~\u0000?q\u0000~\u0000>sq\u0000~\u0000%t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchem"
+"a-instanceq\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0011NodeGraphicsInfost\u0000 http://www.wfmc."
+"org/2008/XPDL2.1q\u0000~\u0000$sq\u0000~\u0000\u000eppsq\u0000~\u0000\u000eq\u0000~\u0000\u0012psq\u0000~\u0000\u0013q\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u000e"
+"ppsq\u0000~\u0000\u0018q\u0000~\u0000\u0012psq\u0000~\u0000\u001bq\u0000~\u0000\u0012pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0019generated."
+"bpmnxpdl.Objectq\u0000~\u0000)sq\u0000~\u0000\u0013q\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0013pp\u0000sq\u0000~\u0000\u000eppsq"
+"\u0000~\u0000\u0018q\u0000~\u0000\u0012psq\u0000~\u0000\u001bq\u0000~\u0000\u0012pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000\u001dgenerated.bpmn"
+"xpdl.ObjectTypeq\u0000~\u0000)sq\u0000~\u0000\u000eppsq\u0000~\u0000\u001bq\u0000~\u0000\u0012pq\u0000~\u00007q\u0000~\u0000Gq\u0000~\u0000$sq\u0000~\u0000"
+"%t\u0000\u0006Objectq\u0000~\u0000Lq\u0000~\u0000$sq\u0000~\u0000\u000eppsq\u0000~\u0000\u000eq\u0000~\u0000\u0012psq\u0000~\u0000\u0013q\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u000ep"
+"psq\u0000~\u0000\u0018q\u0000~\u0000\u0012psq\u0000~\u0000\u001bq\u0000~\u0000\u0012pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0018generated.b"
+"pmnxpdl.Groupq\u0000~\u0000)sq\u0000~\u0000\u0013q\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0013pp\u0000sq\u0000~\u0000\u000eppsq\u0000~"
+"\u0000\u0018q\u0000~\u0000\u0012psq\u0000~\u0000\u001bq\u0000~\u0000\u0012pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000\u001cgenerated.bpmnxp"
+"dl.GroupTypeq\u0000~\u0000)sq\u0000~\u0000\u000eppsq\u0000~\u0000\u001bq\u0000~\u0000\u0012pq\u0000~\u00007q\u0000~\u0000Gq\u0000~\u0000$sq\u0000~\u0000%t\u0000"
+"\u0005Groupq\u0000~\u0000Lq\u0000~\u0000$sq\u0000~\u0000\u000eppsq\u0000~\u0000\u000eq\u0000~\u0000\u0012psq\u0000~\u0000\u0013q\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u000eppsq\u0000"
+"~\u0000\u0018q\u0000~\u0000\u0012psq\u0000~\u0000\u001bq\u0000~\u0000\u0012pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000\u001dgenerated.bpmnx"
+"pdl.DataObjectq\u0000~\u0000)sq\u0000~\u0000\u0013q\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0013pp\u0000sq\u0000~\u0000\u000eppsq\u0000"
+"~\u0000\u0018q\u0000~\u0000\u0012psq\u0000~\u0000\u001bq\u0000~\u0000\u0012pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000!ru.runa.xpdl.generated.bpmnx"
+"pdl.DataObjectTypeq\u0000~\u0000)sq\u0000~\u0000\u000eppsq\u0000~\u0000\u001bq\u0000~\u0000\u0012pq\u0000~\u00007q\u0000~\u0000Gq\u0000~\u0000$sq"
+"\u0000~\u0000%t\u0000\nDataObjectq\u0000~\u0000Lq\u0000~\u0000$sq\u0000~\u0000\u000eppsq\u0000~\u0000\u0018q\u0000~\u0000\u0012psq\u0000~\u0000\u0013q\u0000~\u0000\u0012p\u0000"
+"sq\u0000~\u0000\u001bppq\u0000~\u0000\u001esr\u0000\'com.sun.msv.grammar.DifferenceNameClass\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003nc1q\u0000~\u0000\u0014L\u0000\u0003nc2q\u0000~\u0000\u0014xq\u0000~\u0000!q\u0000~\u0000\"sr\u0000#com.sun.msv.gram"
+"mar.ChoiceNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003nc1q\u0000~\u0000\u0014L\u0000\u0003nc2q\u0000~\u0000\u0014xq\u0000~\u0000!sr"
+"\u0000&com.sun.msv.grammar.NamespaceNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\fnamesp"
+"aceURIq\u0000~\u0000&xq\u0000~\u0000!t\u0000\u0000sq\u0000~\u0000\u0091q\u0000~\u0000Lsq\u0000~\u0000\u0091q\u0000~\u0000)q\u0000~\u0000$sq\u0000~\u0000\u001bppsq\u0000~\u0000"
+"4ppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L"
+"\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype.xsd.DataT"
+"ypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.dataty"
+"pe.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needVal"
+"ueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatyp"
+"eImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteTy"
+"pe;L\u0000\tfacetNameq\u0000~\u0000&xq\u0000~\u0000;q\u0000~\u0000Lpq\u0000~\u0000B\u0000\u0000sr\u0000$com.sun.msv.datat"
+"ype.xsd.NmtokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\"com.sun.msv.datatype.xsd.T"
+"okenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u00009q\u0000~\u0000>t\u0000\u0007NMTOKENq\u0000~\u0000B\u0000q\u0000~\u0000\u00a2t\u0000\u000b"
+"enumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003t"
+"\u0000\nAnnotationt\u0000\nDataObjectt\u0000\u0005Groupxq\u0000~\u0000Dsq\u0000~\u0000Et\u0000\u000fNMTOKEN-deri"
+"vedq\u0000~\u0000Lsq\u0000~\u0000%t\u0000\fArtifactTypeq\u0000~\u0000\u0093sq\u0000~\u0000\u000eppsq\u0000~\u0000\u001bq\u0000~\u0000\u0012psq\u0000~\u00004"
+"q\u0000~\u0000\u0012psq\u0000~\u0000\u00a1q\u0000~\u0000>t\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.White"
+"SpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000A\u0001q\u0000~\u0000Dsq\u0000~\u0000Eq\u0000~\u0000\u00b2q\u0000~"
+"\u0000>sq\u0000~\u0000%t\u0000\u0006Group2q\u0000~\u0000\u0093q\u0000~\u0000$sq\u0000~\u0000\u001bppsq\u0000~\u00004ppq\u0000~\u0000\u00a2q\u0000~\u0000Dsq\u0000~\u0000Eq"
+"\u0000~\u0000\u00a3q\u0000~\u0000>sq\u0000~\u0000%t\u0000\u0002Idq\u0000~\u0000\u0093sq\u0000~\u0000\u000eppsq\u0000~\u0000\u001bq\u0000~\u0000\u0012pq\u0000~\u0000\u00b0sq\u0000~\u0000%t\u0000\u0004N"
+"ameq\u0000~\u0000\u0093q\u0000~\u0000$sq\u0000~\u0000\u000eppsq\u0000~\u0000\u001bq\u0000~\u0000\u0012pq\u0000~\u0000\u00b0sq\u0000~\u0000%t\u0000\u000eTextAnnotatio"
+"nq\u0000~\u0000\u0093q\u0000~\u0000$sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001"
+"L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash"
+";xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c"
+"\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/"
+"ExpressionPool;xp\u0000\u0000\u0000.\u0001pq\u0000~\u0000\u001aq\u0000~\u0000.q\u0000~\u0000Qq\u0000~\u0000Yq\u0000~\u0000eq\u0000~\u0000mq\u0000~\u0000yq\u0000"
+"~\u0000\u0081q\u0000~\u0000\bq\u0000~\u0000\u00c1q\u0000~\u0000\u0007q\u0000~\u0000\u0017q\u0000~\u0000-q\u0000~\u0000Pq\u0000~\u0000Xq\u0000~\u0000dq\u0000~\u0000lq\u0000~\u0000xq\u0000~\u0000\u0080q\u0000"
+"~\u0000\u0005q\u0000~\u0000+q\u0000~\u0000Vq\u0000~\u0000jq\u0000~\u0000~q\u0000~\u0000\u0089q\u0000~\u0000\fq\u0000~\u0000\u008aq\u0000~\u0000\rq\u0000~\u0000\u00bdq\u0000~\u00002q\u0000~\u0000]q\u0000"
+"~\u0000qq\u0000~\u0000\u0085q\u0000~\u0000\u000fq\u0000~\u0000\u0010q\u0000~\u0000Nq\u0000~\u0000Mq\u0000~\u0000bq\u0000~\u0000aq\u0000~\u0000vq\u0000~\u0000uq\u0000~\u0000\u0006q\u0000~\u0000\nq\u0000"
+"~\u0000\tq\u0000~\u0000\u00aeq\u0000~\u0000\u000bx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.UnmarshallingContext context) {
            super(context, "-----------------------------");
        }

        protected Unmarshaller(ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return ru.runa.xpdl.generated.bpmnxpdl.impl.ArtifactTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  27 :
                        if (("NodeGraphicsInfo" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            _NodeGraphicsInfos = ((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl.class), 28, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NodeGraphicsInfo" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            _NodeGraphicsInfos = ((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl.class), 28, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (!(("" == ___uri)||("http://www.wfmc.org/2008/XPDL2.1" == ___uri))) {
                            _NodeGraphicsInfos = ((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl.class), 28, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _NodeGraphicsInfos = ((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl.class), 28, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  15 :
                        if (("NodeGraphicsInfos" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            _NodeGraphicsInfos = ((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosImpl.class), 16, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NodeGraphicsInfos" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 27;
                            return ;
                        }
                        state = 16;
                        continue outer;
                    case  23 :
                        if (!(("" == ___uri)||("http://www.wfmc.org/2008/XPDL2.1" == ___uri))) {
                            java.lang.Object co = spawnWildcard(24, ___uri, ___local, ___qname, __atts);
                            if (co!= null) {
                                _getAny().add(co);
                            }
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  25 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  21 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  17 :
                        if (("Group" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            _Group = ((ru.runa.xpdl.generated.bpmnxpdl.impl.GroupImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.bpmnxpdl.impl.GroupImpl.class), 20, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Group" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 18;
                            return ;
                        }
                        state = 20;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "Group2");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText1(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText2(v);
                            continue outer;
                        }
                        break;
                    case  20 :
                        if (("DataObject" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            _DataObject = ((ru.runa.xpdl.generated.bpmnxpdl.impl.DataObjectImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.bpmnxpdl.impl.DataObjectImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DataObject" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 21;
                            return ;
                        }
                        state = 23;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "Name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText3(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  16 :
                        if (("Object" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            _Object = ((ru.runa.xpdl.generated.bpmnxpdl.impl.ObjectImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.bpmnxpdl.impl.ObjectImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Object" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 25;
                            return ;
                        }
                        state = 17;
                        continue outer;
                    case  12 :
                        attIdx = context.getAttribute("", "TextAnnotation");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText4(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "ArtifactType");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText5(v);
                            continue outer;
                        }
                        break;
                    case  18 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  24 :
                        if (!(("" == ___uri)||("http://www.wfmc.org/2008/XPDL2.1" == ___uri))) {
                            java.lang.Object co = spawnWildcard(24, ___uri, ___local, ___qname, __atts);
                            if (co!= null) {
                                _getAny().add(co);
                            }
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Group2 = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Id = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _TextAnnotation = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ArtifactType = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  27 :
                        _NodeGraphicsInfos = ((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl) spawnChildFromLeaveElement((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl.class), 28, ___uri, ___local, ___qname));
                        return ;
                    case  15 :
                        state = 16;
                        continue outer;
                    case  28 :
                        if (("NodeGraphicsInfos" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            context.popAttributes();
                            state = 16;
                            return ;
                        }
                        break;
                    case  23 :
                        state = 24;
                        continue outer;
                    case  25 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  21 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  17 :
                        state = 20;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "Group2");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText1(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText2(v);
                            continue outer;
                        }
                        break;
                    case  20 :
                        state = 23;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "Name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText3(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  26 :
                        if (("Object" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            context.popAttributes();
                            state = 17;
                            return ;
                        }
                        break;
                    case  19 :
                        if (("Group" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            context.popAttributes();
                            state = 20;
                            return ;
                        }
                        break;
                    case  16 :
                        state = 17;
                        continue outer;
                    case  22 :
                        if (("DataObject" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            context.popAttributes();
                            state = 23;
                            return ;
                        }
                        break;
                    case  12 :
                        attIdx = context.getAttribute("", "TextAnnotation");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText4(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "ArtifactType");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText5(v);
                            continue outer;
                        }
                        break;
                    case  18 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  24 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  27 :
                        _NodeGraphicsInfos = ((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl.class), 28, ___uri, ___local, ___qname));
                        return ;
                    case  15 :
                        state = 16;
                        continue outer;
                    case  23 :
                        state = 24;
                        continue outer;
                    case  25 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            _Object = ((ru.runa.xpdl.generated.bpmnxpdl.impl.ObjectTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.bpmnxpdl.impl.ObjectTypeImpl.class), 26, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  21 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            _DataObject = ((ru.runa.xpdl.generated.bpmnxpdl.impl.DataObjectTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.bpmnxpdl.impl.DataObjectTypeImpl.class), 22, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  17 :
                        state = 20;
                        continue outer;
                    case  3 :
                        if (("Group2" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  6 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        break;
                    case  20 :
                        state = 23;
                        continue outer;
                    case  9 :
                        if (("Name" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  16 :
                        state = 17;
                        continue outer;
                    case  12 :
                        if (("TextAnnotation" == ___local)&&("" == ___uri)) {
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  0 :
                        if (("ArtifactType" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  18 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            _Group = ((ru.runa.xpdl.generated.bpmnxpdl.impl.GroupTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.bpmnxpdl.impl.GroupTypeImpl.class), 19, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  24 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  11 :
                        if (("Name" == ___local)&&("" == ___uri)) {
                            state = 12;
                            return ;
                        }
                        break;
                    case  27 :
                        _NodeGraphicsInfos = ((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl) spawnChildFromLeaveAttribute((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl.class), 28, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        if (("Group2" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  15 :
                        state = 16;
                        continue outer;
                    case  23 :
                        state = 24;
                        continue outer;
                    case  25 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  21 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  17 :
                        state = 20;
                        continue outer;
                    case  14 :
                        if (("TextAnnotation" == ___local)&&("" == ___uri)) {
                            state = 15;
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "Group2");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText1(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText2(v);
                            continue outer;
                        }
                        break;
                    case  20 :
                        state = 23;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "Name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText3(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  16 :
                        state = 17;
                        continue outer;
                    case  2 :
                        if (("ArtifactType" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  12 :
                        attIdx = context.getAttribute("", "TextAnnotation");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText4(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "ArtifactType");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText5(v);
                            continue outer;
                        }
                        break;
                    case  18 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  8 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  24 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  27 :
                            _NodeGraphicsInfos = ((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl) spawnChildFromText((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl.class), 28, value));
                            return ;
                        case  13 :
                            state = 14;
                            eatText4(value);
                            return ;
                        case  15 :
                            state = 16;
                            continue outer;
                        case  10 :
                            state = 11;
                            eatText3(value);
                            return ;
                        case  1 :
                            state = 2;
                            eatText5(value);
                            return ;
                        case  4 :
                            state = 5;
                            eatText1(value);
                            return ;
                        case  23 :
                            state = 24;
                            continue outer;
                        case  25 :
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  21 :
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  17 :
                            state = 20;
                            continue outer;
                        case  3 :
                            attIdx = context.getAttribute("", "Group2");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText1(v);
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  6 :
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText2(v);
                                continue outer;
                            }
                            break;
                        case  20 :
                            state = 23;
                            continue outer;
                        case  9 :
                            attIdx = context.getAttribute("", "Name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText3(v);
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  16 :
                            state = 17;
                            continue outer;
                        case  12 :
                            attIdx = context.getAttribute("", "TextAnnotation");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 15;
                                eatText4(v);
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "ArtifactType");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText5(v);
                                continue outer;
                            }
                            break;
                        case  18 :
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  7 :
                            state = 8;
                            eatText2(value);
                            return ;
                        case  24 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
