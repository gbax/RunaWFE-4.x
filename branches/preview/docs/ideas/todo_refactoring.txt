1. Нам надо будет денормализовать таблицы подсистемы прав или найти какое то
решение для следующего (sql подзапрос для выбора только объектов на которые
есть права):
       String permissionQuery = "select pm.securedObject from
ru.runa.af.dao.impl.PermissionMapping pm where pm.executor.id in
(:securedOwnersIds) and pm.mask=:securedPermission";
       result.add("(instance.id in (select so.extId from
ru.runa.af.SecuredObject so where so.type in (:securedTypes) and so.id in ("
           + permissionQuery + ")))");
Данный запрос у меня порождал IO ~ 20Mb/sec при загрузке списка процессов +
количества процессов в системе (~38000). Обращение на диски шло из-за работы
с tmpdb. Я посмотрю ещё что можно сделать, но мне кажется сделать
денормализацию было бы полезно.

2. У меня MSSQL использует для хранения строк тип varchar, а по jdbc строки
приходят типа nvarchar, что делает невозможным использование индексов по
строкам и вываливается в full scan, если не предпринимать специальных
действий. Это надо исследовать насколько критично для нас. Можно попробовать
прописать jdbc драйверу useAnsiString (как то так), или оптимизировать
места, критичные для нас.

3. Индексы. Надо их грамотно развесить и убрать ненужные.

4. У администратора нет прав на чтение временной группы. Всем, кто в группе "Администраторы" не проверять и не давать права
(автоматически) ни на что.
 это освободит таблицы в БД на 30% (PERMISSION_MAPPINGS)
Использовать (сейчас используется для раздачи прав по умолчанию) PRIVILEGE_MAPPINGS так: при проверке прав проверять в ней

5. Оптимизировать реализации:
ru.runa.af.dao.impl.SecuredObjectDAOHibernateImpl.get(Identifiable[])

6. Перейти на списки (вместо массивов) - убрать ненужную трансляцию.

7. Очистить неиспользуемые таблицы jbpm

8. Очистить код jbpm от неиспользуемого

9. Сделать runa-commons самым нижним, не зависящем от jbpm и вынести туда все общее для всех проектов (включая jbpm).

9.1. Поддержку форматов переменных перенести (c wf.logic) на уровень jbpm
     Это решит проблемы с типизацией в обработчиках, при показе истории и пр.

10. Патч на изменение типа text на varchar (see https://sourceforge.net/tracker/?func=detail&aid=3481617&group_id=125156&atid=701698)

11.В результате переименования получить более дружественное API.
Например вместо TaskStub -> Task, а в jbpm использовать имена посложнее (JbpmTask)

12. Реализовать работу fork/join по спецификации BPMN2.0

13. При ошибке часто (почти всегда в вебе?) стек-трейс становится очень длинным и повторяющимся. Найти причину и устранить.

14. Предусмотреть список выполненных задач

15. Элемент "слияние"

16. Добавить исключения (события)

17. Источники данных для тегов, MultiSelect

18. Timer on ReceiveMessage

19. GPD: delete jpdl 2 support

20. GPD: delete info form editor messages

21. Add composite variables

22. Move validators from xwork2.jar

23. Improve validators (add ability to use process variables)