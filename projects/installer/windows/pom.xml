<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>ru.runa.wfe</groupId>
  <artifactId>wfe-win-installer</artifactId>
  <version>4.2</version>
  <packaging>pom</packaging>
  <name>RunaWFE application windows installer</name>

  <dependencies>
    <dependency>
      <groupId>com.github.stephenc.java-iso-tools</groupId>
      <artifactId>iso9660-maven-plugin</artifactId>
      <version>2.0.0</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <id>create exe</id>
            <phase>package</phase>
            <configuration>
              <target>

                <mkdir dir="target/artifacts"/>
                <mkdir dir="target/test-result"/>

                <exec executable="cmd" dir="../../wfe/wfe-app" failonerror="false" resultproperty="testResult">
                  <arg value="/C"/>
                  <arg value="mvn clean integration-test -Djboss.zip.file=&quot;${jboss.zip.file}&quot; -Djboss.zip.folder=&quot;${jboss.zip.folder}&quot; -Dappserver=&quot;${appserver}&quot; -Dproject.version=${version}"/>
                </exec>
                <exec executable="cmd" dir="../../wfe/wfe-cactus-it" failonerror="false">
                  <arg value="/C"/>
                  <arg value="mvn surefire-report:report-only"/>
                </exec>
                <copy toDir="target/test-result">
                  <fileset dir="../../wfe/wfe-cactus-it/target">
                    <include name="site/*"/>
                    <include name="surefire-reports/*"/>
                  </fileset>
                </copy>
                <fail message="Build or testin is failed">
                  <condition>
                    <not>
                      <matches string="${testResult}" pattern="0"/>
                    </not>
                  </condition>
                </fail>		
                
                <exec executable="cmd" dir="../../wfe/wfe-appserver" failonerror="true">
                  <arg value="/C"/>
                  <arg value="mvn clean package -Djboss.zip.file=&quot;${jboss.zip.file}&quot; -Djboss.zip.folder=&quot;${jboss.zip.folder}&quot; -Dappserver=&quot;${appserver}&quot; -Dproject.version=${project.version}"/>
                </exec>
                <copy toDir="target/artifacts/app-server">
                  <fileset dir="../../wfe/wfe-appserver/target">
                    <include name="*.zip"/>
                  </fileset>
                </copy>
                <copy toDir="target/artifacts/app-botstation">
                  <fileset dir="../../wfe/wfe-appserver/target">
                    <include name="*remotebots*.zip"/>
                  </fileset>
                </copy>

                <exec executable="cmd" dir="../../wfe/wfe-appserver" failonerror="true">
                  <arg value="/C"/>
                  <arg value="mvn clean package -Djboss.zip.file=&quot;${jboss.zip.file}&quot; -Djboss.zip.folder=&quot;${jboss.zip.folder}&quot; -Dappserver=&quot;${appserver}&quot; -P simulation -Dproject.version=${project.version}"/>
                </exec>
                <copy toDir="target/artifacts/app-simulation">
                  <fileset dir="../../wfe/wfe-appserver/target">
                    <include name="*.zip"/>
                  </fileset>
                </copy>

		<unzip dest="target/artifacts" overwrite="true">
			<fileset dir="target/artifacts/app-server">
				<include name="wfe-appserver-full-*.zip"/>
			</fileset>
		</unzip>
                <copy toDir="target/artifacts/jboss">
                  <fileset dir="../simulation">
                    <include name="*"/>
                    <include name="**/*"/>
                  </fileset>
                </copy>
		<exec executable="cmd" dir="target/artifacts/jboss/bin" spawn="true">
			<arg line="/C standalone.bat" />
			<env key="NOPAUSE" value="yes"/>
		</exec>
		<sleep seconds="60"/>
                <exec executable="cmd" dir="../../wfe/wfe-webservice-client" failonerror="true">
                  <arg value="/C"/>
                  <arg value="mvn clean install -Djboss.zip.file=&quot;${jboss.zip.file}&quot; -Djboss.zip.folder=&quot;${jboss.zip.folder}&quot; -Dappserver=&quot;${appserver}&quot; -Dproject.version=${project.version}"/>
                </exec>
                <get src="http://localhost:8080/wfe/login.do?login=Administrator&amp;password=wf&amp;forwardUrl=/admin_scripts.do?action=executeUploadedScript&amp;fileName=deploy-samples-script.xml" dest="target/artifacts/jboss/tmp"/>

		<exec executable="cmd" dir="target/artifacts/jboss/bin" spawn="true">
			<arg value="/C" />
			<arg line="jboss-cli.bat --commands=connect,:shutdown" />
			<env key="NOPAUSE" value="yes"/>
		</exec>
		<sleep seconds="20"/>

                <copy toDir="target/artifacts/simulation-data">
                  <fileset dir="../simulation">
                    <include name="*"/>
                    <include name="**/*"/>
                  </fileset>
                  <fileset dir="target/artifacts/jboss">
                    <include name="standalone/data/h2/*.db"/>
                  </fileset>
                </copy>
		<move file="target/artifacts/simulation-data/standalone/data/h2" tofile="target/artifacts/simulation-data/standalone/data/demo-db"/>

		<delete dir="target/artifacts/jboss/"/>

                <exec executable="cmd" dir="../../gpd" failonerror="true">
                  <arg line="/C ant -Dproject.version=${project.version}"/>
                </exec>
                <copy toDir="target/artifacts/gpd/32">
                  <fileset dir="../../gpd/build">
                    <include name="*.win32.x86.zip"/>
                  </fileset>
                </copy>
                <copy toDir="target/artifacts/gpd/64">
                  <fileset dir="../../gpd/build">
                    <include name="*.win32.x86_64.zip"/>
                  </fileset>
                </copy>

                <exec executable="cmd" dir="../../rtn" failonerror="true">
                  <arg value="/C"/>
                  <arg value="mvn clean package -Djboss.zip.file=&quot;${jboss.zip.file}&quot; -Djboss.zip.folder=&quot;${jboss.zip.folder}&quot; -Dappserver=&quot;${appserver}&quot; -Djboss.version=7 -Dproject.version=${project.version} -Dswt.artifactId=org.eclipse.swt.win32.win32.x86"/>
                </exec>
                <copy toDir="target/artifacts/rtn/32">
                  <fileset dir="../../rtn/target">
                    <include name="*.jar"/>
                  </fileset>
                  <fileset dir="../../rtn/src/main/assembly">
                    <include name="*"/>
                  </fileset>
                </copy>

                <exec executable="cmd" dir="../../rtn" failonerror="true">
                  <arg value="/C"/>
                  <arg value="mvn clean package -Djboss.zip.file=&quot;${jboss.zip.file}&quot; -Djboss.zip.folder=&quot;${jboss.zip.folder}&quot; -Dappserver=&quot;${appserver}&quot; -Djboss.version=7 -Dproject.version=${project.version} -Dswt.artifactId=org.eclipse.swt.win32.win32.x86_64"/>
                </exec>
                <copy toDir="target/artifacts/rtn/64">
                  <fileset dir="../../rtn/target">
                    <include name="*.jar"/>
                  </fileset>
                  <fileset dir="../../rtn/src/main/assembly">
                    <include name="*"/>
                  </fileset>
                </copy>

                <exec executable="cmd" dir="../../wfe/wfe-appserver" failonerror="true">
                  <arg value="/C"/>
                  <arg value="mvn clean -Djboss.zip.file=&quot;${jboss.zip.file}&quot; -Djboss.zip.folder=&quot;${jboss.zip.folder}&quot;"/>
                </exec>
                <exec executable="cmd" dir="../../wfe/wfe-app" failonerror="true">
                  <arg value="/C"/>
                  <arg value="mvn clean -Djboss.zip.file=&quot;${jboss.zip.file}&quot; -Djboss.zip.folder=&quot;${jboss.zip.folder}&quot;"/>
                </exec>
                <exec executable="cmd" dir="../../wfe/wfe-webservice-client" failonerror="true">
                  <arg value="/C"/>
                  <arg value="mvn clean -Djboss.zip.file=&quot;${jboss.zip.file}&quot; -Djboss.zip.folder=&quot;${jboss.zip.folder}&quot; -Dappserver=&quot;${appserver}&quot;"/>
                </exec>

		<replace file="resources\NSIS7\JDKInstallSupport.nsh"
		  token="X64ONLY &quot;no&quot;"
                  value="X64ONLY &quot;yes&quot;"
                />
                <exec executable="cmd" dir="." failonerror="true">
                  <arg value="/C"/>
                  <arg value="ant -f antbuild.xml makeInstaller -Dproject.version=${project.version}"/>
                </exec>
                <copy todir="target/artifacts/Installer64">
                  <fileset dir="target/artifacts/Installer">
                    <include name="*"/>
                  </fileset>
                </copy>
		<delete dir="target/artifacts/Installer"/>

		<replace file="resources\NSIS7\JDKInstallSupport.nsh"
		  token="X64ONLY &quot;yes&quot;"
                  value="X64ONLY &quot;no&quot;"
                />
                <exec executable="cmd" dir="." failonerror="true">
                  <arg value="/C"/>
                  <arg value="ant -f antbuild.xml makeInstaller -Dproject.version=${project.version}"/>
                </exec>

              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <id>add jdk files</id>
            <phase>package</phase>
            <configuration>
              <target if="jdk.dir">
                <copy todir="target/artifacts/Installer">
                  <fileset dir="${jdk.dir}">
                    <include name="*"/>
                  </fileset>
                </copy>
                <copy todir="target/artifacts/Installer64">
                  <fileset dir="${jdk.dir}">
                    <include name="*"/>
                  </fileset>
                </copy>
		<delete file="target/artifacts/Installer64/jdk-7u7-windows-i586.exe"/>
		<replace file="target/artifacts/Installer64/runawfe.ini"
		  token="jdk-7u7-windows-i586.exe"
                  value="jdk-7u7-windows-x64.exe"
                />
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.github.stephenc.java-iso-tools</groupId>
        <artifactId>iso9660-maven-plugin</artifactId>
        <version>2.0.0</version>
        <executions>
          <execution>
            <id>generate-iso</id>
            <goals>
                <goal>iso</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <volumeId>RunaWFE ${project.version}</volumeId>
              <finalName>installer.iso</finalName>
              <inputDirectory>target/artifacts/installer</inputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.github.stephenc.java-iso-tools</groupId>
        <artifactId>iso9660-maven-plugin</artifactId>
        <version>2.0.0</version>
        <executions>
          <execution>
            <id>generate-iso-64</id>
            <goals>
                <goal>iso</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <volumeId>RunaWFE ${project.version}</volumeId>
              <finalName>installer64.iso</finalName>
              <inputDirectory>target/artifacts/installer64</inputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
