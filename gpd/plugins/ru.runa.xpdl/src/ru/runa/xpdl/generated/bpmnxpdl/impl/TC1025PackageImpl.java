//
// This file was ru.runa.xpdl.generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.05.23 at 09:51:37 PM MSD 
//


package ru.runa.xpdl.generated.bpmnxpdl.impl;

public class TC1025PackageImpl
    extends ru.runa.xpdl.generated.bpmnxpdl.impl.TC1025PackageTypeImpl
    implements ru.runa.xpdl.generated.bpmnxpdl.TC1025Package, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.UnmarshallableObject, ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.XMLSerializable, ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.ValidatableObject
{

    public final static java.lang.Class version = (ru.runa.xpdl.generated.bpmnxpdl.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (ru.runa.xpdl.generated.bpmnxpdl.TC1025Package.class);
    }

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "http://www.wfmc.org/2002/XPDL1.0";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "TC1025Package";
    }

    public ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.UnmarshallingEventHandler createUnmarshaller(ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.UnmarshallingContext context) {
        return new ru.runa.xpdl.generated.bpmnxpdl.impl.TC1025PackageImpl.Unmarshaller(context);
    }

    public void serializeBody(ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("http://www.wfmc.org/2002/XPDL1.0", "TC1025Package");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeBody(context);
        context.endElement();
    }

    public void serializeAttributes(ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (ru.runa.xpdl.generated.bpmnxpdl.TC1025Package.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"
+"ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"
+"mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"
+"q\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000"
+"\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0000\bppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0016ppsr\u0000 com.sun.msv.grammar.OneOrMor"
+"eExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000ps"
+"r\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\t"
+"nameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004q\u0000~\u0000\u001epsr\u00002com.sun.msv.grammar.Expression"
+"$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000\u001d\u0001q\u0000~\u0000\"sr\u0000 com.sun"
+".msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar."
+"NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$Eps"
+"ilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000#q\u0000~\u0000(sr\u0000#com.sun.msv.gra"
+"mmar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/Str"
+"ing;L\u0000\fnamespaceURIq\u0000~\u0000*xq\u0000~\u0000%t\u0000&ru.runa.xpdl.generated.bpmnxpdl.TC1025Pa"
+"ckageHeadert\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000"
+"~\u0000\u0000pp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001epsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq\u0000~\u0000\""
+"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u0000*ru.runa.xpdl.generated.bpmnxpdl.TC1025PackageHeaderTyp"
+"eq\u0000~\u0000-sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u001fq\u0000~\u0000\u001epsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000"
+"\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0004ppsr\u0000\"com.sun."
+"msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatyp"
+"e.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.x"
+"sd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDat"
+"atypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000*L\u0000\btypeNameq\u0000~\u0000*L\u0000\nw"
+"hiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xp"
+"t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.d"
+"atatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.s"
+"un.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com."
+"sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u0004q\u0000~\u0000\u001epsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNam"
+"eq\u0000~\u0000*L\u0000\fnamespaceURIq\u0000~\u0000*xpq\u0000~\u0000Cq\u0000~\u0000Bsq\u0000~\u0000)t\u0000\u0004typet\u0000)http:/"
+"/www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000(sq\u0000~\u0000)t\u0000\u0013TC1025Packa"
+"geHeadert\u0000 http://www.wfmc.org/2002/XPDL1.0sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u0016q\u0000~"
+"\u0000\u001epsq\u0000~\u0000\u0000q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001epsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq\u0000~\u0000\"q\u0000~\u0000&q\u0000"
+"~\u0000(sq\u0000~\u0000)t\u0000*ru.runa.xpdl.generated.bpmnxpdl.TC1025RedefinableHeaderq\u0000~\u0000-s"
+"q\u0000~\u0000\u0000q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001epsq\u0000~\u0000\u001fq\u0000~\u0000\u001e"
+"pq\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u0000.ru.runa.xpdl.generated.bpmnxpdl.TC1025Redefinabl"
+"eHeaderTypeq\u0000~\u0000-sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq\u0000~\u0000;q\u0000~\u0000Kq\u0000~\u0000(sq\u0000~\u0000)t\u0000\u0017"
+"TC1025RedefinableHeaderq\u0000~\u0000Pq\u0000~\u0000(sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001epsq\u0000~\u0000\u0000q"
+"\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001epsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t"
+"\u0000)ru.runa.xpdl.generated.bpmnxpdl.TC1025ConformanceClassq\u0000~\u0000-sq\u0000~\u0000\u0000q\u0000~\u0000\u001ep"
+"\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001epsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq\u0000~\u0000\"q\u0000~\u0000&"
+"q\u0000~\u0000(sq\u0000~\u0000)t\u0000-ru.runa.xpdl.generated.bpmnxpdl.TC1025ConformanceClassTypeq"
+"\u0000~\u0000-sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq\u0000~\u0000;q\u0000~\u0000Kq\u0000~\u0000(sq\u0000~\u0000)t\u0000\u0016TC1025Confor"
+"manceClassq\u0000~\u0000Pq\u0000~\u0000(sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001epsq\u0000~\u0000\u0000q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0016p"
+"psq\u0000~\u0000\u001aq\u0000~\u0000\u001epsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u0000\u001fgenerated.b"
+"pmnxpdl.TC1025Scriptq\u0000~\u0000-sq\u0000~\u0000\u0000q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000"
+"\u0016ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001epsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u0000#ru.runa.xpdl.generated"
+".bpmnxpdl.TC1025ScriptTypeq\u0000~\u0000-sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq\u0000~\u0000;q\u0000~\u0000"
+"Kq\u0000~\u0000(sq\u0000~\u0000)t\u0000\fTC1025Scriptq\u0000~\u0000Pq\u0000~\u0000(sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001epsq\u0000"
+"~\u0000\u0000q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001epsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000"
+"~\u0000)t\u0000)ru.runa.xpdl.generated.bpmnxpdl.TC1025ExternalPackagesq\u0000~\u0000-sq\u0000~\u0000\u0000q\u0000"
+"~\u0000\u001ep\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001epsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq\u0000~\u0000\"q"
+"\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u0000-ru.runa.xpdl.generated.bpmnxpdl.TC1025ExternalPackagesT"
+"ypeq\u0000~\u0000-sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq\u0000~\u0000;q\u0000~\u0000Kq\u0000~\u0000(sq\u0000~\u0000)t\u0000\u0016TC1025Ex"
+"ternalPackagesq\u0000~\u0000Pq\u0000~\u0000(sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001epsq\u0000~\u0000\u0000q\u0000~\u0000\u001ep\u0000sq\u0000"
+"~\u0000\u0016ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001epsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u0000)generat"
+"ed.bpmnxpdl.TC1025TypeDeclarationsq\u0000~\u0000-sq\u0000~\u0000\u0000q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0007pp"
+"sq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001epsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~"
+"\u0000)t\u0000-ru.runa.xpdl.generated.bpmnxpdl.TC1025TypeDeclarationsTypeq\u0000~\u0000-sq\u0000~\u0000"
+"\u0016ppsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq\u0000~\u0000;q\u0000~\u0000Kq\u0000~\u0000(sq\u0000~\u0000)t\u0000\u0016TC1025TypeDeclaration"
+"sq\u0000~\u0000Pq\u0000~\u0000(sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001epsq\u0000~\u0000\u0000q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u001aq\u0000"
+"~\u0000\u001epsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u0000%ru.runa.xpdl.generated.bpmnxpdl.T"
+"C1025Participantsq\u0000~\u0000-sq\u0000~\u0000\u0000q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0016pp"
+"sq\u0000~\u0000\u001aq\u0000~\u0000\u001epsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u0000)ru.runa.xpdl.generated.bp"
+"mnxpdl.TC1025ParticipantsTypeq\u0000~\u0000-sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq\u0000~\u0000;q"
+"\u0000~\u0000Kq\u0000~\u0000(sq\u0000~\u0000)t\u0000\u0012TC1025Participantsq\u0000~\u0000Pq\u0000~\u0000(sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u0016"
+"q\u0000~\u0000\u001epsq\u0000~\u0000\u0000q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001epsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq\u0000~\u0000\"q\u0000~\u0000"
+"&q\u0000~\u0000(sq\u0000~\u0000)t\u0000%ru.runa.xpdl.generated.bpmnxpdl.TC1025Applicationsq\u0000~\u0000-sq\u0000"
+"~\u0000\u0000q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001epsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq"
+"\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u0000)ru.runa.xpdl.generated.bpmnxpdl.TC1025Applications"
+"Typeq\u0000~\u0000-sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq\u0000~\u0000;q\u0000~\u0000Kq\u0000~\u0000(sq\u0000~\u0000)t\u0000\u0012TC1025A"
+"pplicationsq\u0000~\u0000Pq\u0000~\u0000(sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001epsq\u0000~\u0000\u0000q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0016"
+"ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001epsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u0000#ru.runa.xpdl.generated."
+"bpmnxpdl.TC1025DataFieldsq\u0000~\u0000-sq\u0000~\u0000\u0000q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000"
+"sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001epsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u0000\'gene"
+"rated.bpmnxpdl.TC1025DataFieldsTypeq\u0000~\u0000-sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u001fq\u0000~\u0000\u001ep"
+"q\u0000~\u0000;q\u0000~\u0000Kq\u0000~\u0000(sq\u0000~\u0000)t\u0000\u0010TC1025DataFieldsq\u0000~\u0000Pq\u0000~\u0000(sq\u0000~\u0000\u0016ppsq"
+"\u0000~\u0000\u0016q\u0000~\u0000\u001epsq\u0000~\u0000\u0000q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001epsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq\u0000~\u0000\""
+"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u0000*ru.runa.xpdl.generated.bpmnxpdl.TC1025WorkflowProcesse"
+"sq\u0000~\u0000-sq\u0000~\u0000\u0000q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001epsq\u0000~"
+"\u0000\u001fq\u0000~\u0000\u001epq\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u0000.ru.runa.xpdl.generated.bpmnxpdl.TC1025Wor"
+"kflowProcessesTypeq\u0000~\u0000-sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq\u0000~\u0000;q\u0000~\u0000Kq\u0000~\u0000(sq"
+"\u0000~\u0000)t\u0000\u0017TC1025WorkflowProcessesq\u0000~\u0000Pq\u0000~\u0000(sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001ep"
+"sq\u0000~\u0000\u0000q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001epsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000("
+"sq\u0000~\u0000)t\u0000+ru.runa.xpdl.generated.bpmnxpdl.TC1025ExtendedAttributesq\u0000~\u0000-sq\u0000"
+"~\u0000\u0000q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001epsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq"
+"\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u0000/ru.runa.xpdl.generated.bpmnxpdl.TC1025ExtendedAttr"
+"ibutesTypeq\u0000~\u0000-sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq\u0000~\u0000;q\u0000~\u0000Kq\u0000~\u0000(sq\u0000~\u0000)t\u0000\u0018T"
+"C1025ExtendedAttributesq\u0000~\u0000Pq\u0000~\u0000(sq\u0000~\u0000\u001fppsq\u0000~\u00008ppsr\u0000$com.sun"
+".msv.datatype.xsd.NmtokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\"com.sun.msv.data"
+"type.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.St"
+"ringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000=q\u0000~\u0000Bt\u0000\u0007NMTOKENq\u0000~\u0000"
+"F\u0000q\u0000~\u0000Hsq\u0000~\u0000Iq\u0000~\u0001\u001fq\u0000~\u0000Bsq\u0000~\u0000)t\u0000\u0002Idt\u0000\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u001fq\u0000~\u0000\u001epsq\u0000"
+"~\u00008q\u0000~\u0000\u001epsq\u0000~\u0001\u001dq\u0000~\u0000Bt\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.Wh"
+"iteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000E\u0001q\u0000~\u0000Hsq\u0000~\u0000Iq\u0000~\u0001("
+"q\u0000~\u0000Bsq\u0000~\u0000)t\u0000\u0004Nameq\u0000~\u0001#q\u0000~\u0000(sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u001fq\u0000~\u0000\u001epq\u0000~\u0000;q\u0000~\u0000Kq\u0000"
+"~\u0000(sq\u0000~\u0000)t\u0000\rTC1025Packageq\u0000~\u0000Psr\u0000\"com.sun.msv.grammar.Expres"
+"sionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expres"
+"sionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool"
+"$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lc"
+"om/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000f\u0001pq\u0000~\u0000\u000bq\u0000~\u0000\u00a2q\u0000~\u0000\u008eq\u0000~"
+"\u0000zq\u0000~\u0000fq\u0000~\u0000Rq\u0000~\u0000\u0017q\u0000~\u0000\u00b6q\u0000~\u0000\u00caq\u0000~\u0000\u00deq\u0000~\u0000\u00f2q\u0000~\u0001\u0006q\u0000~\u0000\fq\u0000~\u0000\u00c0q\u0000~\u0000\u00b8q\u0000~"
+"\u0000\u00acq\u0000~\u0000\u00a4q\u0000~\u0000\u0098q\u0000~\u0000\u0090q\u0000~\u0000\u0084q\u0000~\u0000|q\u0000~\u0000pq\u0000~\u0000hq\u0000~\u0000\\q\u0000~\u0000Tq\u0000~\u00001q\u0000~\u0000\u0019q\u0000~"
+"\u0000\u00ccq\u0000~\u0000\u00d4q\u0000~\u0000\u00e0q\u0000~\u0000\u00e8q\u0000~\u0000\u00f4q\u0000~\u0000\u00fcq\u0000~\u0001\bq\u0000~\u0000\u00c5q\u0000~\u0000\u00b1q\u0000~\u0000\u009dq\u0000~\u0000\u0089q\u0000~\u0000uq\u0000~"
+"\u0000aq\u0000~\u00006q\u0000~\u0000\u00d9q\u0000~\u0000\u00edq\u0000~\u0001\u0001q\u0000~\u0001\u0010q\u0000~\u0001\u0015q\u0000~\u0001.q\u0000~\u0000\nq\u0000~\u0000\rq\u0000~\u0000\u0015q\u0000~\u0000\u0010q\u0000~"
+"\u0000\u00a1q\u0000~\u0000\u008dq\u0000~\u0000yq\u0000~\u0000eq\u0000~\u0000Qq\u0000~\u0000\u00b5q\u0000~\u0000\u00c9q\u0000~\u0000\u00ddq\u0000~\u0000\u00f1q\u0000~\u0001\u0005q\u0000~\u0001$q\u0000~\u0000\tq\u0000~"
+"\u0000\u0012q\u0000~\u0000\u00aaq\u0000~\u0000\u0096q\u0000~\u0000\u0082q\u0000~\u0000nq\u0000~\u0000Zq\u0000~\u0000/q\u0000~\u0000\u00beq\u0000~\u0000\u00d2q\u0000~\u0000\u00e6q\u0000~\u0000\u00faq\u0000~\u0000\u000fq\u0000~"
+"\u0001\u000eq\u0000~\u0000\u00c1q\u0000~\u0000\u00b9q\u0000~\u0000\u00adq\u0000~\u0000\u00a5q\u0000~\u0000\u0099q\u0000~\u0000\u0091q\u0000~\u0000\u0085q\u0000~\u0000}q\u0000~\u0000qq\u0000~\u0000iq\u0000~\u0000]q\u0000~"
+"\u0000Uq\u0000~\u00002q\u0000~\u0000\u001cq\u0000~\u0000\u00cdq\u0000~\u0000\u00d5q\u0000~\u0000\u00e1q\u0000~\u0000\u00e9q\u0000~\u0000\u00f5q\u0000~\u0000\u0014q\u0000~\u0000\u00fdq\u0000~\u0001\tq\u0000~\u0000\u000eq\u0000~"
+"\u0001\u0011q\u0000~\u0000\u0011q\u0000~\u0000\u0013x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.UnmarshallingContext context) {
            super(context, "----");
        }

        protected Unmarshaller(ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return ru.runa.xpdl.generated.bpmnxpdl.impl.TC1025PackageImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("TC1025Package" == ___local)&&("http://www.wfmc.org/2002/XPDL1.0" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  2 :
                        if (("TC1025Package" == ___local)&&("http://www.wfmc.org/2002/XPDL1.0" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((ru.runa.xpdl.generated.bpmnxpdl.impl.TC1025PackageTypeImpl) ru.runa.xpdl.generated.bpmnxpdl.impl.TC1025PackageImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                        case  1 :
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
