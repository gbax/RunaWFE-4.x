//
// This file was ru.runa.xpdl.generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.05.04 at 12:24:30 PM MSD 
//


package ru.runa.xpdl.generated.jpdl32.impl;

public class MailTypeImpl implements ru.runa.xpdl.generated.jpdl32.MailType, com.sun.xml.bind.JAXBObject, ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallableObject, ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializable, ru.runa.xpdl.generated.jpdl32.impl.runtime.ValidatableObject
{

    protected java.lang.String _Name;
    protected java.lang.String _Async;
    protected java.lang.String _Text;
    protected java.lang.String _Actors;
    protected java.lang.String _Template;
    protected java.lang.String _Subject;
    protected com.sun.xml.bind.util.ListImpl _SubjectOrText;
    protected java.lang.String _To;
    public final static java.lang.Class version = (ru.runa.xpdl.generated.jpdl32.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (ru.runa.xpdl.generated.jpdl32.MailType.class);
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public java.lang.String getAsync() {
        if (_Async == null) {
            return "false";
        } else {
            return _Async;
        }
    }

    public void setAsync(java.lang.String value) {
        _Async = value;
    }

    public java.lang.String getText() {
        return _Text;
    }

    public void setText(java.lang.String value) {
        _Text = value;
    }

    public java.lang.String getActors() {
        return _Actors;
    }

    public void setActors(java.lang.String value) {
        _Actors = value;
    }

    public java.lang.String getTemplate() {
        return _Template;
    }

    public void setTemplate(java.lang.String value) {
        _Template = value;
    }

    public java.lang.String getSubject() {
        return _Subject;
    }

    public void setSubject(java.lang.String value) {
        _Subject = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getSubjectOrText() {
        if (_SubjectOrText == null) {
            _SubjectOrText = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _SubjectOrText;
    }

    public java.util.List getSubjectOrText() {
        return _getSubjectOrText();
    }

    public java.lang.String getTo() {
        return _To;
    }

    public void setTo(java.lang.String value) {
        _To = value;
    }

    public ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingEventHandler createUnmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context) {
        return new ru.runa.xpdl.generated.jpdl32.impl.MailTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx7 = 0;
        final int len7 = ((_SubjectOrText == null)? 0 :_SubjectOrText.size());
        while (idx7 != len7) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _SubjectOrText.get(idx7 ++)), "SubjectOrText");
        }
    }

    public void serializeAttributes(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx7 = 0;
        final int len7 = ((_SubjectOrText == null)? 0 :_SubjectOrText.size());
        if (_Actors!= null) {
            context.startAttribute("", "actors");
            try {
                context.text(((java.lang.String) _Actors), "Actors");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Async!= null) {
            context.startAttribute("", "async");
            try {
                context.text(((java.lang.String) _Async), "Async");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "name");
        try {
            context.text(((java.lang.String) _Name), "Name");
        } catch (java.lang.Exception e) {
            ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_Subject!= null) {
            context.startAttribute("", "subject");
            try {
                context.text(((java.lang.String) _Subject), "Subject");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Template!= null) {
            context.startAttribute("", "template");
            try {
                context.text(((java.lang.String) _Template), "Template");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Text!= null) {
            context.startAttribute("", "text");
            try {
                context.text(((java.lang.String) _Text), "Text");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_To!= null) {
            context.startAttribute("", "to");
            try {
                context.text(((java.lang.String) _To), "To");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        while (idx7 != len7) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SubjectOrText.get(idx7 ++)), "SubjectOrText");
        }
    }

    public void serializeURIs(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx7 = 0;
        final int len7 = ((_SubjectOrText == null)? 0 :_SubjectOrText.size());
        while (idx7 != len7) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SubjectOrText.get(idx7 ++)), "SubjectOrText");
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (ru.runa.xpdl.generated.jpdl32.MailType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001pp"
+"sr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.m"
+"sv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang"
+".Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\fq\u0000~\u0000\u0012psr\u0000\'com.sun.msv.g"
+"rammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun"
+"/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000"
+"~\u0000\u0003q\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\fppsq\u0000~\u0000\u000eq\u0000~\u0000\u0012psr\u0000 com.sun.msv.grammar.Attrib"
+"uteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0015xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u0000"
+"2com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0011\u0001psr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun"
+".msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000"
+"~\u0000\u001epsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tloc"
+"alNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000%xq\u0000~\u0000 t\u0000\u0018gene"
+"rated.jpdl32.Subjectt\u0000+http://java.sun.com/jaxb/xjc/dummy-el"
+"ementssq\u0000~\u0000\u0014q\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\fppsq\u0000~\u0000\u000eq\u0000~\u0000\u0012psq\u0000~\u0000\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u001dq\u0000~\u0000"
+"!q\u0000~\u0000#sq\u0000~\u0000$t\u0000\u0015generated.jpdl32.Textq\u0000~\u0000(q\u0000~\u0000#sq\u0000~\u0000\fppsq\u0000~\u0000\u001a"
+"q\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg"
+"/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/"
+"msv/util/StringPair;xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u0000#com.sun.msv.datatype.xsd"
+".StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.dataty"
+"pe.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype."
+"xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDa"
+"tatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000%L\u0000\btypeNameq\u0000~\u0000%L\u0000\n"
+"whiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;x"
+"pt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv"
+".datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com"
+".sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000c"
+"om.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocal"
+"Nameq\u0000~\u0000%L\u0000\fnamespaceURIq\u0000~\u0000%xpq\u0000~\u0000<q\u0000~\u0000;sq\u0000~\u0000$t\u0000\u0006actorst\u0000\u0000q"
+"\u0000~\u0000#sq\u0000~\u0000\fppsq\u0000~\u0000\u001aq\u0000~\u0000\u0012pq\u0000~\u00004sq\u0000~\u0000$t\u0000\u0005asyncq\u0000~\u0000Fq\u0000~\u0000#sq\u0000~\u0000\u001ap"
+"pq\u0000~\u00004sq\u0000~\u0000$t\u0000\u0004nameq\u0000~\u0000Fsq\u0000~\u0000\fppsq\u0000~\u0000\u001aq\u0000~\u0000\u0012pq\u0000~\u00004sq\u0000~\u0000$t\u0000\u0007su"
+"bjectq\u0000~\u0000Fq\u0000~\u0000#sq\u0000~\u0000\fppsq\u0000~\u0000\u001aq\u0000~\u0000\u0012pq\u0000~\u00004sq\u0000~\u0000$t\u0000\btemplateq\u0000~"
+"\u0000Fq\u0000~\u0000#sq\u0000~\u0000\fppsq\u0000~\u0000\u001aq\u0000~\u0000\u0012pq\u0000~\u00004sq\u0000~\u0000$t\u0000\u0004textq\u0000~\u0000Fq\u0000~\u0000#sq\u0000~\u0000"
+"\fppsq\u0000~\u0000\u001aq\u0000~\u0000\u0012pq\u0000~\u00004sq\u0000~\u0000$t\u0000\u0002toq\u0000~\u0000Fq\u0000~\u0000#sr\u0000\"com.sun.msv.gra"
+"mmar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gra"
+"mmar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Exp"
+"ressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006"
+"parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0014\u0001pq\u0000~\u0000\u0007q\u0000"
+"~\u0000Vq\u0000~\u0000\u0005q\u0000~\u0000\u0013q\u0000~\u0000\bq\u0000~\u0000\tq\u0000~\u0000Nq\u0000~\u0000Rq\u0000~\u0000\nq\u0000~\u0000\u0006q\u0000~\u0000\u0019q\u0000~\u0000+q\u0000~\u0000\rq\u0000"
+"~\u0000Zq\u0000~\u0000/q\u0000~\u0000\u0018q\u0000~\u0000*q\u0000~\u0000\u000bq\u0000~\u0000Gq\u0000~\u0000\u0010x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends ru.runa.xpdl.generated.jpdl32.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context) {
            super(context, "-----------------------");
        }

        protected Unmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return ru.runa.xpdl.generated.jpdl32.impl.MailTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        attIdx = context.getAttribute("", "async");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText1(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "subject");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText2(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "text");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 18;
                            eatText3(v);
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText4(v);
                            continue outer;
                        }
                        break;
                    case  12 :
                        attIdx = context.getAttribute("", "template");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText5(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "actors");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText6(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  21 :
                        if (("subject" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getSubjectOrText().add(((ru.runa.xpdl.generated.jpdl32.impl.SubjectImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.SubjectImpl.class), 22, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("text" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getSubjectOrText().add(((ru.runa.xpdl.generated.jpdl32.impl.TextImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.TextImpl.class), 22, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 22;
                        continue outer;
                    case  18 :
                        attIdx = context.getAttribute("", "to");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 21;
                            eatText7(v);
                            continue outer;
                        }
                        state = 21;
                        continue outer;
                    case  22 :
                        if (("subject" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getSubjectOrText().add(((ru.runa.xpdl.generated.jpdl32.impl.SubjectImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.SubjectImpl.class), 22, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("text" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getSubjectOrText().add(((ru.runa.xpdl.generated.jpdl32.impl.TextImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.TextImpl.class), 22, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Async = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Subject = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Text = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Template = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Actors = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _To = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        attIdx = context.getAttribute("", "async");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText1(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "subject");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText2(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "text");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 18;
                            eatText3(v);
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText4(v);
                            continue outer;
                        }
                        break;
                    case  12 :
                        attIdx = context.getAttribute("", "template");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText5(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "actors");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText6(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  21 :
                        state = 22;
                        continue outer;
                    case  18 :
                        attIdx = context.getAttribute("", "to");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 21;
                            eatText7(v);
                            continue outer;
                        }
                        state = 21;
                        continue outer;
                    case  22 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        if (("async" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  9 :
                        if (("subject" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  15 :
                        if (("text" == ___local)&&("" == ___uri)) {
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  6 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        break;
                    case  12 :
                        if (("template" == ___local)&&("" == ___uri)) {
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  0 :
                        if (("actors" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  21 :
                        state = 22;
                        continue outer;
                    case  18 :
                        if (("to" == ___local)&&("" == ___uri)) {
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  22 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        attIdx = context.getAttribute("", "async");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText1(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  11 :
                        if (("subject" == ___local)&&("" == ___uri)) {
                            state = 12;
                            return ;
                        }
                        break;
                    case  17 :
                        if (("text" == ___local)&&("" == ___uri)) {
                            state = 18;
                            return ;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "subject");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText2(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  14 :
                        if (("template" == ___local)&&("" == ___uri)) {
                            state = 15;
                            return ;
                        }
                        break;
                    case  15 :
                        attIdx = context.getAttribute("", "text");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 18;
                            eatText3(v);
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  2 :
                        if (("actors" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText4(v);
                            continue outer;
                        }
                        break;
                    case  12 :
                        attIdx = context.getAttribute("", "template");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText5(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  8 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "actors");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText6(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  21 :
                        state = 22;
                        continue outer;
                    case  18 :
                        attIdx = context.getAttribute("", "to");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 21;
                            eatText7(v);
                            continue outer;
                        }
                        state = 21;
                        continue outer;
                    case  5 :
                        if (("async" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  22 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  20 :
                        if (("to" == ___local)&&("" == ___uri)) {
                            state = 21;
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  4 :
                            state = 5;
                            eatText1(value);
                            return ;
                        case  3 :
                            attIdx = context.getAttribute("", "async");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText1(v);
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  13 :
                            state = 14;
                            eatText5(value);
                            return ;
                        case  9 :
                            attIdx = context.getAttribute("", "subject");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText2(v);
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  10 :
                            state = 11;
                            eatText2(value);
                            return ;
                        case  15 :
                            attIdx = context.getAttribute("", "text");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 18;
                                eatText3(v);
                                continue outer;
                            }
                            state = 18;
                            continue outer;
                        case  6 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText4(v);
                                continue outer;
                            }
                            break;
                        case  12 :
                            attIdx = context.getAttribute("", "template");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 15;
                                eatText5(v);
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                        case  16 :
                            state = 17;
                            eatText3(value);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "actors");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText6(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  21 :
                            state = 22;
                            continue outer;
                        case  1 :
                            state = 2;
                            eatText6(value);
                            return ;
                        case  19 :
                            state = 20;
                            eatText7(value);
                            return ;
                        case  18 :
                            attIdx = context.getAttribute("", "to");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 21;
                                eatText7(v);
                                continue outer;
                            }
                            state = 21;
                            continue outer;
                        case  22 :
                            revertToParentFromText(value);
                            return ;
                        case  7 :
                            state = 8;
                            eatText4(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
