//
// This file was ru.runa.xpdl.generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.05.04 at 12:24:30 PM MSD 
//


package ru.runa.xpdl.generated.jpdl32.impl;

import ru.runa.xpdl.generated.jpdl32.Transition;

import java.util.List;

public class ForkTypeImpl implements ru.runa.xpdl.generated.jpdl32.ForkType, com.sun.xml.bind.JAXBObject, ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallableObject, ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializable, ru.runa.xpdl.generated.jpdl32.impl.runtime.ValidatableObject
{

    protected java.lang.String _Name;
    protected java.lang.String _Async;
    protected com.sun.xml.bind.util.ListImpl _ScriptOrDescriptionOrEvent;
    public final static java.lang.Class version = (ru.runa.xpdl.generated.jpdl32.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (ru.runa.xpdl.generated.jpdl32.ForkType.class);
    }

    public java.lang.String getName() {
        return (_Name==null)?(null):(_Name.replace("/","\\"));
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public void addTransition(Transition transition) {
        //To change body of implemented methods use File | Settings | File Templates.
        this.getScriptOrDescriptionOrEvent().add(transition);
    }
    public void setDescription(String s)
        {
                //To change body of implemented methods use File | Settings | File Templates.
            DescriptionImpl description=new DescriptionImpl();
            description.setValue(s);
            this.getScriptOrDescriptionOrEvent().add(description);
        }

    public List getSubObjectList() {
        return this.getScriptOrDescriptionOrEvent();  //To change body of implemented methods use File | Settings | File Templates.
    }

    public java.lang.String getAsync() {
        if (_Async == null) {
            return "false";
        } else {
            return _Async;
        }
    }

    public void setAsync(java.lang.String value) {
        _Async = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getScriptOrDescriptionOrEvent() {
        if (_ScriptOrDescriptionOrEvent == null) {
            _ScriptOrDescriptionOrEvent = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _ScriptOrDescriptionOrEvent;
    }

    public java.util.List getScriptOrDescriptionOrEvent() {
        return _getScriptOrDescriptionOrEvent();
    }

    public ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingEventHandler createUnmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context) {
        return new ru.runa.xpdl.generated.jpdl32.impl.ForkTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx3 = 0;
        final int len3 = ((_ScriptOrDescriptionOrEvent == null)? 0 :_ScriptOrDescriptionOrEvent.size());
        while (idx3 != len3) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _ScriptOrDescriptionOrEvent.get(idx3 ++)), "ScriptOrDescriptionOrEvent");
        }
    }

    public void serializeAttributes(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx3 = 0;
        final int len3 = ((_ScriptOrDescriptionOrEvent == null)? 0 :_ScriptOrDescriptionOrEvent.size());
        if (_Async!= null) {
            context.startAttribute("", "async");
            try {
                context.text(((java.lang.String) _Async), "Async");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "name");
        try {
            context.text(((java.lang.String) _Name), "Name");
        } catch (java.lang.Exception e) {
            ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        while (idx3 != len3) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ScriptOrDescriptionOrEvent.get(idx3 ++)), "ScriptOrDescriptionOrEvent");
        }
    }

    public void serializeURIs(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx3 = 0;
        final int len3 = ((_ScriptOrDescriptionOrEvent == null)? 0 :_ScriptOrDescriptionOrEvent.size());
        while (idx3 != len3) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ScriptOrDescriptionOrEvent.get(idx3 ++)), "ScriptOrDescriptionOrEvent");
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (ru.runa.xpdl.generated.jpdl32.ForkType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000"
+"\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0007q\u0000~"
+"\u0000\rpsq\u0000~\u0000\u0007q\u0000~\u0000\rpsq\u0000~\u0000\u0007q\u0000~\u0000\rpsq\u0000~\u0000\u0007q\u0000~\u0000\rpsq\u0000~\u0000\u0007q\u0000~\u0000\rpsr\u0000\'com.s"
+"un.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001f"
+"Lcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Eleme"
+"ntExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModel"
+"q\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\tq\u0000~\u0000\rpsr\u0000 com.sun.msv.gramma"
+"r.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0014xq\u0000~\u0000\u0003q"
+"\u0000~\u0000\rpsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\f\u0001psr\u0000 com.sun.msv.grammar.AnyNameClass"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000"
+"0com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0003q\u0000~\u0000\u001dpsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000$xq\u0000~\u0000"
+"\u001ft\u0000\u0017generated.jpdl32.Scriptt\u0000+http://java.sun.com/jaxb/xjc/d"
+"ummy-elementssq\u0000~\u0000\u0013q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\tq\u0000~\u0000\rpsq\u0000~\u0000\u0019q\u0000~\u0000\rpq\u0000"
+"~\u0000\u001cq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#t\u0000\u001cgenerated.jpdl32.Descriptionq\u0000~\u0000\'sq\u0000~\u0000"
+"\u0013q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\tq\u0000~\u0000\rpsq\u0000~\u0000\u0019q\u0000~\u0000\rpq\u0000~\u0000\u001cq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000"
+"#t\u0000\u0016generated.jpdl32.Eventq\u0000~\u0000\'sq\u0000~\u0000\u0013q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\tq\u0000"
+"~\u0000\rpsq\u0000~\u0000\u0019q\u0000~\u0000\rpq\u0000~\u0000\u001cq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#t\u0000!ru.runa.xpdl.generated.jpdl32.Exc"
+"eptionHandlerq\u0000~\u0000\'sq\u0000~\u0000\u0013q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\tq\u0000~\u0000\rpsq\u0000~\u0000\u0019q\u0000~"
+"\u0000\rpq\u0000~\u0000\u001cq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#t\u0000\u0016generated.jpdl32.Timerq\u0000~\u0000\'sq\u0000~\u0000\u0013"
+"q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\tq\u0000~\u0000\rpsq\u0000~\u0000\u0019q\u0000~\u0000\rpq\u0000~\u0000\u001cq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#"
+"t\u0000\u001bgenerated.jpdl32.Transitionq\u0000~\u0000\'q\u0000~\u0000\"sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0019q\u0000~\u0000\rp"
+"sr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relax"
+"ng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/ut"
+"il/StringPair;xq\u0000~\u0000\u0003q\u0000~\u0000\rpsr\u0000#com.sun.msv.datatype.xsd.Strin"
+"gType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd"
+".BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Co"
+"ncreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatype"
+"Impl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000$L\u0000\btypeNameq\u0000~\u0000$L\u0000\nwhiteS"
+"pacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 ht"
+"tp://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datat"
+"ype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.m"
+"sv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun"
+".msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000"
+"~\u0000\rpsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000"
+"~\u0000$L\u0000\fnamespaceURIq\u0000~\u0000$xpq\u0000~\u0000Sq\u0000~\u0000Rsq\u0000~\u0000#t\u0000\u0005asynct\u0000\u0000q\u0000~\u0000\"sq\u0000"
+"~\u0000\u0019ppq\u0000~\u0000Ksq\u0000~\u0000#t\u0000\u0004nameq\u0000~\u0000]sr\u0000\"com.sun.msv.grammar.Expressi"
+"onPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expressi"
+"onPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$C"
+"losedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom"
+"/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0016\u0001pq\u0000~\u0000\u0012q\u0000~\u0000\u0005q\u0000~\u0000Fq\u0000~\u0000\b"
+"q\u0000~\u0000\u000eq\u0000~\u0000\u000fq\u0000~\u0000\u0018q\u0000~\u0000*q\u0000~\u00000q\u0000~\u00006q\u0000~\u0000<q\u0000~\u0000Bq\u0000~\u0000\u000bq\u0000~\u0000\u0006q\u0000~\u0000\u0017q\u0000~\u0000)"
+"q\u0000~\u0000/q\u0000~\u00005q\u0000~\u0000;q\u0000~\u0000Aq\u0000~\u0000\u0010q\u0000~\u0000\u0011x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends ru.runa.xpdl.generated.jpdl32.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context) {
            super(context, "--------");
        }

        protected Unmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return ru.runa.xpdl.generated.jpdl32.impl.ForkTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  7 :
                        if (("script" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getScriptOrDescriptionOrEvent().add(((ru.runa.xpdl.generated.jpdl32.impl.ScriptImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ScriptImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("description" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getScriptOrDescriptionOrEvent().add(((ru.runa.xpdl.generated.jpdl32.impl.DescriptionImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.DescriptionImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("event" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getScriptOrDescriptionOrEvent().add(((ru.runa.xpdl.generated.jpdl32.impl.EventImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.EventImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("exception-handler" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getScriptOrDescriptionOrEvent().add(((ru.runa.xpdl.generated.jpdl32.impl.ExceptionHandlerImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ExceptionHandlerImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("timer" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getScriptOrDescriptionOrEvent().add(((ru.runa.xpdl.generated.jpdl32.impl.TimerImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.TimerImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("transition" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getScriptOrDescriptionOrEvent().add(((ru.runa.xpdl.generated.jpdl32.impl.TransitionImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.TransitionImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  6 :
                        if (("script" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getScriptOrDescriptionOrEvent().add(((ru.runa.xpdl.generated.jpdl32.impl.ScriptImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ScriptImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("description" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getScriptOrDescriptionOrEvent().add(((ru.runa.xpdl.generated.jpdl32.impl.DescriptionImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.DescriptionImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("event" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getScriptOrDescriptionOrEvent().add(((ru.runa.xpdl.generated.jpdl32.impl.EventImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.EventImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("exception-handler" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getScriptOrDescriptionOrEvent().add(((ru.runa.xpdl.generated.jpdl32.impl.ExceptionHandlerImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ExceptionHandlerImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("timer" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getScriptOrDescriptionOrEvent().add(((ru.runa.xpdl.generated.jpdl32.impl.TimerImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.TimerImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("transition" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getScriptOrDescriptionOrEvent().add(((ru.runa.xpdl.generated.jpdl32.impl.TransitionImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.TransitionImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 7;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "async");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText2(v);
                            continue outer;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Async = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  7 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        state = 7;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "async");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText2(v);
                            continue outer;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  7 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        state = 7;
                        continue outer;
                    case  0 :
                        if (("async" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("async" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  7 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        state = 7;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "async");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText2(v);
                            continue outer;
                        }
                        break;
                    case  5 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            state = 2;
                            eatText1(value);
                            return ;
                        case  4 :
                            state = 5;
                            eatText2(value);
                            return ;
                        case  7 :
                            revertToParentFromText(value);
                            return ;
                        case  6 :
                            state = 7;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "async");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  3 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText2(v);
                                continue outer;
                            }
                            break;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
