//
// This file was ru.runa.xpdl.generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.05.04 at 12:24:30 PM MSD 
//


package ru.runa.xpdl.generated.jpdl32.impl;

public class TaskTypeImpl implements ru.runa.xpdl.generated.jpdl32.TaskType, com.sun.xml.bind.JAXBObject, ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallableObject, ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializable, ru.runa.xpdl.generated.jpdl32.impl.runtime.ValidatableObject
{

    protected java.lang.String _Name;
    protected java.lang.String _Swimlane;
    protected java.lang.String _Description;
    protected com.sun.xml.bind.util.ListImpl _DescriptionOrAssignmentOrController;
    protected java.lang.String _Blocking;
    protected java.lang.String _Duedate;
    protected java.lang.String _Reassign;
    protected java.lang.String _Notify;
    protected java.lang.String _Signalling;
    protected java.io.Serializable _Priority;
    public final static java.lang.Class version = (ru.runa.xpdl.generated.jpdl32.impl.JAXBVersion.class);
    private final static org.relaxng.datatype.Datatype ___dt0 = com.sun.xml.bind.unmarshaller.DatatypeDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000)com.sun.msv.datatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNamet\u0000\u0012Ljava/lang/String;xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u0006L\u0000\btypeNameq\u0000~\u0000\u0006L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000\u0015urn:jbpm.org:jpdl-3.2psr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0007t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringq\u0000~\u0000\r\u0001q\u0000~\u0000\u0011t\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0005t\u0000\u0007highestt\u0000\u0006normalt\u0000\u0004hight\u0000\u0003lowt\u0000\u0006lowestx");
    private final static org.relaxng.datatype.Datatype ___dt1 = com.sun.xml.bind.unmarshaller.DatatypeDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.datatype.xsd.FinalComponent\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\nfinalValuexr\u0000\u001ecom.sun.msv.datatype.xsd.Proxy\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0004L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000\u0015urn:jbpm.org:jpdl-3.2psr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000 com.sun.msv.datatype.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetsq\u0000~\u0000\u0002xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0003intq\u0000~\u0000\nsr\u0000*com.sun.msv.datatype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0002L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u0004xq\u0000~\u0000\u0003ppq\u0000~\u0000\n\u0000\u0001sr\u0000*com.sun.msv.datatype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0013ppq\u0000~\u0000\n\u0000\u0000sr\u0000!com.sun.msv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\fq\u0000~\u0000\u0010t\u0000\u0004longq\u0000~\u0000\nsq\u0000~\u0000\u0012ppq\u0000~\u0000\n\u0000\u0001sq\u0000~\u0000\u0019ppq\u0000~\u0000\n\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\fq\u0000~\u0000\u0010t\u0000\u0007integerq\u0000~\u0000\nsr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000\u0016ppq\u0000~\u0000\n\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\rq\u0000~\u0000\u0010t\u0000\u0007decimalq\u0000~\u0000\nq\u0000~\u0000\'t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000!t\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000!t\u0000\fmaxInclusivesq\u0000~\u0000+\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000\u001cq\u0000~\u0000*sr\u0000\u0011java.lang.Integer\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005valuexq\u0000~\u0000,\u0080\u0000\u0000\u0000q\u0000~\u0000\u001cq\u0000~\u0000.sq\u0000~\u00000\u007f\u00ff\u00ff\u00ff\u0000\u0000\u0000\u0000");
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (ru.runa.xpdl.generated.jpdl32.TaskType.class);
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public java.lang.String getSwimlane() {
        return _Swimlane;
    }

    public void setSwimlane(java.lang.String value) {
        _Swimlane = value;
    }

    public java.lang.String getDescription() {
        return _Description;
    }

    public void setDescription(java.lang.String value) {
        _Description = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getDescriptionOrAssignmentOrController() {
        if (_DescriptionOrAssignmentOrController == null) {
            _DescriptionOrAssignmentOrController = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _DescriptionOrAssignmentOrController;
    }

    public java.util.List getDescriptionOrAssignmentOrController() {
        return _getDescriptionOrAssignmentOrController();
    }

    public java.lang.String getBlocking() {
        if (_Blocking == null) {
            return "false";
        } else {
            return _Blocking;
        }
    }

    public void setBlocking(java.lang.String value) {
        _Blocking = value;
    }

    public java.lang.String getDuedate() {
        return _Duedate;
    }

    public void setDuedate(java.lang.String value) {
        _Duedate = value;
    }

    public java.lang.String getReassign() {
        if (_Reassign == null) {
            return "false";
        } else {
            return _Reassign;
        }
    }

    public void setReassign(java.lang.String value) {
        _Reassign = value;
    }

    public java.lang.String getNotify() {
        if (_Notify == null) {
            return "false";
        } else {
            return _Notify;
        }
    }

    public void setNotify(java.lang.String value) {
        _Notify = value;
    }

    public java.lang.String getSignalling() {
        if (_Signalling == null) {
            return "true";
        } else {
            return _Signalling;
        }
    }

    public void setSignalling(java.lang.String value) {
        _Signalling = value;
    }

    public java.io.Serializable getPriority() {
        if (_Priority == null) {
            return "normal";
        } else {
            return _Priority;
        }
    }

    public void setPriority(java.io.Serializable value) {
        _Priority = value;
    }

    public ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingEventHandler createUnmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context) {
        return new ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx4 = 0;
        final int len4 = ((_DescriptionOrAssignmentOrController == null)? 0 :_DescriptionOrAssignmentOrController.size());
        while (idx4 != len4) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _DescriptionOrAssignmentOrController.get(idx4 ++)), "DescriptionOrAssignmentOrController");
        }
    }

    public void serializeAttributes(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx4 = 0;
        final int len4 = ((_DescriptionOrAssignmentOrController == null)? 0 :_DescriptionOrAssignmentOrController.size());
        if (_Blocking!= null) {
            context.startAttribute("", "blocking");
            try {
                context.text(((java.lang.String) _Blocking), "Blocking");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Description!= null) {
            context.startAttribute("", "description");
            try {
                context.text(((java.lang.String) _Description), "Description");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Duedate!= null) {
            context.startAttribute("", "duedate");
            try {
                context.text(((java.lang.String) _Duedate), "Duedate");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Name!= null) {
            context.startAttribute("", "name");
            try {
                context.text(((java.lang.String) _Name), "Name");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Notify!= null) {
            context.startAttribute("", "notify");
            try {
                context.text(((java.lang.String) _Notify), "Notify");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Priority!= null) {
            context.startAttribute("", "priority");
            if (_Priority instanceof java.lang.String) {
                try {
                    context.text(((java.lang.String) _Priority), "Priority");
                } catch (java.lang.Exception e) {
                    ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            } else {
                if (_Priority instanceof java.lang.Integer) {
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInt(((java.lang.Integer) _Priority).intValue()), "Priority");
                    } catch (java.lang.Exception e) {
                        ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                } else {
                    ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handleTypeMismatchError(context, this, "Priority", _Priority);
                }
            }
            context.endAttribute();
        }
        if (_Reassign!= null) {
            context.startAttribute("", "reassign");
            try {
                context.text(((java.lang.String) _Reassign), "Reassign");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Signalling!= null) {
            context.startAttribute("", "signalling");
            try {
                context.text(((java.lang.String) _Signalling), "Signalling");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Swimlane!= null) {
            context.startAttribute("", "swimlane");
            try {
                context.text(((java.lang.String) _Swimlane), "Swimlane");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        while (idx4 != len4) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _DescriptionOrAssignmentOrController.get(idx4 ++)), "DescriptionOrAssignmentOrController");
        }
    }

    public void serializeURIs(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx4 = 0;
        final int len4 = ((_DescriptionOrAssignmentOrController == null)? 0 :_DescriptionOrAssignmentOrController.size());
        while (idx4 != len4) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _DescriptionOrAssignmentOrController.get(idx4 ++)), "DescriptionOrAssignmentOrController");
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (ru.runa.xpdl.generated.jpdl32.TaskType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000"
+"~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u000eq\u0000~\u0000\u0014ps"
+"q\u0000~\u0000\u000eq\u0000~\u0000\u0014psq\u0000~\u0000\u000eq\u0000~\u0000\u0014psq\u0000~\u0000\u000eq\u0000~\u0000\u0014psq\u0000~\u0000\u000eq\u0000~\u0000\u0014psr\u0000\'com.sun.m"
+"sv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom"
+"/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000"
+"\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u000eppsq\u0000~\u0000\u0010q\u0000~\u0000\u0014psr\u0000 com.sun.msv.grammar.At"
+"tributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u001bxq\u0000~\u0000\u0003q\u0000~\u0000\u0014"
+"psr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0013\u0001psr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com"
+".sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\u0003q\u0000~\u0000$psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000"
+"\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000+xq\u0000~\u0000&t\u0000\u001c"
+"ru.runa.xpdl.generated.jpdl32.Descriptiont\u0000+http://java.sun.com/jaxb/xjc/"
+"dummy-elementssq\u0000~\u0000\u001aq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u000eppsq\u0000~\u0000\u0010q\u0000~\u0000\u0014psq\u0000~\u0000 q\u0000~\u0000\u0014pq"
+"\u0000~\u0000#q\u0000~\u0000\'q\u0000~\u0000)sq\u0000~\u0000*t\u0000\u001bgenerated.jpdl32.Assignmentq\u0000~\u0000.sq\u0000~\u0000"
+"\u001aq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u000eppsq\u0000~\u0000\u0010q\u0000~\u0000\u0014psq\u0000~\u0000 q\u0000~\u0000\u0014pq\u0000~\u0000#q\u0000~\u0000\'q\u0000~\u0000)sq\u0000~\u0000"
+"*t\u0000\u001bgenerated.jpdl32.Controllerq\u0000~\u0000.sq\u0000~\u0000\u001aq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u000eppsq\u0000"
+"~\u0000\u0010q\u0000~\u0000\u0014psq\u0000~\u0000 q\u0000~\u0000\u0014pq\u0000~\u0000#q\u0000~\u0000\'q\u0000~\u0000)sq\u0000~\u0000*t\u0000\u0016generated.jpdl3"
+"2.Eventq\u0000~\u0000.sq\u0000~\u0000\u001aq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u000eppsq\u0000~\u0000\u0010q\u0000~\u0000\u0014psq\u0000~\u0000 q\u0000~\u0000\u0014pq\u0000~"
+"\u0000#q\u0000~\u0000\'q\u0000~\u0000)sq\u0000~\u0000*t\u0000\u0016generated.jpdl32.Timerq\u0000~\u0000.sq\u0000~\u0000\u001aq\u0000~\u0000\u0014p"
+"\u0000sq\u0000~\u0000\u000eppsq\u0000~\u0000\u0010q\u0000~\u0000\u0014psq\u0000~\u0000 q\u0000~\u0000\u0014pq\u0000~\u0000#q\u0000~\u0000\'q\u0000~\u0000)sq\u0000~\u0000*t\u0000\"gen"
+"erated.jpdl32.TaskType.Reminderq\u0000~\u0000.q\u0000~\u0000)sq\u0000~\u0000\u000eppsq\u0000~\u0000 q\u0000~\u0000\u0014"
+"psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/rela"
+"xng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/u"
+"til/StringPair;xq\u0000~\u0000\u0003ppsr\u0000)com.sun.msv.datatype.xsd.Enumerat"
+"ionFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.ms"
+"v.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr"
+"\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fis"
+"FacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/da"
+"tatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/dat"
+"atype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000+xr\u0000\'com.sun.msv.data"
+"type.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000+L\u0000\btyp"
+"eNameq\u0000~\u0000+L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpa"
+"ceProcessor;xpt\u0000\u0015urn:jbpm.org:jpdl-3.2t\u0000\u000bbooleanTypesr\u00005com."
+"sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"p\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAl"
+"waysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000Yt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringq\u0000~\u0000`\u0001q\u0000~\u0000dt"
+"\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000"
+"\u0006t\u0000\u0003yest\u0000\u0002not\u0000\u0003offt\u0000\u0002ont\u0000\u0005falset\u0000\u0004truexsr\u00000com.sun.msv.gramm"
+"ar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0014psr\u0000\u001bco"
+"m.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000+L\u0000\fname"
+"spaceURIq\u0000~\u0000+xpq\u0000~\u0000]q\u0000~\u0000\\sq\u0000~\u0000*t\u0000\bblockingt\u0000\u0000q\u0000~\u0000)sq\u0000~\u0000\u000eppsq"
+"\u0000~\u0000 q\u0000~\u0000\u0014psq\u0000~\u0000Oq\u0000~\u0000\u0014pq\u0000~\u0000dq\u0000~\u0000qsq\u0000~\u0000rq\u0000~\u0000fq\u0000~\u0000esq\u0000~\u0000*t\u0000\u000bdes"
+"criptionq\u0000~\u0000vq\u0000~\u0000)sq\u0000~\u0000\u000eppsq\u0000~\u0000 q\u0000~\u0000\u0014pq\u0000~\u0000ysq\u0000~\u0000*t\u0000\u0007duedateq"
+"\u0000~\u0000vq\u0000~\u0000)sq\u0000~\u0000\u000eppsq\u0000~\u0000 q\u0000~\u0000\u0014pq\u0000~\u0000ysq\u0000~\u0000*t\u0000\u0004nameq\u0000~\u0000vq\u0000~\u0000)sq\u0000"
+"~\u0000\u000eppsq\u0000~\u0000 q\u0000~\u0000\u0014pq\u0000~\u0000Rsq\u0000~\u0000*t\u0000\u0006notifyq\u0000~\u0000vq\u0000~\u0000)sq\u0000~\u0000\u000eppsq\u0000~\u0000"
+" q\u0000~\u0000\u0014psq\u0000~\u0000Oppsr\u0000\"com.sun.msv.datatype.xsd.UnionType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0001[\u0000\u000bmemberTypest\u0000*[Lcom/sun/msv/datatype/xsd/XSDatatypeIm"
+"pl;xq\u0000~\u0000cq\u0000~\u0000\\t\u0000\fpriorityTypesr\u00005com.sun.msv.datatype.xsd.Wh"
+"iteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000_ur\u0000*[Lcom.sun.msv"
+".datatype.xsd.XSDatatypeImpl;H\u001c\u00ad{pzHw\u0002\u0000\u0000xp\u0000\u0000\u0000\u0002sq\u0000~\u0000Sq\u0000~\u0000\\pq\u0000"
+"~\u0000`\u0000\u0000q\u0000~\u0000dq\u0000~\u0000dq\u0000~\u0000gsq\u0000~\u0000hw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0005t\u0000\u0007highestt\u0000\u0006normalt"
+"\u0000\u0004hight\u0000\u0003lowt\u0000\u0006lowestxsr\u0000\'com.sun.msv.datatype.xsd.FinalComp"
+"onent\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\nfinalValuexr\u0000\u001ecom.sun.msv.datatype.xsd.Pr"
+"oxy\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bbaseTypeq\u0000~\u0000Wxq\u0000~\u0000Yq\u0000~\u0000\\pq\u0000~\u0000\u0091sr\u0000 com.sun.m"
+"sv.datatype.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.x"
+"sd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetsq\u0000~\u0000Wxq\u0000~\u0000bq\u0000~\u0000"
+"et\u0000\u0003intq\u0000~\u0000\u0091sr\u0000*com.sun.msv.datatype.xsd.MaxInclusiveFacet\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L"
+"\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object;xq\u0000~\u0000Uppq\u0000~\u0000\u0091\u0000\u0001sr\u0000*com.sun."
+"msv.datatype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u00a3ppq\u0000~\u0000\u0091\u0000\u0000"
+"sr\u0000!com.sun.msv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u009fq\u0000~\u0000et"
+"\u0000\u0004longq\u0000~\u0000\u0091sq\u0000~\u0000\u00a2ppq\u0000~\u0000\u0091\u0000\u0001sq\u0000~\u0000\u00a6ppq\u0000~\u0000\u0091\u0000\u0000sr\u0000$com.sun.msv.dat"
+"atype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u009fq\u0000~\u0000et\u0000\u0007integerq\u0000~\u0000\u0091sr"
+"\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005"
+"scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstra"
+"intFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000Vppq\u0000~\u0000\u0091\u0001\u0000sr\u0000#com.sun.msv.datatype.x"
+"sd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000bq\u0000~\u0000et\u0000\u0007decimalq\u0000~\u0000\u0091q\u0000~\u0000\u00b4t\u0000\u000efr"
+"actionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000\u00aet\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f"
+"#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000\u00aet"
+"\u0000\fmaxInclusivesq\u0000~\u0000\u00b8\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000\u00a9q\u0000~\u0000\u00b7sr\u0000\u0011java.lang.Integer\u0012"
+"\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005valuexq\u0000~\u0000\u00b9\u0080\u0000\u0000\u0000q\u0000~\u0000\u00a9q\u0000~\u0000\u00bbsq\u0000~\u0000\u00bd\u007f\u00ff\u00ff\u00ff\u0000\u0000\u0000\u0000q\u0000~\u0000qpsq"
+"\u0000~\u0000*t\u0000\bpriorityq\u0000~\u0000vq\u0000~\u0000)sq\u0000~\u0000\u000eppsq\u0000~\u0000 q\u0000~\u0000\u0014pq\u0000~\u0000Rsq\u0000~\u0000*t\u0000\br"
+"eassignq\u0000~\u0000vq\u0000~\u0000)sq\u0000~\u0000\u000eppsq\u0000~\u0000 q\u0000~\u0000\u0014pq\u0000~\u0000Rsq\u0000~\u0000*t\u0000\nsignallin"
+"gq\u0000~\u0000vq\u0000~\u0000)sq\u0000~\u0000\u000eppsq\u0000~\u0000 q\u0000~\u0000\u0014pq\u0000~\u0000ysq\u0000~\u0000*t\u0000\bswimlaneq\u0000~\u0000vq\u0000"
+"~\u0000)sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTa"
+"blet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-c"
+"om.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005co"
+"untB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expressi"
+"onPool;xp\u0000\u0000\u0000%\u0001pq\u0000~\u0000wq\u0000~\u0000\bq\u0000~\u0000\u0019q\u0000~\u0000\tq\u0000~\u0000\u0081q\u0000~\u0000\u0005q\u0000~\u0000\fq\u0000~\u0000\u00c6q\u0000~\u0000}"
+"q\u0000~\u0000\u000bq\u0000~\u0000\nq\u0000~\u0000\u00c2q\u0000~\u0000\u000fq\u0000~\u0000\u0015q\u0000~\u0000\u0006q\u0000~\u0000\u0016q\u0000~\u0000\u001fq\u0000~\u00001q\u0000~\u00007q\u0000~\u0000=q\u0000~\u0000C"
+"q\u0000~\u0000Iq\u0000~\u0000Mq\u0000~\u0000\u0012q\u0000~\u0000\u00caq\u0000~\u0000\u001eq\u0000~\u00000q\u0000~\u00006q\u0000~\u0000<q\u0000~\u0000Bq\u0000~\u0000Hq\u0000~\u0000\u0089q\u0000~\u0000\u0085"
+"q\u0000~\u0000\u0017q\u0000~\u0000\rq\u0000~\u0000\u0018q\u0000~\u0000\u0007x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public static class ReminderImpl
        extends ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl.ReminderTypeImpl
        implements ru.runa.xpdl.generated.jpdl32.TaskType.Reminder, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallableObject, ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializable, ru.runa.xpdl.generated.jpdl32.impl.runtime.ValidatableObject
    {

        public final static java.lang.Class version = (ru.runa.xpdl.generated.jpdl32.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (ru.runa.xpdl.generated.jpdl32.TaskType.Reminder.class);
        }

        public java.lang.String ____jaxb_ri____getNamespaceURI() {
            return "urn:jbpm.org:jpdl-3.2";
        }

        public java.lang.String ____jaxb_ri____getLocalName() {
            return "reminder";
        }

        public ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingEventHandler createUnmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context) {
            return new ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl.ReminderImpl.Unmarshaller(context);
        }

        public void serializeBody(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            context.startElement("urn:jbpm.org:jpdl-3.2", "reminder");
            super.serializeURIs(context);
            context.endNamespaceDecls();
            super.serializeAttributes(context);
            context.endAttributes();
            super.serializeBody(context);
            context.endElement();
        }

        public void serializeAttributes(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public void serializeURIs(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public java.lang.Class getPrimaryInterface() {
            return (ru.runa.xpdl.generated.jpdl32.TaskType.Reminder.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"
+"ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"
+"mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsr\u0000 com.s"
+"un.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClas"
+"sq\u0000~\u0000\u0001xq\u0000~\u0000\u0004ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002d"
+"tt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dL"
+"com/sun/msv/util/StringPair;xq\u0000~\u0000\u0004sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5"
+"\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.Builtin"
+"AtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0017L"
+"\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor"
+";xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.m"
+"sv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,c"
+"om.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u0000"
+"0com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0004q\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tloc"
+"alNameq\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000\u0017xpq\u0000~\u0000\u001bq\u0000~\u0000\u001asr\u0000#com.sun.msv.g"
+"rammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0017L\u0000\fnamespa"
+"ceURIq\u0000~\u0000\u0017xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0007d"
+"uedatet\u0000\u0000sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bp"
+"psq\u0000~\u0000\u000bq\u0000~\u0000\u0012pq\u0000~\u0000\u0010sq\u0000~\u0000#t\u0000\u0006repeatq\u0000~\u0000\'sr\u00000com.sun.msv.gramma"
+"r.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000\u0011\u0001psq\u0000~\u0000"
+"(ppsq\u0000~\u0000\u000bq\u0000~\u0000\u0012psq\u0000~\u0000\rppsr\u0000\"com.sun.msv.datatype.xsd.QnameTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd."
+"WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001dq\u0000~\u0000 sq\u0000~\u0000!q\u0000~\u0000"
+"5q\u0000~\u0000\u001asq\u0000~\u0000#t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-insta"
+"nceq\u0000~\u0000.sq\u0000~\u0000#t\u0000\bremindert\u0000\u0015urn:jbpm.org:jpdl-3.2sr\u0000\"com.sun"
+".msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun"
+"/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gra"
+"mmar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVe"
+"rsionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0004\u0001"
+"pq\u0000~\u0000)q\u0000~\u0000\tq\u0000~\u00000q\u0000~\u0000\nx"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends ru.runa.xpdl.generated.jpdl32.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl.ReminderImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  1 :
                            attIdx = context.getAttribute("", "duedate");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                        case  0 :
                            if (("reminder" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  1 :
                            attIdx = context.getAttribute("", "duedate");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  2 :
                            if (("reminder" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  1 :
                            if (("duedate" == ___local)&&("" == ___uri)) {
                                spawnHandlerFromEnterAttribute((((ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl.ReminderTypeImpl) ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl.ReminderImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  1 :
                            attIdx = context.getAttribute("", "duedate");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                            case  1 :
                                attIdx = context.getAttribute("", "duedate");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                break;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public static class ReminderTypeImpl implements ru.runa.xpdl.generated.jpdl32.TaskType.ReminderType, com.sun.xml.bind.JAXBObject, ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallableObject, ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializable, ru.runa.xpdl.generated.jpdl32.impl.runtime.ValidatableObject
    {

        protected java.lang.String _Duedate;
        protected java.lang.String _Repeat;
        public final static java.lang.Class version = (ru.runa.xpdl.generated.jpdl32.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (ru.runa.xpdl.generated.jpdl32.TaskType.ReminderType.class);
        }

        public java.lang.String getDuedate() {
            return _Duedate;
        }

        public void setDuedate(java.lang.String value) {
            _Duedate = value;
        }

        public java.lang.String getRepeat() {
            return _Repeat;
        }

        public void setRepeat(java.lang.String value) {
            _Repeat = value;
        }

        public ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingEventHandler createUnmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context) {
            return new ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl.ReminderTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public void serializeAttributes(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            context.startAttribute("", "duedate");
            try {
                context.text(((java.lang.String) _Duedate), "Duedate");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            if (_Repeat!= null) {
                context.startAttribute("", "repeat");
                try {
                    context.text(((java.lang.String) _Repeat), "Repeat");
                } catch (java.lang.Exception e) {
                    ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
        }

        public void serializeURIs(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public java.lang.Class getPrimaryInterface() {
            return (ru.runa.xpdl.generated.jpdl32.TaskType.ReminderType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameCl"
+"ass;xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt"
+"\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLco"
+"m/sun/msv/util/StringPair;xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa"
+"\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAt"
+"omicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0013L\u0000\n"
+"whiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;x"
+"pt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv"
+".datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com"
+".sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000c"
+"om.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u0003q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocal"
+"Nameq\u0000~\u0000\u0013L\u0000\fnamespaceURIq\u0000~\u0000\u0013xpq\u0000~\u0000\u0017q\u0000~\u0000\u0016sr\u0000#com.sun.msv.gra"
+"mmar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0013L\u0000\fnamespace"
+"URIq\u0000~\u0000\u0013xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0007due"
+"datet\u0000\u0000sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001pps"
+"q\u0000~\u0000\u0006q\u0000~\u0000\u000epq\u0000~\u0000\fsq\u0000~\u0000\u001ft\u0000\u0006repeatq\u0000~\u0000#sr\u00000com.sun.msv.grammar."
+"Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\r\u0001psr\u0000\"com"
+".sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom"
+"/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv"
+".grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstre"
+"amVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000"
+"\u0000\u0000\u0002\u0001pq\u0000~\u0000%q\u0000~\u0000\u0005x"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends ru.runa.xpdl.generated.jpdl32.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context) {
                super(context, "-------");
            }

            protected Unmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl.ReminderTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            attIdx = context.getAttribute("", "duedate");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "repeat");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText2(v);
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  6 :
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Duedate = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText2(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Repeat = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            attIdx = context.getAttribute("", "duedate");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "repeat");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText2(v);
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  6 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            if (("duedate" == ___local)&&("" == ___uri)) {
                                state = 1;
                                return ;
                            }
                            break;
                        case  3 :
                            if (("repeat" == ___local)&&("" == ___uri)) {
                                state = 4;
                                return ;
                            }
                            state = 6;
                            continue outer;
                        case  6 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  2 :
                            if (("duedate" == ___local)&&("" == ___uri)) {
                                state = 3;
                                return ;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "duedate");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "repeat");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText2(v);
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  6 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  5 :
                            if (("repeat" == ___local)&&("" == ___uri)) {
                                state = 6;
                                return ;
                            }
                            break;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  0 :
                                attIdx = context.getAttribute("", "duedate");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                            case  3 :
                                attIdx = context.getAttribute("", "repeat");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 6;
                                    eatText2(v);
                                    continue outer;
                                }
                                state = 6;
                                continue outer;
                            case  1 :
                                state = 2;
                                eatText1(value);
                                return ;
                            case  6 :
                                revertToParentFromText(value);
                                return ;
                            case  4 :
                                state = 5;
                                eatText2(value);
                                return ;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public class Unmarshaller
        extends ru.runa.xpdl.generated.jpdl32.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context) {
            super(context, "-----------------------------");
        }

        protected Unmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  28 :
                        if (("description" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrAssignmentOrController().add(((ru.runa.xpdl.generated.jpdl32.impl.DescriptionImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.DescriptionImpl.class), 28, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("assignment" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrAssignmentOrController().add(((ru.runa.xpdl.generated.jpdl32.impl.AssignmentImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.AssignmentImpl.class), 28, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("controller" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrAssignmentOrController().add(((ru.runa.xpdl.generated.jpdl32.impl.ControllerImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ControllerImpl.class), 28, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("event" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrAssignmentOrController().add(((ru.runa.xpdl.generated.jpdl32.impl.EventImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.EventImpl.class), 28, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("timer" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrAssignmentOrController().add(((ru.runa.xpdl.generated.jpdl32.impl.TimerImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.TimerImpl.class), 28, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("reminder" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrAssignmentOrController().add(((ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl.ReminderImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl.ReminderImpl.class), 28, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  3 :
                        attIdx = context.getAttribute("", "description");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText1(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText2(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  24 :
                        attIdx = context.getAttribute("", "swimlane");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 27;
                            eatText3(v);
                            continue outer;
                        }
                        state = 27;
                        continue outer;
                    case  21 :
                        attIdx = context.getAttribute("", "signalling");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 24;
                            eatText4(v);
                            continue outer;
                        }
                        state = 24;
                        continue outer;
                    case  18 :
                        attIdx = context.getAttribute("", "reassign");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 21;
                            eatText5(v);
                            continue outer;
                        }
                        state = 21;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "duedate");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText6(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "blocking");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText7(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  12 :
                        attIdx = context.getAttribute("", "notify");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText8(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  27 :
                        if (("description" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrAssignmentOrController().add(((ru.runa.xpdl.generated.jpdl32.impl.DescriptionImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.DescriptionImpl.class), 28, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("assignment" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrAssignmentOrController().add(((ru.runa.xpdl.generated.jpdl32.impl.AssignmentImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.AssignmentImpl.class), 28, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("controller" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrAssignmentOrController().add(((ru.runa.xpdl.generated.jpdl32.impl.ControllerImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ControllerImpl.class), 28, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("event" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrAssignmentOrController().add(((ru.runa.xpdl.generated.jpdl32.impl.EventImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.EventImpl.class), 28, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("timer" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrAssignmentOrController().add(((ru.runa.xpdl.generated.jpdl32.impl.TimerImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.TimerImpl.class), 28, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("reminder" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrAssignmentOrController().add(((ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl.ReminderImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl.ReminderImpl.class), 28, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 28;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "priority");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        state = 18;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Description = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Swimlane = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Signalling = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Reassign = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Duedate = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Blocking = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Notify = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  28 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        attIdx = context.getAttribute("", "description");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText1(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText2(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  24 :
                        attIdx = context.getAttribute("", "swimlane");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 27;
                            eatText3(v);
                            continue outer;
                        }
                        state = 27;
                        continue outer;
                    case  21 :
                        attIdx = context.getAttribute("", "signalling");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 24;
                            eatText4(v);
                            continue outer;
                        }
                        state = 24;
                        continue outer;
                    case  18 :
                        attIdx = context.getAttribute("", "reassign");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 21;
                            eatText5(v);
                            continue outer;
                        }
                        state = 21;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "duedate");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText6(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "blocking");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText7(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  12 :
                        attIdx = context.getAttribute("", "notify");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText8(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  27 :
                        state = 28;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "priority");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        state = 18;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  28 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        if (("description" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  9 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  24 :
                        if (("swimlane" == ___local)&&("" == ___uri)) {
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  21 :
                        if (("signalling" == ___local)&&("" == ___uri)) {
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  18 :
                        if (("reassign" == ___local)&&("" == ___uri)) {
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  6 :
                        if (("duedate" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  0 :
                        if (("blocking" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  12 :
                        if (("notify" == ___local)&&("" == ___uri)) {
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  27 :
                        state = 28;
                        continue outer;
                    case  15 :
                        if (("priority" == ___local)&&("" == ___uri)) {
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  28 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        attIdx = context.getAttribute("", "description");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText1(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  2 :
                        if (("blocking" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText2(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  17 :
                        if (("priority" == ___local)&&("" == ___uri)) {
                            state = 18;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("description" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  24 :
                        attIdx = context.getAttribute("", "swimlane");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 27;
                            eatText3(v);
                            continue outer;
                        }
                        state = 27;
                        continue outer;
                    case  11 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 12;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("duedate" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  23 :
                        if (("signalling" == ___local)&&("" == ___uri)) {
                            state = 24;
                            return ;
                        }
                        break;
                    case  20 :
                        if (("reassign" == ___local)&&("" == ___uri)) {
                            state = 21;
                            return ;
                        }
                        break;
                    case  21 :
                        attIdx = context.getAttribute("", "signalling");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 24;
                            eatText4(v);
                            continue outer;
                        }
                        state = 24;
                        continue outer;
                    case  18 :
                        attIdx = context.getAttribute("", "reassign");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 21;
                            eatText5(v);
                            continue outer;
                        }
                        state = 21;
                        continue outer;
                    case  26 :
                        if (("swimlane" == ___local)&&("" == ___uri)) {
                            state = 27;
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "duedate");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText6(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "blocking");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText7(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  12 :
                        attIdx = context.getAttribute("", "notify");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText8(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  27 :
                        state = 28;
                        continue outer;
                    case  14 :
                        if (("notify" == ___local)&&("" == ___uri)) {
                            state = 15;
                            return ;
                        }
                        break;
                    case  15 :
                        attIdx = context.getAttribute("", "priority");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        state = 18;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  7 :
                            state = 8;
                            eatText6(value);
                            return ;
                        case  28 :
                            revertToParentFromText(value);
                            return ;
                        case  25 :
                            state = 26;
                            eatText3(value);
                            return ;
                        case  3 :
                            attIdx = context.getAttribute("", "description");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText1(v);
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  10 :
                            state = 11;
                            eatText2(value);
                            return ;
                        case  9 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText2(v);
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  4 :
                            state = 5;
                            eatText1(value);
                            return ;
                        case  22 :
                            state = 23;
                            eatText4(value);
                            return ;
                        case  24 :
                            attIdx = context.getAttribute("", "swimlane");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 27;
                                eatText3(v);
                                continue outer;
                            }
                            state = 27;
                            continue outer;
                        case  21 :
                            attIdx = context.getAttribute("", "signalling");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 24;
                                eatText4(v);
                                continue outer;
                            }
                            state = 24;
                            continue outer;
                        case  18 :
                            attIdx = context.getAttribute("", "reassign");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 21;
                                eatText5(v);
                                continue outer;
                            }
                            state = 21;
                            continue outer;
                        case  6 :
                            attIdx = context.getAttribute("", "duedate");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText6(v);
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  13 :
                            state = 14;
                            eatText8(value);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "blocking");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText7(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  16 :
                            if (___dt0 .isValid(value, null)) {
                                state = 17;
                                eatText9(value);
                                return ;
                            }
                            if (___dt1 .isValid(value, null)) {
                                state = 17;
                                eatText10(value);
                                return ;
                            }
                            break;
                        case  19 :
                            state = 20;
                            eatText5(value);
                            return ;
                        case  12 :
                            attIdx = context.getAttribute("", "notify");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 15;
                                eatText8(v);
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                        case  1 :
                            state = 2;
                            eatText7(value);
                            return ;
                        case  27 :
                            state = 28;
                            continue outer;
                        case  15 :
                            attIdx = context.getAttribute("", "priority");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            state = 18;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Priority = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Priority = new java.lang.Integer(javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
