//
// This file was ru.runa.xpdl.generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.05.23 at 09:51:37 PM MSD 
//


package ru.runa.xpdl.generated.bpmnxpdl;


/**
 * Java content class for anonymous complex type.
 * <p>The following schema fragment specifies the expected content contained within this java content object. (defined at file:/C:/AltLinux/projects/xsd/bpmnxpdl_31.xsd line 1487)
 * <p>
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="MI_Condition" type="{http://www.wfmc.org/2008/XPDL2.1}ExpressionType" minOccurs="0"/>
 *         &lt;element name="ComplexMI_FlowCondition" type="{http://www.wfmc.org/2008/XPDL2.1}ExpressionType" minOccurs="0"/>
 *         &lt;any/>
 *       &lt;/sequence>
 *       &lt;attribute name="ComplexMI_FlowCondition2" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="LoopCounter" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="MI_Condition2" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="MI_FlowCondition" default="All">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *             &lt;enumeration value="None"/>
 *             &lt;enumeration value="One"/>
 *             &lt;enumeration value="All"/>
 *             &lt;enumeration value="Complex"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="MI_Ordering" use="required">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *             &lt;enumeration value="Sequential"/>
 *             &lt;enumeration value="Parallel"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 */
public interface LoopMultiInstanceType {


    /**
     * Gets the value of the miCondition2 property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String}
     */
    java.lang.String getMICondition2();

    /**
     * Sets the value of the miCondition2 property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String}
     */
    void setMICondition2(java.lang.String value);

    /**
     * Gets the value of the Any property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the Any property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAny().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link java.lang.Object}
     * 
     */
    java.util.List getAny();

    /**
     * Gets the value of the complexMIFlowCondition property.
     * 
     * @return
     *     possible object is
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.ExpressionType}
     */
    ru.runa.xpdl.generated.bpmnxpdl.ExpressionType getComplexMIFlowCondition();

    /**
     * Sets the value of the complexMIFlowCondition property.
     * 
     * @param value
     *     allowed object is
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.ExpressionType}
     */
    void setComplexMIFlowCondition(ru.runa.xpdl.generated.bpmnxpdl.ExpressionType value);

    /**
     * Gets the value of the complexMIFlowCondition2 property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String}
     */
    java.lang.String getComplexMIFlowCondition2();

    /**
     * Sets the value of the complexMIFlowCondition2 property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String}
     */
    void setComplexMIFlowCondition2(java.lang.String value);

    /**
     * Gets the value of the miFlowCondition property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String}
     */
    java.lang.String getMIFlowCondition();

    /**
     * Sets the value of the miFlowCondition property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String}
     */
    void setMIFlowCondition(java.lang.String value);

    /**
     * Gets the value of the miCondition property.
     * 
     * @return
     *     possible object is
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.ExpressionType}
     */
    ru.runa.xpdl.generated.bpmnxpdl.ExpressionType getMICondition();

    /**
     * Sets the value of the miCondition property.
     * 
     * @param value
     *     allowed object is
     *     {@link ru.runa.xpdl.generated.bpmnxpdl.ExpressionType}
     */
    void setMICondition(ru.runa.xpdl.generated.bpmnxpdl.ExpressionType value);

    /**
     * Gets the value of the miOrdering property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String}
     */
    java.lang.String getMIOrdering();

    /**
     * Sets the value of the miOrdering property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String}
     */
    void setMIOrdering(java.lang.String value);

    /**
     * Gets the value of the loopCounter property.
     * 
     * @return
     *     possible object is
     *     {@link java.math.BigInteger}
     */
    java.math.BigInteger getLoopCounter();

    /**
     * Sets the value of the loopCounter property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.math.BigInteger}
     */
    void setLoopCounter(java.math.BigInteger value);

}
