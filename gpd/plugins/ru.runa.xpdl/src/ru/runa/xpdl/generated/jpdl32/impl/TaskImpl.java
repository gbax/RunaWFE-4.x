//
// This file was ru.runa.xpdl.generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.05.04 at 12:24:30 PM MSD 
//


package ru.runa.xpdl.generated.jpdl32.impl;

public class TaskImpl
    extends ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl
    implements ru.runa.xpdl.generated.jpdl32.Task, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallableObject, ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializable, ru.runa.xpdl.generated.jpdl32.impl.runtime.ValidatableObject
{

    public final static java.lang.Class version = (ru.runa.xpdl.generated.jpdl32.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (ru.runa.xpdl.generated.jpdl32.Task.class);
    }

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "urn:jbpm.org:jpdl-3.2";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "task";
    }

    public ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingEventHandler createUnmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context) {
        return new ru.runa.xpdl.generated.jpdl32.impl.TaskImpl.Unmarshaller(context);
    }

    public void serializeBody(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("urn:jbpm.org:jpdl-3.2", "task");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeBody(context);
        context.endElement();
    }

    public void serializeAttributes(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (ru.runa.xpdl.generated.jpdl32.Task.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"
+"ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"
+"mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"
+"q\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsr\u0000\u001dc"
+"om.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsr\u0000 com.sun.m"
+"sv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.Un"
+"aryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5"
+"\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0013q\u0000~\u0000\u0019psq\u0000~\u0000\u0013q\u0000~\u0000\u0019psq\u0000~\u0000\u0013q\u0000~\u0000\u0019psq\u0000~\u0000\u0013"
+"q\u0000~\u0000\u0019psq\u0000~\u0000\u0013q\u0000~\u0000\u0019psq\u0000~\u0000\u0000q\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019psr\u0000 com.s"
+"un.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClas"
+"sq\u0000~\u0000\u0001xq\u0000~\u0000\u0004q\u0000~\u0000\u0019psr\u00002com.sun.msv.grammar.Expression$AnyStri"
+"ngExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000\u0018\u0001psr\u0000 com.sun.msv.grammar"
+".AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpressi"
+"on\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000&psr\u0000#com.sun.msv.grammar.SimpleNameC"
+"lass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespace"
+"URIq\u0000~\u0000-xq\u0000~\u0000(t\u0000\u001cgenerated.jpdl32.Descriptiont\u0000+http://java."
+"sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0000q\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000"
+"~\u0000\u0019psq\u0000~\u0000\"q\u0000~\u0000\u0019pq\u0000~\u0000%q\u0000~\u0000)q\u0000~\u0000+sq\u0000~\u0000,t\u0000\u001bgenerated.jpdl32.Ass"
+"ignmentq\u0000~\u00000sq\u0000~\u0000\u0000q\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\"q\u0000~\u0000\u0019pq\u0000~"
+"\u0000%q\u0000~\u0000)q\u0000~\u0000+sq\u0000~\u0000,t\u0000\u001bgenerated.jpdl32.Controllerq\u0000~\u00000sq\u0000~\u0000\u0000q"
+"\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\"q\u0000~\u0000\u0019pq\u0000~\u0000%q\u0000~\u0000)q\u0000~\u0000+sq\u0000~\u0000,t"
+"\u0000\u0016generated.jpdl32.Eventq\u0000~\u00000sq\u0000~\u0000\u0000q\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000"
+"\u0019psq\u0000~\u0000\"q\u0000~\u0000\u0019pq\u0000~\u0000%q\u0000~\u0000)q\u0000~\u0000+sq\u0000~\u0000,t\u0000\u0016generated.jpdl32.Timer"
+"q\u0000~\u00000sq\u0000~\u0000\u0000q\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\"q\u0000~\u0000\u0019pq\u0000~\u0000%q\u0000~\u0000)"
+"q\u0000~\u0000+sq\u0000~\u0000,t\u0000\"ru.runa.xpdl.generated.jpdl32.TaskType.Reminderq\u0000~\u00000q\u0000~\u0000+sq"
+"\u0000~\u0000\u0013ppsq\u0000~\u0000\"q\u0000~\u0000\u0019psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003"
+"L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004name"
+"t\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0004ppsr\u0000)com.sun.msv.data"
+"type.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/S"
+"et;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintF"
+"acet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFace"
+"t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet"
+"\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000"
+"\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000-xr\u0000"
+"\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamesp"
+"aceUriq\u0000~\u0000-L\u0000\btypeNameq\u0000~\u0000-L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/data"
+"type/xsd/WhiteSpaceProcessor;xpt\u0000\u0015urn:jbpm.org:jpdl-3.2t\u0000\u000bbo"
+"oleanTypesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Pr"
+"eserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProc"
+"essor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.StringType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.Built"
+"inAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Concrete"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000[t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006s"
+"tringq\u0000~\u0000b\u0001q\u0000~\u0000ft\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003"
+"\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0006t\u0000\u0003yest\u0000\u0002not\u0000\u0003offt\u0000\u0002ont\u0000\u0005falset\u0000\u0004truexsr\u00000"
+"com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"q\u0000~\u0000\u0004q\u0000~\u0000\u0019psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tloca"
+"lNameq\u0000~\u0000-L\u0000\fnamespaceURIq\u0000~\u0000-xpq\u0000~\u0000_q\u0000~\u0000^sq\u0000~\u0000,t\u0000\bblockingt"
+"\u0000\u0000q\u0000~\u0000+sq\u0000~\u0000\u0013ppsq\u0000~\u0000\"q\u0000~\u0000\u0019psq\u0000~\u0000Qq\u0000~\u0000\u0019pq\u0000~\u0000fq\u0000~\u0000ssq\u0000~\u0000tq\u0000~\u0000h"
+"q\u0000~\u0000gsq\u0000~\u0000,t\u0000\u000bdescriptionq\u0000~\u0000xq\u0000~\u0000+sq\u0000~\u0000\u0013ppsq\u0000~\u0000\"q\u0000~\u0000\u0019pq\u0000~\u0000{"
+"sq\u0000~\u0000,t\u0000\u0007duedateq\u0000~\u0000xq\u0000~\u0000+sq\u0000~\u0000\u0013ppsq\u0000~\u0000\"q\u0000~\u0000\u0019pq\u0000~\u0000{sq\u0000~\u0000,t\u0000\u0004"
+"nameq\u0000~\u0000xq\u0000~\u0000+sq\u0000~\u0000\u0013ppsq\u0000~\u0000\"q\u0000~\u0000\u0019pq\u0000~\u0000Tsq\u0000~\u0000,t\u0000\u0006notifyq\u0000~\u0000xq"
+"\u0000~\u0000+sq\u0000~\u0000\u0013ppsq\u0000~\u0000\"q\u0000~\u0000\u0019psq\u0000~\u0000Qppsr\u0000\"com.sun.msv.datatype.xsd"
+".UnionType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001[\u0000\u000bmemberTypest\u0000*[Lcom/sun/msv/datatype"
+"/xsd/XSDatatypeImpl;xq\u0000~\u0000eq\u0000~\u0000^t\u0000\fpriorityTypesr\u00005com.sun.ms"
+"v.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000a"
+"ur\u0000*[Lcom.sun.msv.datatype.xsd.XSDatatypeImpl;H\u001c\u00ad{pzHw\u0002\u0000\u0000xp\u0000"
+"\u0000\u0000\u0002sq\u0000~\u0000Uq\u0000~\u0000^pq\u0000~\u0000b\u0000\u0000q\u0000~\u0000fq\u0000~\u0000fq\u0000~\u0000isq\u0000~\u0000jw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0005t\u0000\u0007"
+"highestt\u0000\u0006normalt\u0000\u0004hight\u0000\u0003lowt\u0000\u0006lowestxsr\u0000\'com.sun.msv.datat"
+"ype.xsd.FinalComponent\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\nfinalValuexr\u0000\u001ecom.sun.ms"
+"v.datatype.xsd.Proxy\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bbaseTypeq\u0000~\u0000Yxq\u0000~\u0000[q\u0000~\u0000^pq"
+"\u0000~\u0000\u0093sr\u0000 com.sun.msv.datatype.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.s"
+"un.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFace"
+"tsq\u0000~\u0000Yxq\u0000~\u0000dq\u0000~\u0000gt\u0000\u0003intq\u0000~\u0000\u0093sr\u0000*com.sun.msv.datatype.xsd.Ma"
+"xInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.Range"
+"Facet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object;xq\u0000~\u0000Wppq\u0000"
+"~\u0000\u0093\u0000\u0001sr\u0000*com.sun.msv.datatype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u00a5ppq\u0000~\u0000\u0093\u0000\u0000sr\u0000!com.sun.msv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u00a1q\u0000~\u0000gt\u0000\u0004longq\u0000~\u0000\u0093sq\u0000~\u0000\u00a4ppq\u0000~\u0000\u0093\u0000\u0001sq\u0000~\u0000\u00a8ppq\u0000~\u0000\u0093\u0000\u0000sr"
+"\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u00a1q\u0000~\u0000g"
+"t\u0000\u0007integerq\u0000~\u0000\u0093sr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFa"
+"cet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeW"
+"ithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000Xppq\u0000~\u0000\u0093\u0001\u0000sr\u0000#com.s"
+"un.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000dq\u0000~\u0000gt\u0000\u0007decim"
+"alq\u0000~\u0000\u0093q\u0000~\u0000\u00b6t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000\u00b0t\u0000\fminInclusivesr\u0000\u000ejav"
+"a.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000"
+"\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000\u00b0t\u0000\fmaxInclusivesq\u0000~\u0000\u00ba\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000\u00abq\u0000~\u0000\u00b9sr\u0000\u0011j"
+"ava.lang.Integer\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005valuexq\u0000~\u0000\u00bb\u0080\u0000\u0000\u0000q\u0000~\u0000\u00abq\u0000~\u0000\u00bdsq\u0000~\u0000"
+"\u00bf\u007f\u00ff\u00ff\u00ff\u0000\u0000\u0000\u0000q\u0000~\u0000spsq\u0000~\u0000,t\u0000\bpriorityq\u0000~\u0000xq\u0000~\u0000+sq\u0000~\u0000\u0013ppsq\u0000~\u0000\"q\u0000~\u0000"
+"\u0019pq\u0000~\u0000Tsq\u0000~\u0000,t\u0000\breassignq\u0000~\u0000xq\u0000~\u0000+sq\u0000~\u0000\u0013ppsq\u0000~\u0000\"q\u0000~\u0000\u0019pq\u0000~\u0000Ts"
+"q\u0000~\u0000,t\u0000\nsignallingq\u0000~\u0000xq\u0000~\u0000+sq\u0000~\u0000\u0013ppsq\u0000~\u0000\"q\u0000~\u0000\u0019pq\u0000~\u0000{sq\u0000~\u0000,t"
+"\u0000\bswimlaneq\u0000~\u0000xq\u0000~\u0000+sq\u0000~\u0000\u0013ppsq\u0000~\u0000\"q\u0000~\u0000\u0019psq\u0000~\u0000Qppsr\u0000\"com.sun."
+"msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000dq\u0000~\u0000gt\u0000\u0005QNameq\u0000~\u0000"
+"\u0093q\u0000~\u0000ssq\u0000~\u0000tq\u0000~\u0000\u00d5q\u0000~\u0000gsq\u0000~\u0000,t\u0000\u0004typet\u0000)http://www.w3.org/2001"
+"/XMLSchema-instanceq\u0000~\u0000+sq\u0000~\u0000,t\u0000\u0004taskq\u0000~\u0000^sr\u0000\"com.sun.msv.gr"
+"ammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gr"
+"ammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Ex"
+"pressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000"
+"\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\'\u0001pq\u0000~\u0000yq"
+"\u0000~\u0000\rq\u0000~\u0000\tq\u0000~\u0000\u001eq\u0000~\u0000\u000eq\u0000~\u0000\u0083q\u0000~\u0000\nq\u0000~\u0000\u0011q\u0000~\u0000\u00c8q\u0000~\u0000\u007fq\u0000~\u0000\u0010q\u0000~\u0000\u00d0q\u0000~\u0000\u000fq"
+"\u0000~\u0000\u00c4q\u0000~\u0000\u0014q\u0000~\u0000\u001aq\u0000~\u0000\u000bq\u0000~\u0000\u001bq\u0000~\u0000!q\u0000~\u00003q\u0000~\u00009q\u0000~\u0000?q\u0000~\u0000Eq\u0000~\u0000Kq\u0000~\u0000Oq"
+"\u0000~\u0000\u0017q\u0000~\u0000\u00ccq\u0000~\u0000 q\u0000~\u00002q\u0000~\u00008q\u0000~\u0000>q\u0000~\u0000Dq\u0000~\u0000Jq\u0000~\u0000\u008bq\u0000~\u0000\u0087q\u0000~\u0000\u001cq\u0000~\u0000\u0012q"
+"\u0000~\u0000\u001dq\u0000~\u0000\fx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends ru.runa.xpdl.generated.jpdl32.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context) {
            super(context, "----");
        }

        protected Unmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return ru.runa.xpdl.generated.jpdl32.impl.TaskImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        attIdx = context.getAttribute("", "blocking");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "description");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "duedate");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "notify");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "priority");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "reassign");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "signalling");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "swimlane");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("description" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            spawnHandlerFromEnterElement((((ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl) ru.runa.xpdl.generated.jpdl32.impl.TaskImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("assignment" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            spawnHandlerFromEnterElement((((ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl) ru.runa.xpdl.generated.jpdl32.impl.TaskImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("controller" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            spawnHandlerFromEnterElement((((ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl) ru.runa.xpdl.generated.jpdl32.impl.TaskImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("event" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            spawnHandlerFromEnterElement((((ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl) ru.runa.xpdl.generated.jpdl32.impl.TaskImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("timer" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            spawnHandlerFromEnterElement((((ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl) ru.runa.xpdl.generated.jpdl32.impl.TaskImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("reminder" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            spawnHandlerFromEnterElement((((ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl) ru.runa.xpdl.generated.jpdl32.impl.TaskImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl) ru.runa.xpdl.generated.jpdl32.impl.TaskImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        if (("task" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        attIdx = context.getAttribute("", "blocking");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "description");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "duedate");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "notify");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "priority");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "reassign");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "signalling");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "swimlane");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        spawnHandlerFromLeaveElement((((ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl) ru.runa.xpdl.generated.jpdl32.impl.TaskImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("task" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        if (("blocking" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl) ru.runa.xpdl.generated.jpdl32.impl.TaskImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("description" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl) ru.runa.xpdl.generated.jpdl32.impl.TaskImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("duedate" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl) ru.runa.xpdl.generated.jpdl32.impl.TaskImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("name" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl) ru.runa.xpdl.generated.jpdl32.impl.TaskImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("notify" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl) ru.runa.xpdl.generated.jpdl32.impl.TaskImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("priority" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl) ru.runa.xpdl.generated.jpdl32.impl.TaskImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("reassign" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl) ru.runa.xpdl.generated.jpdl32.impl.TaskImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("signalling" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl) ru.runa.xpdl.generated.jpdl32.impl.TaskImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("swimlane" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl) ru.runa.xpdl.generated.jpdl32.impl.TaskImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        spawnHandlerFromEnterAttribute((((ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl) ru.runa.xpdl.generated.jpdl32.impl.TaskImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        attIdx = context.getAttribute("", "blocking");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "description");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "duedate");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "notify");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "priority");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "reassign");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "signalling");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "swimlane");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        spawnHandlerFromLeaveAttribute((((ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl) ru.runa.xpdl.generated.jpdl32.impl.TaskImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                        case  1 :
                            attIdx = context.getAttribute("", "blocking");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "description");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "duedate");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "notify");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "priority");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "reassign");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "signalling");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "swimlane");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            spawnHandlerFromText((((ru.runa.xpdl.generated.jpdl32.impl.TaskTypeImpl) ru.runa.xpdl.generated.jpdl32.impl.TaskImpl.this).new Unmarshaller(context)), 2, value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
