//
// This file was ru.runa.xpdl.generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.05.04 at 12:24:30 PM MSD 
//


package ru.runa.xpdl.generated.jpdl32.impl;

import ru.runa.xpdl.convertor.Helper;
import ru.runa.xpdl.generated.jpdl32.Transition;

import java.util.List;

public class DecisionTypeImpl implements ru.runa.xpdl.generated.jpdl32.DecisionType, com.sun.xml.bind.JAXBObject, ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallableObject, ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializable, ru.runa.xpdl.generated.jpdl32.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _DescriptionOrHandlerOrEvent;
    protected java.lang.String _Name;
    protected java.lang.String _Async;
    protected java.lang.String _Expression;
    public final static java.lang.Class version = (ru.runa.xpdl.generated.jpdl32.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (ru.runa.xpdl.generated.jpdl32.DecisionType.class);
    }

    protected com.sun.xml.bind.util.ListImpl _getDescriptionOrHandlerOrEvent() {
        if (_DescriptionOrHandlerOrEvent == null) {
            _DescriptionOrHandlerOrEvent = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _DescriptionOrHandlerOrEvent;
    }

    public java.util.List getDescriptionOrHandlerOrEvent() {
        return _getDescriptionOrHandlerOrEvent();
    }

    public java.lang.String getName() {
        return (_Name==null)?(null):(_Name.replace("/","\\"));
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public void setDescription(String s)
    {
            //To change body of implemented methods use File | Settings | File Templates.
        DescriptionImpl description=new DescriptionImpl();
        description.setValue(s);
        this.getDescriptionOrHandlerOrEvent().add(description);
    }

    public List getSubObjectList() {
       return this.getDescriptionOrHandlerOrEvent();
    }

    public void addTransition(Transition transition) {
        //To change body of implemented methods use File | Settings | File Templates.
        this.getDescriptionOrHandlerOrEvent().add(transition);
        String varName= Helper.generateVariableName(this.getName());
        String script="<![CDATA[";
        int transIndex=0;
        ru.runa.xpdl.generated.jpdl32.DecisionType.Handler handler=null;
        for (Object __tr: this.getDescriptionOrHandlerOrEvent())
        {
          if (__tr instanceof ru.runa.xpdl.generated.jpdl32.DecisionType.Handler)
          {
              handler=(ru.runa.xpdl.generated.jpdl32.DecisionType.Handler)(__tr);
              continue;
          }
          if (!(__tr instanceof  Transition)) continue;
          Transition _trans=(Transition)(__tr);
          script+= "if ( "+varName+".doubleValue() == " + transIndex+" ) {\n\treturn \""+_trans.getName()+"\";\n}\n";
          transIndex++;
        }

        script+="]]>";
        if (handler != null)
            handler.getContent().set(0,script);
    }

    public java.lang.String getAsync() {
        if (_Async == null) {
            return "false";
        } else {
            return _Async;
        }
    }

    public void setAsync(java.lang.String value) {
        _Async = value;
    }

    public java.lang.String getExpression() {
        return _Expression;
    }

    public void setExpression(java.lang.String value) {
        _Expression = value;
    }

    public ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingEventHandler createUnmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context) {
        return new ru.runa.xpdl.generated.jpdl32.impl.DecisionTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_DescriptionOrHandlerOrEvent == null)? 0 :_DescriptionOrHandlerOrEvent.size());
        while (idx1 != len1) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _DescriptionOrHandlerOrEvent.get(idx1 ++)), "DescriptionOrHandlerOrEvent");
        }
    }

    public void serializeAttributes(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_DescriptionOrHandlerOrEvent == null)? 0 :_DescriptionOrHandlerOrEvent.size());
        if (_Async!= null) {
            context.startAttribute("", "async");
            try {
                context.text(((java.lang.String) _Async), "Async");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Expression!= null) {
            context.startAttribute("", "expression");
            try {
                context.text(((java.lang.String) _Expression), "Expression");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "name");
        try {
            context.text(((java.lang.String) _Name), "Name");
        } catch (java.lang.Exception e) {
            ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        while (idx1 != len1) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _DescriptionOrHandlerOrEvent.get(idx1 ++)), "DescriptionOrHandlerOrEvent");
        }
    }

    public void serializeURIs(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_DescriptionOrHandlerOrEvent == null)? 0 :_DescriptionOrHandlerOrEvent.size());
        while (idx1 != len1) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _DescriptionOrHandlerOrEvent.get(idx1 ++)), "DescriptionOrHandlerOrEvent");
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (ru.runa.xpdl.generated.jpdl32.DecisionType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar."
+"ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.OneOrMor"
+"eExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000ps"
+"q\u0000~\u0000\bq\u0000~\u0000\u000epsq\u0000~\u0000\bq\u0000~\u0000\u000epsq\u0000~\u0000\bq\u0000~\u0000\u000epsq\u0000~\u0000\bq\u0000~\u0000\u000epsr\u0000\'com.sun.m"
+"sv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom"
+"/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000"
+"\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\nq\u0000~\u0000\u000epsr\u0000 com.sun.msv.grammar.At"
+"tributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0014xq\u0000~\u0000\u0003q\u0000~\u0000\u000e"
+"psr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\r\u0001psr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com"
+".sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\u0003q\u0000~\u0000\u001dpsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000"
+"\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000$xq\u0000~\u0000\u001ft\u0000\u001c"
+"ru.runa.xpdl.generated.jpdl32.Descriptiont\u0000+http://java.sun.com/jaxb/xjc/"
+"dummy-elementssq\u0000~\u0000\u0013q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\nq\u0000~\u0000\u000epsq\u0000~\u0000\u0019q\u0000~\u0000\u000epq"
+"\u0000~\u0000\u001cq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#t\u0000%ru.runa.xpdl.generated.jpdl32.DecisionType.Handler"
+"q\u0000~\u0000\'sq\u0000~\u0000\u0013q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\nq\u0000~\u0000\u000epsq\u0000~\u0000\u0019q\u0000~\u0000\u000epq\u0000~\u0000\u001cq\u0000~\u0000 "
+"q\u0000~\u0000\"sq\u0000~\u0000#t\u0000\u0016generated.jpdl32.Eventq\u0000~\u0000\'sq\u0000~\u0000\u0013q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\b"
+"ppsq\u0000~\u0000\nq\u0000~\u0000\u000epsq\u0000~\u0000\u0019q\u0000~\u0000\u000epq\u0000~\u0000\u001cq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#t\u0000!ru.runa.xpdl.generated."
+"jpdl32.ExceptionHandlerq\u0000~\u0000\'sq\u0000~\u0000\u0013q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\nq\u0000~\u0000\u000e"
+"psq\u0000~\u0000\u0019q\u0000~\u0000\u000epq\u0000~\u0000\u001cq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#t\u0000\u001bgenerated.jpdl32.Transi"
+"tionq\u0000~\u0000\'q\u0000~\u0000\"sq\u0000~\u0000\bppsq\u0000~\u0000\u0019q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.grammar.Da"
+"taExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006ex"
+"ceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003q\u0000~\u0000\u000ep"
+"sr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlway"
+"sValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'c"
+"om.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespac"
+"eUriq\u0000~\u0000$L\u0000\btypeNameq\u0000~\u0000$L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/dataty"
+"pe/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSc"
+"hemat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcesso"
+"r$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpace"
+"Processor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$Nu"
+"llSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.util.S"
+"tringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000$L\u0000\fnamespaceURIq\u0000~\u0000$xpq"
+"\u0000~\u0000Mq\u0000~\u0000Lsq\u0000~\u0000#t\u0000\u0005asynct\u0000\u0000q\u0000~\u0000\"sq\u0000~\u0000\bppsq\u0000~\u0000\u0019q\u0000~\u0000\u000epq\u0000~\u0000Esq\u0000~"
+"\u0000#t\u0000\nexpressionq\u0000~\u0000Wq\u0000~\u0000\"sq\u0000~\u0000\u0019ppq\u0000~\u0000Esq\u0000~\u0000#t\u0000\u0004nameq\u0000~\u0000Wsr\u0000\""
+"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/L"
+"com/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun."
+"msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rs"
+"treamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;"
+"xp\u0000\u0000\u0000\u0015\u0001pq\u0000~\u0000\u0012q\u0000~\u0000\fq\u0000~\u0000\u000fq\u0000~\u0000\u0005q\u0000~\u0000\u0018q\u0000~\u0000*q\u0000~\u00000q\u0000~\u00006q\u0000~\u0000<q\u0000~\u0000\tq\u0000"
+"~\u0000Xq\u0000~\u0000\u0017q\u0000~\u0000)q\u0000~\u0000/q\u0000~\u00005q\u0000~\u0000;q\u0000~\u0000\u0007q\u0000~\u0000\u0010q\u0000~\u0000\u0011q\u0000~\u0000\u0006q\u0000~\u0000@x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public static class HandlerImpl
        extends ru.runa.xpdl.generated.jpdl32.impl.DelegationImpl
        implements ru.runa.xpdl.generated.jpdl32.DecisionType.Handler, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallableObject, ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializable, ru.runa.xpdl.generated.jpdl32.impl.runtime.ValidatableObject
    {

        public final static java.lang.Class version = (ru.runa.xpdl.generated.jpdl32.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (ru.runa.xpdl.generated.jpdl32.DecisionType.Handler.class);
        }

        public java.lang.String ____jaxb_ri____getNamespaceURI() {
            return "urn:jbpm.org:jpdl-3.2";
        }

        public java.lang.String ____jaxb_ri____getLocalName() {
            return "handler";
        }

        public ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingEventHandler createUnmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context) {
            return new ru.runa.xpdl.generated.jpdl32.impl.DecisionTypeImpl.HandlerImpl.Unmarshaller(context);
        }

        public void serializeBody(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            context.startElement("urn:jbpm.org:jpdl-3.2", "handler");
            super.serializeURIs(context);
            context.endNamespaceDecls();
            super.serializeAttributes(context);
            context.endAttributes();
            super.serializeBody(context);
            context.endElement();
        }

        public void serializeAttributes(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public void serializeURIs(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public java.lang.Class getPrimaryInterface() {
            return (ru.runa.xpdl.generated.jpdl32.DecisionType.Handler.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"
+"ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"
+"mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"
+"r\u0000\u001ccom.sun.msv.grammar.MixedExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.gr"
+"ammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsr\u0000\u001dcom.sun.msv."
+"grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsr\u0000 com.sun.msv.grammar."
+"OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\rsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000"
+"\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0000q\u0000~\u0000\u0014p\u0000sr\u0000 com.sun.msv.grammar.AttributeE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004ppsr\u00002com.sun"
+".msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004"
+"sq\u0000~\u0000\u0013\u0001psr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dc"
+"om.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000&com.sun.msv.gra"
+"mmar.NamespaceNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\fnamespaceURIt\u0000\u0012Ljava/la"
+"ng/String;xq\u0000~\u0000\u001ct\u0000+http://java.sun.com/jaxb/xjc/dummy-elemen"
+"tssr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000\u001apsq\u0000~\u0000\u000fppsq\u0000~\u0000\u0016q\u0000~\u0000\u0014psr\u0000\u001bcom.sun.msv.grammar"
+".DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000"
+"\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0004q\u0000~"
+"\u0000\u0014psr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAl"
+"waysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnames"
+"paceUriq\u0000~\u0000\u001fL\u0000\btypeNameq\u0000~\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/dat"
+"atype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XM"
+"LSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProce"
+"ssor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSp"
+"aceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression"
+"$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000\u0014psr\u0000\u001bcom.sun.msv.uti"
+"l.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001f"
+"xpq\u0000~\u00001q\u0000~\u00000sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fxq\u0000~\u0000\u001ct\u0000\u0006class2t\u0000\u0000q\u0000~"
+"\u0000#sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0016q\u0000~\u0000\u0014psq\u0000~\u0000&ppsr\u0000)com.sun.msv.datatype.xsd.E"
+"numerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com"
+".sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7"
+"\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun"
+"/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/"
+"msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001fxq\u0000~\u0000-t\u0000\u0015urn:"
+"jbpm.org:jpdl-3.2pq\u0000~\u00004\u0000\u0000q\u0000~\u0000/q\u0000~\u0000/t\u0000\u000benumerationsr\u0000\u0011java.ut"
+"il.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004t\u0000\u0005fieldt\u0000\u0004beant\u0000\u0016confi"
+"guration-propertyt\u0000\u000bconstructorxq\u0000~\u00006sq\u0000~\u00007t\u0000\u000estring-derived"
+"q\u0000~\u0000Gsq\u0000~\u00009t\u0000\u000bconfig-typeq\u0000~\u0000<q\u0000~\u0000#sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0016q\u0000~\u0000\u0014psq\u0000~\u0000"
+"&ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000+q\u0000"
+"~\u00000t\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$"
+"Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00003q\u0000~\u00006sq\u0000~\u00007q\u0000~\u0000Xq\u0000~\u00000sq\u0000~\u00009t\u0000\u0004typet"
+"\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000#sq\u0000~\u00009t\u0000\u0007han"
+"dlerq\u0000~\u0000Gsr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;x"
+"psr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000"
+"\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Ex"
+"pressionPool;xp\u0000\u0000\u0000\t\u0001pq\u0000~\u0000\u000bq\u0000~\u0000\u0010q\u0000~\u0000=q\u0000~\u0000$q\u0000~\u0000\nq\u0000~\u0000Sq\u0000~\u0000\tq\u0000~\u0000"
+"\u000eq\u0000~\u0000\u0012x"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends ru.runa.xpdl.generated.jpdl32.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return ru.runa.xpdl.generated.jpdl32.impl.DecisionTypeImpl.HandlerImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  1 :
                            attIdx = context.getAttribute("", "class");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "config-type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            if (true) {
                                spawnHandlerFromEnterElement((((ru.runa.xpdl.generated.jpdl32.impl.DelegationImpl) ru.runa.xpdl.generated.jpdl32.impl.DecisionTypeImpl.HandlerImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            spawnHandlerFromEnterElement((((ru.runa.xpdl.generated.jpdl32.impl.DelegationImpl) ru.runa.xpdl.generated.jpdl32.impl.DecisionTypeImpl.HandlerImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        case  0 :
                            if (("handler" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 1;
                                return ;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  2 :
                            if (("handler" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  1 :
                            attIdx = context.getAttribute("", "class");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "config-type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            spawnHandlerFromLeaveElement((((ru.runa.xpdl.generated.jpdl32.impl.DelegationImpl) ru.runa.xpdl.generated.jpdl32.impl.DecisionTypeImpl.HandlerImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  1 :
                            if (("class" == ___local)&&("" == ___uri)) {
                                spawnHandlerFromEnterAttribute((((ru.runa.xpdl.generated.jpdl32.impl.DelegationImpl) ru.runa.xpdl.generated.jpdl32.impl.DecisionTypeImpl.HandlerImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                return ;
                            }
                            if (("config-type" == ___local)&&("" == ___uri)) {
                                spawnHandlerFromEnterAttribute((((ru.runa.xpdl.generated.jpdl32.impl.DelegationImpl) ru.runa.xpdl.generated.jpdl32.impl.DecisionTypeImpl.HandlerImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                return ;
                            }
                            spawnHandlerFromEnterAttribute((((ru.runa.xpdl.generated.jpdl32.impl.DelegationImpl) ru.runa.xpdl.generated.jpdl32.impl.DecisionTypeImpl.HandlerImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  1 :
                            attIdx = context.getAttribute("", "class");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "config-type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            spawnHandlerFromLeaveAttribute((((ru.runa.xpdl.generated.jpdl32.impl.DelegationImpl) ru.runa.xpdl.generated.jpdl32.impl.DecisionTypeImpl.HandlerImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                            case  1 :
                                attIdx = context.getAttribute("", "class");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "config-type");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                spawnHandlerFromText((((ru.runa.xpdl.generated.jpdl32.impl.DelegationImpl) ru.runa.xpdl.generated.jpdl32.impl.DecisionTypeImpl.HandlerImpl.this).new Unmarshaller(context)), 2, value);
                                return ;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public class Unmarshaller
        extends ru.runa.xpdl.generated.jpdl32.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context) {
            super(context, "-----------");
        }

        protected Unmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return ru.runa.xpdl.generated.jpdl32.impl.DecisionTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  10 :
                        if (("description" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrHandlerOrEvent().add(((ru.runa.xpdl.generated.jpdl32.impl.DescriptionImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.DescriptionImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("handler" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrHandlerOrEvent().add(((ru.runa.xpdl.generated.jpdl32.impl.DecisionTypeImpl.HandlerImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.DecisionTypeImpl.HandlerImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("event" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrHandlerOrEvent().add(((ru.runa.xpdl.generated.jpdl32.impl.EventImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.EventImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("exception-handler" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrHandlerOrEvent().add(((ru.runa.xpdl.generated.jpdl32.impl.ExceptionHandlerImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ExceptionHandlerImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("transition" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrHandlerOrEvent().add(((ru.runa.xpdl.generated.jpdl32.impl.TransitionImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.TransitionImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  6 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "expression");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText2(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "async");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText3(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  9 :
                        if (("description" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrHandlerOrEvent().add(((ru.runa.xpdl.generated.jpdl32.impl.DescriptionImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.DescriptionImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("handler" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrHandlerOrEvent().add(((ru.runa.xpdl.generated.jpdl32.impl.DecisionTypeImpl.HandlerImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.DecisionTypeImpl.HandlerImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("event" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrHandlerOrEvent().add(((ru.runa.xpdl.generated.jpdl32.impl.EventImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.EventImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("exception-handler" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrHandlerOrEvent().add(((ru.runa.xpdl.generated.jpdl32.impl.ExceptionHandlerImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ExceptionHandlerImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("transition" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getDescriptionOrHandlerOrEvent().add(((ru.runa.xpdl.generated.jpdl32.impl.TransitionImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.TransitionImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 10;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Expression = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Async = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  10 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "expression");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText2(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "async");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText3(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  9 :
                        state = 10;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  10 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        break;
                    case  3 :
                        if (("expression" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  0 :
                        if (("async" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  9 :
                        state = 10;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  10 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case  5 :
                        if (("expression" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  2 :
                        if (("async" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "expression");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText2(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "async");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText3(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  8 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  9 :
                        state = 10;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  7 :
                            state = 8;
                            eatText1(value);
                            return ;
                        case  10 :
                            revertToParentFromText(value);
                            return ;
                        case  6 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "expression");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText2(v);
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "async");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText3(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  1 :
                            state = 2;
                            eatText3(value);
                            return ;
                        case  4 :
                            state = 5;
                            eatText2(value);
                            return ;
                        case  9 :
                            state = 10;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
