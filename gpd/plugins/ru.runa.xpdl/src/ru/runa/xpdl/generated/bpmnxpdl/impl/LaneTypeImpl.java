//
// This file was ru.runa.xpdl.generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.05.23 at 09:51:37 PM MSD 
//


package ru.runa.xpdl.generated.bpmnxpdl.impl;

public class LaneTypeImpl implements ru.runa.xpdl.generated.bpmnxpdl.LaneType, com.sun.xml.bind.JAXBObject, ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.UnmarshallableObject, ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.XMLSerializable, ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.ValidatableObject
{

    protected java.lang.String _Name;
    protected java.lang.String _ParentLane;
    protected com.sun.xml.bind.util.ListImpl _Any;
    protected java.lang.String _Id;
    protected java.lang.String _ParentPool;
    protected ru.runa.xpdl.generated.bpmnxpdl.ObjectType _Object;
    protected com.sun.xml.bind.util.ListImpl _NestedLane;
    protected ru.runa.xpdl.generated.bpmnxpdl.PerformersType _Performers;
    protected ru.runa.xpdl.generated.bpmnxpdl.NodeGraphicsInfosType _NodeGraphicsInfos;
    public final static java.lang.Class version = (ru.runa.xpdl.generated.bpmnxpdl.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (ru.runa.xpdl.generated.bpmnxpdl.LaneType.class);
    }

    public java.lang.String getName() {
        return (_Name==null)?(""):(_Name);
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public java.lang.String getParentLane() {
        return _ParentLane;
    }

    public void setParentLane(java.lang.String value) {
        _ParentLane = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getAny() {
        if (_Any == null) {
            _Any = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Any;
    }

    public java.util.List getAny() {
        return _getAny();
    }

    public java.lang.String getId() {
        return _Id;
    }

    public void setId(java.lang.String value) {
        _Id = value;
    }

    public java.lang.String getParentPool() {
        return _ParentPool;
    }

    public void setParentPool(java.lang.String value) {
        _ParentPool = value;
    }

    public ru.runa.xpdl.generated.bpmnxpdl.ObjectType getObject() {
        return _Object;
    }

    public void setObject(ru.runa.xpdl.generated.bpmnxpdl.ObjectType value) {
        _Object = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getNestedLane() {
        if (_NestedLane == null) {
            _NestedLane = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _NestedLane;
    }

    public java.util.List getNestedLane() {
        return _getNestedLane();
    }

    public ru.runa.xpdl.generated.bpmnxpdl.PerformersType getPerformers() {
        return _Performers;
    }

    public void setPerformers(ru.runa.xpdl.generated.bpmnxpdl.PerformersType value) {
        _Performers = value;
    }

    public ru.runa.xpdl.generated.bpmnxpdl.NodeGraphicsInfosType getNodeGraphicsInfos() {
        return _NodeGraphicsInfos;
    }

    public void setNodeGraphicsInfos(ru.runa.xpdl.generated.bpmnxpdl.NodeGraphicsInfosType value) {
        _NodeGraphicsInfos = value;
    }

    public ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.UnmarshallingEventHandler createUnmarshaller(ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.UnmarshallingContext context) {
        return new ru.runa.xpdl.generated.bpmnxpdl.impl.LaneTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx3 = 0;
        final int len3 = ((_Any == null)? 0 :_Any.size());
        int idx7 = 0;
        final int len7 = ((_NestedLane == null)? 0 :_NestedLane.size());
        if (_Object!= null) {
            if (_Object instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Object), "Object");
            } else {
                context.startElement("http://www.wfmc.org/2008/XPDL2.1", "Object");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Object), "Object");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Object), "Object");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Object), "Object");
                context.endElement();
            }
        }
        if (_NodeGraphicsInfos!= null) {
            if (_NodeGraphicsInfos instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _NodeGraphicsInfos), "NodeGraphicsInfos");
            } else {
                context.startElement("http://www.wfmc.org/2008/XPDL2.1", "NodeGraphicsInfos");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _NodeGraphicsInfos), "NodeGraphicsInfos");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _NodeGraphicsInfos), "NodeGraphicsInfos");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _NodeGraphicsInfos), "NodeGraphicsInfos");
                context.endElement();
            }
        }
        if (_Performers!= null) {
            if (_Performers instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Performers), "Performers");
            } else {
                context.startElement("http://www.wfmc.org/2008/XPDL2.1", "Performers");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Performers), "Performers");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Performers), "Performers");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Performers), "Performers");
                context.endElement();
            }
        }
        while (idx7 != len7) {
            context.startElement("http://www.wfmc.org/2008/XPDL2.1", "NestedLane");
            int idx_6 = idx7;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _NestedLane.get(idx_6 ++)), "NestedLane");
            context.endNamespaceDecls();
            int idx_7 = idx7;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _NestedLane.get(idx_7 ++)), "NestedLane");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _NestedLane.get(idx7 ++)), "NestedLane");
            context.endElement();
        }
        while (idx3 != len3) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Any.get(idx3 ++)), "Any");
        }
    }

    public void serializeAttributes(ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx3 = 0;
        final int len3 = ((_Any == null)? 0 :_Any.size());
        int idx7 = 0;
        final int len7 = ((_NestedLane == null)? 0 :_NestedLane.size());
        context.startAttribute("", "Id");
        try {
            context.text(((java.lang.String) _Id), "Id");
        } catch (java.lang.Exception e) {
            ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_Name!= null) {
            context.startAttribute("", "Name");
            try {
                context.text(((java.lang.String) _Name), "Name");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_ParentLane!= null) {
            context.startAttribute("", "ParentLane");
            try {
                context.text(((java.lang.String) _ParentLane), "ParentLane");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_ParentPool!= null) {
            context.startAttribute("", "ParentPool");
            try {
                context.text(((java.lang.String) _ParentPool), "ParentPool");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Object!= null) {
            if (_Object instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Object), "Object");
            }
        }
        if (_NodeGraphicsInfos!= null) {
            if (_NodeGraphicsInfos instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _NodeGraphicsInfos), "NodeGraphicsInfos");
            }
        }
        if (_Performers!= null) {
            if (_Performers instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Performers), "Performers");
            }
        }
        while (idx7 != len7) {
            idx7 += 1;
        }
        while (idx3 != len3) {
            idx3 += 1;
        }
    }

    public void serializeURIs(ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx3 = 0;
        final int len3 = ((_Any == null)? 0 :_Any.size());
        int idx7 = 0;
        final int len7 = ((_NestedLane == null)? 0 :_NestedLane.size());
        if (_Object!= null) {
            if (_Object instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Object), "Object");
            }
        }
        if (_NodeGraphicsInfos!= null) {
            if (_NodeGraphicsInfos instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _NodeGraphicsInfos), "NodeGraphicsInfos");
            }
        }
        if (_Performers!= null) {
            if (_Performers instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Performers), "Performers");
            }
        }
        while (idx7 != len7) {
            idx7 += 1;
        }
        while (idx3 != len3) {
            idx3 += 1;
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (ru.runa.xpdl.generated.bpmnxpdl.LaneType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0001ppsq\u0000~\u0000\rsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr"
+"\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameC"
+"lasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gramma"
+"r.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fconte"
+"ntModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\rppsr\u0000 com.sun.msv.grammar.One"
+"OrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0011psr\u0000 com.sun.msv.grammar.AttributeE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0013xq\u0000~\u0000\u0003q\u0000~\u0000\u0011psr\u00002com"
+".sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u0003sq\u0000~\u0000\u0010\u0001q\u0000~\u0000\u001dsr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun"
+".msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000"
+"~\u0000\u001eq\u0000~\u0000#sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000"
+"\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000%xq\u0000~\u0000 t\u0000\u0019"
+"ru.runa.xpdl.generated.bpmnxpdl.Objectt\u0000+http://java.sun.com/jaxb/xjc/dum"
+"my-elementssq\u0000~\u0000\u0012q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0012pp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0017q\u0000~\u0000\u0011"
+"psq\u0000~\u0000\u001aq\u0000~\u0000\u0011pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000\u001dgenerated.bpmnxpdl.Obje"
+"ctTypeq\u0000~\u0000(sq\u0000~\u0000\rppsq\u0000~\u0000\u001aq\u0000~\u0000\u0011psr\u0000\u001bcom.sun.msv.grammar.DataE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006excep"
+"tq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com"
+".sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.da"
+"tatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datat"
+"ype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd."
+"XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000%L\u0000\btypeNameq\u0000~\u0000"
+"%L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcess"
+"or;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun."
+"msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,"
+"com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000"
+"0com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0003q\u0000~\u0000\u0011psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tloc"
+"alNameq\u0000~\u0000%L\u0000\fnamespaceURIq\u0000~\u0000%xpq\u0000~\u0000>q\u0000~\u0000=sq\u0000~\u0000$t\u0000\u0004typet\u0000)h"
+"ttp://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000#sq\u0000~\u0000$t\u0000\u0006Object"
+"t\u0000 http://www.wfmc.org/2008/XPDL2.1q\u0000~\u0000#sq\u0000~\u0000\rppsq\u0000~\u0000\rq\u0000~\u0000\u0011p"
+"sq\u0000~\u0000\u0012q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0017q\u0000~\u0000\u0011psq\u0000~\u0000\u001aq\u0000~\u0000\u0011pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#"
+"sq\u0000~\u0000$t\u0000$ru.runa.xpdl.generated.bpmnxpdl.NodeGraphicsInfosq\u0000~\u0000(sq\u0000~\u0000\u0012q\u0000~\u0000"
+"\u0011p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0012pp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0017q\u0000~\u0000\u0011psq\u0000~\u0000\u001aq\u0000~\u0000\u0011pq\u0000~\u0000\u001dq\u0000~"
+"\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000(ru.runa.xpdl.generated.bpmnxpdl.NodeGraphicsInfosTypeq\u0000~\u0000"
+"(sq\u0000~\u0000\rppsq\u0000~\u0000\u001aq\u0000~\u0000\u0011pq\u0000~\u00006q\u0000~\u0000Fq\u0000~\u0000#sq\u0000~\u0000$t\u0000\u0011NodeGraphicsInf"
+"osq\u0000~\u0000Kq\u0000~\u0000#sq\u0000~\u0000\rppsq\u0000~\u0000\rq\u0000~\u0000\u0011psq\u0000~\u0000\u0012q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0017q"
+"\u0000~\u0000\u0011psq\u0000~\u0000\u001aq\u0000~\u0000\u0011pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000\u001dgenerated.bpmnxpdl."
+"Performersq\u0000~\u0000(sq\u0000~\u0000\u0012q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0012pp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0017q"
+"\u0000~\u0000\u0011psq\u0000~\u0000\u001aq\u0000~\u0000\u0011pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000!ru.runa.xpdl.generated.bpmnxpdl."
+"PerformersTypeq\u0000~\u0000(sq\u0000~\u0000\rppsq\u0000~\u0000\u001aq\u0000~\u0000\u0011pq\u0000~\u00006q\u0000~\u0000Fq\u0000~\u0000#sq\u0000~\u0000$"
+"t\u0000\nPerformersq\u0000~\u0000Kq\u0000~\u0000#sq\u0000~\u0000\rppsq\u0000~\u0000\u0017q\u0000~\u0000\u0011psq\u0000~\u0000\u0012q\u0000~\u0000\u0011p\u0000sq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0012pp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0017q\u0000~\u0000\u0011psq\u0000~\u0000\u001aq\u0000~\u0000\u0011pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#"
+"sq\u0000~\u0000$t\u0000*ru.runa.xpdl.generated.bpmnxpdl.LaneType.NestedLaneTypeq\u0000~\u0000(sq\u0000~"
+"\u0000\rppsq\u0000~\u0000\u001aq\u0000~\u0000\u0011pq\u0000~\u00006q\u0000~\u0000Fq\u0000~\u0000#sq\u0000~\u0000$t\u0000\nNestedLaneq\u0000~\u0000Kq\u0000~\u0000#"
+"sq\u0000~\u0000\rppsq\u0000~\u0000\u0017q\u0000~\u0000\u0011psq\u0000~\u0000\u0012q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u001appq\u0000~\u0000\u001dsr\u0000\'com.sun.ms"
+"v.grammar.DifferenceNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003nc1q\u0000~\u0000\u0013L\u0000\u0003nc2q\u0000~"
+"\u0000\u0013xq\u0000~\u0000 q\u0000~\u0000!sr\u0000#com.sun.msv.grammar.ChoiceNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0002L\u0000\u0003nc1q\u0000~\u0000\u0013L\u0000\u0003nc2q\u0000~\u0000\u0013xq\u0000~\u0000 sr\u0000&com.sun.msv.grammar.Names"
+"paceNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\fnamespaceURIq\u0000~\u0000%xq\u0000~\u0000 t\u0000\u0000sq\u0000~\u0000\u008aq"
+"\u0000~\u0000Ksq\u0000~\u0000\u008aq\u0000~\u0000(q\u0000~\u0000#sq\u0000~\u0000\u001appsq\u0000~\u00003ppsr\u0000$com.sun.msv.datatype"
+".xsd.NmtokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\"com.sun.msv.datatype.xsd.Toke"
+"nType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u00008q\u0000~\u0000=t\u0000\u0007NMTOKENq\u0000~\u0000A\u0000q\u0000~\u0000Csq\u0000~\u0000D"
+"q\u0000~\u0000\u0095q\u0000~\u0000=sq\u0000~\u0000$t\u0000\u0002Idq\u0000~\u0000\u008csq\u0000~\u0000\rppsq\u0000~\u0000\u001aq\u0000~\u0000\u0011psq\u0000~\u00003q\u0000~\u0000\u0011psq"
+"\u0000~\u0000\u0093q\u0000~\u0000=t\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpacePro"
+"cessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000@\u0001q\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000\u009dq\u0000~\u0000=sq\u0000~\u0000$"
+"t\u0000\u0004Nameq\u0000~\u0000\u008cq\u0000~\u0000#sq\u0000~\u0000\rppsq\u0000~\u0000\u001aq\u0000~\u0000\u0011pq\u0000~\u0000\u0090sq\u0000~\u0000$t\u0000\nParentLan"
+"eq\u0000~\u0000\u008cq\u0000~\u0000#sq\u0000~\u0000\rppsq\u0000~\u0000\u001aq\u0000~\u0000\u0011pq\u0000~\u0000\u0090sq\u0000~\u0000$t\u0000\nParentPoolq\u0000~\u0000\u008c"
+"q\u0000~\u0000#sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexp"
+"Tablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000"
+"-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005"
+"countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expres"
+"sionPool;xp\u0000\u0000\u0000+\u0001pq\u0000~\u0000\u0019q\u0000~\u0000-q\u0000~\u0000Pq\u0000~\u0000Xq\u0000~\u0000dq\u0000~\u0000lq\u0000~\u0000zq\u0000~\u0000uq\u0000~"
+"\u0000\u0099q\u0000~\u0000\u0016q\u0000~\u0000,q\u0000~\u0000Oq\u0000~\u0000Wq\u0000~\u0000cq\u0000~\u0000kq\u0000~\u0000yq\u0000~\u0000*q\u0000~\u0000Uq\u0000~\u0000iq\u0000~\u0000wq\u0000~"
+"\u0000\u0083q\u0000~\u0000\u0006q\u0000~\u0000\u00a7q\u0000~\u0000\u0005q\u0000~\u0000\u0082q\u0000~\u0000\u0007q\u0000~\u0000\u000bq\u0000~\u0000\fq\u0000~\u00001q\u0000~\u0000\\q\u0000~\u0000pq\u0000~\u0000~q\u0000~"
+"\u0000\tq\u0000~\u0000\u000eq\u0000~\u0000\u000fq\u0000~\u0000Mq\u0000~\u0000Lq\u0000~\u0000aq\u0000~\u0000`q\u0000~\u0000\u00a3q\u0000~\u0000tq\u0000~\u0000\nq\u0000~\u0000\bx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public static class NestedLaneTypeImpl implements ru.runa.xpdl.generated.bpmnxpdl.LaneType.NestedLaneType, com.sun.xml.bind.JAXBObject, ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.UnmarshallableObject, ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.XMLSerializable, ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.ValidatableObject
    {

        protected java.lang.String _LaneId;
        public final static java.lang.Class version = (ru.runa.xpdl.generated.bpmnxpdl.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (ru.runa.xpdl.generated.bpmnxpdl.LaneType.NestedLaneType.class);
        }

        public java.lang.String getLaneId() {
            return _LaneId;
        }

        public void setLaneId(java.lang.String value) {
            _LaneId = value;
        }

        public ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.UnmarshallingEventHandler createUnmarshaller(ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.UnmarshallingContext context) {
            return new ru.runa.xpdl.generated.bpmnxpdl.impl.LaneTypeImpl.NestedLaneTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public void serializeAttributes(ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            context.startAttribute("", "LaneId");
            try {
                context.text(((java.lang.String) _LaneId), "LaneId");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }

        public void serializeURIs(ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public java.lang.Class getPrimaryInterface() {
            return (ru.runa.xpdl.generated.bpmnxpdl.LaneType.NestedLaneType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expt\u0000 "
+"Lcom/sun/msv/grammar/Expression;L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/"
+"grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O"
+"\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedEx"
+"pq\u0000~\u0000\u0001xpppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001f"
+"Lorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0001L\u0000\u0004namet\u0000\u001dLcom/"
+"sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000$com.sun.msv.datatype.xsd"
+".NmtokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\"com.sun.msv.datatype.xsd.TokenTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomic"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0010L\u0000\nwhit"
+"eSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 "
+"http://www.w3.org/2001/XMLSchemat\u0000\u0007NMTOKENsr\u00005com.sun.msv.da"
+"tatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.su"
+"n.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0000sr\u00000com."
+"sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.msv"
+".util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0010L\u0000\fnamespaceURIq"
+"\u0000~\u0000\u0010xpq\u0000~\u0000\u0014q\u0000~\u0000\u0013sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0010L\u0000\fnamespaceURIq\u0000~\u0000\u0010xr\u0000\u001dcom.sun.msv.g"
+"rammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0006LaneIdt\u0000\u0000sr\u0000\"com.sun.msv.gra"
+"mmar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gra"
+"mmar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Exp"
+"ressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006"
+"parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0000\u0001px"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return ru.runa.xpdl.generated.bpmnxpdl.impl.LaneTypeImpl.NestedLaneTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            attIdx = context.getAttribute("", "LaneId");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  3 :
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _LaneId = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            attIdx = context.getAttribute("", "LaneId");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            if (("LaneId" == ___local)&&("" == ___uri)) {
                                state = 1;
                                return ;
                            }
                            break;
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  2 :
                            if (("LaneId" == ___local)&&("" == ___uri)) {
                                state = 3;
                                return ;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "LaneId");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  0 :
                                attIdx = context.getAttribute("", "LaneId");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                            case  1 :
                                state = 2;
                                eatText1(value);
                                return ;
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public class Unmarshaller
        extends ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.UnmarshallingContext context) {
            super(context, "--------------------------");
        }

        protected Unmarshaller(ru.runa.xpdl.generated.bpmnxpdl.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return ru.runa.xpdl.generated.bpmnxpdl.impl.LaneTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        attIdx = context.getAttribute("", "ParentPool");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText1(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText2(v);
                            continue outer;
                        }
                        break;
                    case  24 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  19 :
                        if (("NestedLane" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 20;
                            return ;
                        }
                        state = 22;
                        continue outer;
                    case  16 :
                        if (("Performers" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            _Performers = ((ru.runa.xpdl.generated.bpmnxpdl.impl.PerformersImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.bpmnxpdl.impl.PerformersImpl.class), 19, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Performers" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 17;
                            return ;
                        }
                        state = 19;
                        continue outer;
                    case  17 :
                        if (("Performer" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            _Performers = ((ru.runa.xpdl.generated.bpmnxpdl.impl.PerformersTypeImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.bpmnxpdl.impl.PerformersTypeImpl.class), 18, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Performer" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            _Performers = ((ru.runa.xpdl.generated.bpmnxpdl.impl.PerformersTypeImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.bpmnxpdl.impl.PerformersTypeImpl.class), 18, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (!(("" == ___uri)||("http://www.wfmc.org/2008/XPDL2.1" == ___uri))) {
                            _Performers = ((ru.runa.xpdl.generated.bpmnxpdl.impl.PerformersTypeImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.bpmnxpdl.impl.PerformersTypeImpl.class), 18, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Performers = ((ru.runa.xpdl.generated.bpmnxpdl.impl.PerformersTypeImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.bpmnxpdl.impl.PerformersTypeImpl.class), 18, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  13 :
                        if (("NodeGraphicsInfos" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            _NodeGraphicsInfos = ((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosImpl.class), 16, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NodeGraphicsInfos" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 14;
                            return ;
                        }
                        state = 16;
                        continue outer;
                    case  14 :
                        if (("NodeGraphicsInfo" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            _NodeGraphicsInfos = ((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NodeGraphicsInfo" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            _NodeGraphicsInfos = ((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (!(("" == ___uri)||("http://www.wfmc.org/2008/XPDL2.1" == ___uri))) {
                            _NodeGraphicsInfos = ((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _NodeGraphicsInfos = ((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl.class), 15, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  3 :
                        attIdx = context.getAttribute("", "Name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText3(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "ParentLane");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText4(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  23 :
                        if (!(("" == ___uri)||("http://www.wfmc.org/2008/XPDL2.1" == ___uri))) {
                            java.lang.Object co = spawnWildcard(23, ___uri, ___local, ___qname, __atts);
                            if (co!= null) {
                                _getAny().add(co);
                            }
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  12 :
                        if (("Object" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            _Object = ((ru.runa.xpdl.generated.bpmnxpdl.impl.ObjectImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.bpmnxpdl.impl.ObjectImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Object" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 24;
                            return ;
                        }
                        state = 13;
                        continue outer;
                    case  22 :
                        if (("NestedLane" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 20;
                            return ;
                        }
                        if (!(("" == ___uri)||("http://www.wfmc.org/2008/XPDL2.1" == ___uri))) {
                            java.lang.Object co = spawnWildcard(23, ___uri, ___local, ___qname, __atts);
                            if (co!= null) {
                                _getAny().add(co);
                            }
                            return ;
                        }
                        state = 23;
                        continue outer;
                    case  20 :
                        attIdx = context.getAttribute("", "LaneId");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ParentPool = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Id = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ParentLane = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        attIdx = context.getAttribute("", "ParentPool");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText1(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  25 :
                        if (("Object" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            context.popAttributes();
                            state = 13;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText2(v);
                            continue outer;
                        }
                        break;
                    case  24 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  19 :
                        state = 22;
                        continue outer;
                    case  16 :
                        state = 19;
                        continue outer;
                    case  17 :
                        _Performers = ((ru.runa.xpdl.generated.bpmnxpdl.impl.PerformersTypeImpl) spawnChildFromLeaveElement((ru.runa.xpdl.generated.bpmnxpdl.impl.PerformersTypeImpl.class), 18, ___uri, ___local, ___qname));
                        return ;
                    case  13 :
                        state = 16;
                        continue outer;
                    case  15 :
                        if (("NodeGraphicsInfos" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            context.popAttributes();
                            state = 16;
                            return ;
                        }
                        break;
                    case  14 :
                        _NodeGraphicsInfos = ((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl) spawnChildFromLeaveElement((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl.class), 15, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        attIdx = context.getAttribute("", "Name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText3(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "ParentLane");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText4(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  23 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  21 :
                        if (("NestedLane" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            context.popAttributes();
                            state = 22;
                            return ;
                        }
                        break;
                    case  18 :
                        if (("Performers" == ___local)&&("http://www.wfmc.org/2008/XPDL2.1" == ___uri)) {
                            context.popAttributes();
                            state = 19;
                            return ;
                        }
                        break;
                    case  12 :
                        state = 13;
                        continue outer;
                    case  22 :
                        state = 23;
                        continue outer;
                    case  20 :
                        attIdx = context.getAttribute("", "LaneId");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        if (("ParentPool" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  0 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  24 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            _Object = ((ru.runa.xpdl.generated.bpmnxpdl.impl.ObjectTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.bpmnxpdl.impl.ObjectTypeImpl.class), 25, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  19 :
                        state = 22;
                        continue outer;
                    case  16 :
                        state = 19;
                        continue outer;
                    case  17 :
                        _Performers = ((ru.runa.xpdl.generated.bpmnxpdl.impl.PerformersTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.bpmnxpdl.impl.PerformersTypeImpl.class), 18, ___uri, ___local, ___qname));
                        return ;
                    case  13 :
                        state = 16;
                        continue outer;
                    case  14 :
                        _NodeGraphicsInfos = ((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl.class), 15, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        if (("Name" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  6 :
                        if (("ParentLane" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  23 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  12 :
                        state = 13;
                        continue outer;
                    case  22 :
                        state = 23;
                        continue outer;
                    case  20 :
                        if (("LaneId" == ___local)&&("" == ___uri)) {
                            _getNestedLane().add(((ru.runa.xpdl.generated.bpmnxpdl.impl.LaneTypeImpl.NestedLaneTypeImpl) spawnChildFromEnterAttribute((ru.runa.xpdl.generated.bpmnxpdl.impl.LaneTypeImpl.NestedLaneTypeImpl.class), 21, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        attIdx = context.getAttribute("", "ParentPool");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText1(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText2(v);
                            continue outer;
                        }
                        break;
                    case  24 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  19 :
                        state = 22;
                        continue outer;
                    case  5 :
                        if (("Name" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("ParentLane" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  16 :
                        state = 19;
                        continue outer;
                    case  2 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("ParentPool" == ___local)&&("" == ___uri)) {
                            state = 12;
                            return ;
                        }
                        break;
                    case  17 :
                        _Performers = ((ru.runa.xpdl.generated.bpmnxpdl.impl.PerformersTypeImpl) spawnChildFromLeaveAttribute((ru.runa.xpdl.generated.bpmnxpdl.impl.PerformersTypeImpl.class), 18, ___uri, ___local, ___qname));
                        return ;
                    case  13 :
                        state = 16;
                        continue outer;
                    case  14 :
                        _NodeGraphicsInfos = ((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl) spawnChildFromLeaveAttribute((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl.class), 15, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        attIdx = context.getAttribute("", "Name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText3(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "ParentLane");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText4(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  23 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  12 :
                        state = 13;
                        continue outer;
                    case  22 :
                        state = 23;
                        continue outer;
                    case  20 :
                        attIdx = context.getAttribute("", "LaneId");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  9 :
                            attIdx = context.getAttribute("", "ParentPool");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText1(v);
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText2(v);
                                continue outer;
                            }
                            break;
                        case  1 :
                            state = 2;
                            eatText2(value);
                            return ;
                        case  24 :
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  19 :
                            state = 22;
                            continue outer;
                        case  16 :
                            state = 19;
                            continue outer;
                        case  10 :
                            state = 11;
                            eatText1(value);
                            return ;
                        case  7 :
                            state = 8;
                            eatText4(value);
                            return ;
                        case  4 :
                            state = 5;
                            eatText3(value);
                            return ;
                        case  17 :
                            _Performers = ((ru.runa.xpdl.generated.bpmnxpdl.impl.PerformersTypeImpl) spawnChildFromText((ru.runa.xpdl.generated.bpmnxpdl.impl.PerformersTypeImpl.class), 18, value));
                            return ;
                        case  13 :
                            state = 16;
                            continue outer;
                        case  14 :
                            _NodeGraphicsInfos = ((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl) spawnChildFromText((ru.runa.xpdl.generated.bpmnxpdl.impl.NodeGraphicsInfosTypeImpl.class), 15, value));
                            return ;
                        case  3 :
                            attIdx = context.getAttribute("", "Name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText3(v);
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  6 :
                            attIdx = context.getAttribute("", "ParentLane");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText4(v);
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  23 :
                            revertToParentFromText(value);
                            return ;
                        case  12 :
                            state = 13;
                            continue outer;
                        case  22 :
                            state = 23;
                            continue outer;
                        case  20 :
                            attIdx = context.getAttribute("", "LaneId");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
