//
// This file was ru.runa.xpdl.generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.05.04 at 12:24:30 PM MSD 
//


package ru.runa.xpdl.generated.jpdl32.impl;

public class SuperStateTypeImpl implements ru.runa.xpdl.generated.jpdl32.SuperStateType, com.sun.xml.bind.JAXBObject, ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallableObject, ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializable, ru.runa.xpdl.generated.jpdl32.impl.runtime.ValidatableObject
{

    protected java.lang.String _Name;
    protected java.lang.String _Async;
    protected com.sun.xml.bind.util.ListImpl _NodeOrStateOrTaskNode;
    public final static java.lang.Class version = (ru.runa.xpdl.generated.jpdl32.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (ru.runa.xpdl.generated.jpdl32.SuperStateType.class);
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public java.lang.String getAsync() {
        if (_Async == null) {
            return "false";
        } else {
            return _Async;
        }
    }

    public void setAsync(java.lang.String value) {
        _Async = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getNodeOrStateOrTaskNode() {
        if (_NodeOrStateOrTaskNode == null) {
            _NodeOrStateOrTaskNode = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _NodeOrStateOrTaskNode;
    }

    public java.util.List getNodeOrStateOrTaskNode() {
        return _getNodeOrStateOrTaskNode();
    }

    public ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingEventHandler createUnmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context) {
        return new ru.runa.xpdl.generated.jpdl32.impl.SuperStateTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx3 = 0;
        final int len3 = ((_NodeOrStateOrTaskNode == null)? 0 :_NodeOrStateOrTaskNode.size());
        while (idx3 != len3) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _NodeOrStateOrTaskNode.get(idx3 ++)), "NodeOrStateOrTaskNode");
        }
    }

    public void serializeAttributes(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx3 = 0;
        final int len3 = ((_NodeOrStateOrTaskNode == null)? 0 :_NodeOrStateOrTaskNode.size());
        if (_Async!= null) {
            context.startAttribute("", "async");
            try {
                context.text(((java.lang.String) _Async), "Async");
            } catch (java.lang.Exception e) {
                ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "name");
        try {
            context.text(((java.lang.String) _Name), "Name");
        } catch (java.lang.Exception e) {
            ru.runa.xpdl.generated.jpdl32.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        while (idx3 != len3) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _NodeOrStateOrTaskNode.get(idx3 ++)), "NodeOrStateOrTaskNode");
        }
    }

    public void serializeURIs(ru.runa.xpdl.generated.jpdl32.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx3 = 0;
        final int len3 = ((_NodeOrStateOrTaskNode == null)? 0 :_NodeOrStateOrTaskNode.size());
        while (idx3 != len3) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _NodeOrStateOrTaskNode.get(idx3 ++)), "NodeOrStateOrTaskNode");
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (ru.runa.xpdl.generated.jpdl32.SuperStateType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000"
+"\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0007q\u0000~"
+"\u0000\rpsq\u0000~\u0000\u0007q\u0000~\u0000\rpsq\u0000~\u0000\u0007q\u0000~\u0000\rpsq\u0000~\u0000\u0007q\u0000~\u0000\rpsq\u0000~\u0000\u0007q\u0000~\u0000\rpsq\u0000~\u0000\u0007q\u0000~"
+"\u0000\rpsq\u0000~\u0000\u0007q\u0000~\u0000\rpsq\u0000~\u0000\u0007q\u0000~\u0000\rpsq\u0000~\u0000\u0007q\u0000~\u0000\rpsq\u0000~\u0000\u0007q\u0000~\u0000\rpsq\u0000~\u0000\u0007q\u0000~"
+"\u0000\rpsq\u0000~\u0000\u0007q\u0000~\u0000\rpsq\u0000~\u0000\u0007q\u0000~\u0000\rpsq\u0000~\u0000\u0007q\u0000~\u0000\rpsq\u0000~\u0000\u0007q\u0000~\u0000\rpsq\u0000~\u0000\u0007q\u0000~"
+"\u0000\rpsq\u0000~\u0000\u0007q\u0000~\u0000\rpsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ec"
+"om.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredA"
+"ttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\tq\u0000~\u0000"
+"\rpsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002"
+"L\u0000\tnameClassq\u0000~\u0000 xq\u0000~\u0000\u0003q\u0000~\u0000\rpsr\u00002com.sun.msv.grammar.Express"
+"ion$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\f\u0001psr\u0000 com.sun."
+"msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.N"
+"ameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$Epsi"
+"lonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000)psr\u0000#com.sun.msv.grammar."
+"SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L"
+"\u0000\fnamespaceURIq\u0000~\u00000xq\u0000~\u0000+t\u0000\u0015generated.jpdl32.Nodet\u0000+http://j"
+"ava.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001fq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0007ppsq\u0000~"
+"\u0000\tq\u0000~\u0000\rpsq\u0000~\u0000%q\u0000~\u0000\rpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/t\u0000\u0016generated.jpdl32"
+".Stateq\u0000~\u00003sq\u0000~\u0000\u001fq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\tq\u0000~\u0000\rpsq\u0000~\u0000%q\u0000~\u0000\rpq\u0000~\u0000"
+"(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/t\u0000\u0019generated.jpdl32.TaskNodeq\u0000~\u00003sq\u0000~\u0000\u001fq\u0000~\u0000"
+"\rp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\tq\u0000~\u0000\rpsq\u0000~\u0000%q\u0000~\u0000\rpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/t\u0000\u001bg"
+"enerated.jpdl32.SuperStateq\u0000~\u00003sq\u0000~\u0000\u001fq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\tq\u0000"
+"~\u0000\rpsq\u0000~\u0000%q\u0000~\u0000\rpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/t\u0000\u001dgenerated.jpdl32.Pro"
+"cessStateq\u0000~\u00003sq\u0000~\u0000\u001fq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\tq\u0000~\u0000\rpsq\u0000~\u0000%q\u0000~\u0000\rpq"
+"\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/t\u0000#ru.runa.xpdl.generated.jpdl32.MultiinstanceStateq\u0000"
+"~\u00003sq\u0000~\u0000\u001fq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\tq\u0000~\u0000\rpsq\u0000~\u0000%q\u0000~\u0000\rpq\u0000~\u0000(q\u0000~\u0000,q\u0000"
+"~\u0000.sq\u0000~\u0000/t\u0000\u001cgenerated.jpdl32.SendMessageq\u0000~\u00003sq\u0000~\u0000\u001fq\u0000~\u0000\rp\u0000sq"
+"\u0000~\u0000\u0007ppsq\u0000~\u0000\tq\u0000~\u0000\rpsq\u0000~\u0000%q\u0000~\u0000\rpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/t\u0000\u001fgenera"
+"ted.jpdl32.ReceiveMessageq\u0000~\u00003sq\u0000~\u0000\u001fq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\tq\u0000~"
+"\u0000\rpsq\u0000~\u0000%q\u0000~\u0000\rpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/t\u0000\u0015generated.jpdl32.Fork"
+"q\u0000~\u00003sq\u0000~\u0000\u001fq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\tq\u0000~\u0000\rpsq\u0000~\u0000%q\u0000~\u0000\rpq\u0000~\u0000(q\u0000~\u0000,"
+"q\u0000~\u0000.sq\u0000~\u0000/t\u0000\u0015generated.jpdl32.Joinq\u0000~\u00003sq\u0000~\u0000\u001fq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0007p"
+"psq\u0000~\u0000\tq\u0000~\u0000\rpsq\u0000~\u0000%q\u0000~\u0000\rpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/t\u0000\u0019generated.j"
+"pdl32.Decisionq\u0000~\u00003sq\u0000~\u0000\u001fq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\tq\u0000~\u0000\rpsq\u0000~\u0000%q\u0000"
+"~\u0000\rpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/t\u0000\u0019generated.jpdl32.EndStateq\u0000~\u00003sq"
+"\u0000~\u0000\u001fq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\tq\u0000~\u0000\rpsq\u0000~\u0000%q\u0000~\u0000\rpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq"
+"\u0000~\u0000/t\u0000\u0019generated.jpdl32.MailNodeq\u0000~\u00003sq\u0000~\u0000\u001fq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0007ppsq"
+"\u0000~\u0000\tq\u0000~\u0000\rpsq\u0000~\u0000%q\u0000~\u0000\rpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/t\u0000\u001cgenerated.jpdl"
+"32.Descriptionq\u0000~\u00003sq\u0000~\u0000\u001fq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\tq\u0000~\u0000\rpsq\u0000~\u0000%q\u0000"
+"~\u0000\rpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/t\u0000\u0016generated.jpdl32.Eventq\u0000~\u00003sq\u0000~\u0000"
+"\u001fq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\tq\u0000~\u0000\rpsq\u0000~\u0000%q\u0000~\u0000\rpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000"
+"/t\u0000!ru.runa.xpdl.generated.jpdl32.ExceptionHandlerq\u0000~\u00003sq\u0000~\u0000\u001fq\u0000~\u0000\rp\u0000sq\u0000~\u0000"
+"\u0007ppsq\u0000~\u0000\tq\u0000~\u0000\rpsq\u0000~\u0000%q\u0000~\u0000\rpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/t\u0000\u0016generated"
+".jpdl32.Timerq\u0000~\u00003sq\u0000~\u0000\u001fq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\tq\u0000~\u0000\rpsq\u0000~\u0000%q\u0000~"
+"\u0000\rpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/t\u0000\u001bgenerated.jpdl32.Transitionq\u0000~\u00003q"
+"\u0000~\u0000.sq\u0000~\u0000\u0007ppsq\u0000~\u0000%q\u0000~\u0000\rpsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L"
+"\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003q\u0000~\u0000\rpsr\u0000#com.su"
+"n.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*"
+"com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com"
+".sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv"
+".datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u00000L"
+"\u0000\btypeNameq\u0000~\u00000L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/Whi"
+"teSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006str"
+"ingsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSetExpre"
+"ssion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\rpsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0"
+"t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u00000L\u0000\fnamespaceURIq\u0000~\u00000xpq\u0000~\u0000\u00a7q\u0000~\u0000\u00a6s"
+"q\u0000~\u0000/t\u0000\u0005asynct\u0000\u0000q\u0000~\u0000.sq\u0000~\u0000%ppq\u0000~\u0000\u009fsq\u0000~\u0000/t\u0000\u0004nameq\u0000~\u0000\u00b1sr\u0000\"com."
+"sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/"
+"sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv."
+"grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstrea"
+"mVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000"
+"\u0000:\u0001pq\u0000~\u0000\u001eq\u0000~\u0000\u0006q\u0000~\u0000\u0005q\u0000~\u0000\u000fq\u0000~\u0000\u009aq\u0000~\u0000\u0019q\u0000~\u0000\u000eq\u0000~\u0000\u0015q\u0000~\u0000\u0011q\u0000~\u0000\u0018q\u0000~\u0000\u001bq"
+"\u0000~\u0000\u0014q\u0000~\u0000\u0010q\u0000~\u0000\u001aq\u0000~\u0000\u000bq\u0000~\u0000\u001dq\u0000~\u0000\u0096q\u0000~\u0000\u0090q\u0000~\u0000\u008aq\u0000~\u0000\u0084q\u0000~\u0000~q\u0000~\u0000xq\u0000~\u0000\u0095q"
+"\u0000~\u0000\u008fq\u0000~\u0000\u0089q\u0000~\u0000\u0083q\u0000~\u0000}q\u0000~\u0000wq\u0000~\u0000qq\u0000~\u0000kq\u0000~\u0000eq\u0000~\u0000\u0017q\u0000~\u0000_q\u0000~\u0000Yq\u0000~\u0000Sq"
+"\u0000~\u0000Mq\u0000~\u0000Gq\u0000~\u0000Aq\u0000~\u0000;q\u0000~\u0000\u001cq\u0000~\u00005q\u0000~\u0000#q\u0000~\u0000rq\u0000~\u0000lq\u0000~\u0000fq\u0000~\u0000`q\u0000~\u0000\u0013q"
+"\u0000~\u0000Zq\u0000~\u0000Tq\u0000~\u0000Nq\u0000~\u0000Hq\u0000~\u0000Bq\u0000~\u0000<q\u0000~\u00006q\u0000~\u0000$q\u0000~\u0000\u0016q\u0000~\u0000\bq\u0000~\u0000\u0012x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends ru.runa.xpdl.generated.jpdl32.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context) {
            super(context, "--------");
        }

        protected Unmarshaller(ru.runa.xpdl.generated.jpdl32.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return ru.runa.xpdl.generated.jpdl32.impl.SuperStateTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        attIdx = context.getAttribute("", "async");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText2(v);
                            continue outer;
                        }
                        break;
                    case  6 :
                        if (("node" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.NodeImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.NodeImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("state" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.StateImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.StateImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("task-node" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.TaskNodeImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.TaskNodeImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("super-state" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.SuperStateImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.SuperStateImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("process-state" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.ProcessStateImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ProcessStateImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("multiinstance-state" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.MultiinstanceStateImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.MultiinstanceStateImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("send-message" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.SendMessageImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.SendMessageImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("receive-message" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.ReceiveMessageImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ReceiveMessageImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("fork" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.ForkImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ForkImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("join" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.JoinImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.JoinImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("decision" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.DecisionImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.DecisionImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("end-state" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.EndStateImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.EndStateImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("mail-node" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.MailNodeImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.MailNodeImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("description" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.DescriptionImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.DescriptionImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("event" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.EventImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.EventImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("exception-handler" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.ExceptionHandlerImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ExceptionHandlerImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("timer" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.TimerImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.TimerImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("transition" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.TransitionImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.TransitionImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 7;
                        continue outer;
                    case  7 :
                        if (("node" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.NodeImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.NodeImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("state" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.StateImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.StateImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("task-node" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.TaskNodeImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.TaskNodeImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("super-state" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.SuperStateImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.SuperStateImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("process-state" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.ProcessStateImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ProcessStateImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("multiinstance-state" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.MultiinstanceStateImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.MultiinstanceStateImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("send-message" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.SendMessageImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.SendMessageImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("receive-message" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.ReceiveMessageImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ReceiveMessageImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("fork" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.ForkImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ForkImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("join" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.JoinImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.JoinImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("decision" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.DecisionImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.DecisionImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("end-state" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.EndStateImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.EndStateImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("mail-node" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.MailNodeImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.MailNodeImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("description" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.DescriptionImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.DescriptionImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("event" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.EventImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.EventImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("exception-handler" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.ExceptionHandlerImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.ExceptionHandlerImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("timer" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.TimerImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.TimerImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("transition" == ___local)&&("urn:jbpm.org:jpdl-3.2" == ___uri)) {
                            _getNodeOrStateOrTaskNode().add(((ru.runa.xpdl.generated.jpdl32.impl.TransitionImpl) spawnChildFromEnterElement((ru.runa.xpdl.generated.jpdl32.impl.TransitionImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Async = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        attIdx = context.getAttribute("", "async");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText2(v);
                            continue outer;
                        }
                        break;
                    case  6 :
                        state = 7;
                        continue outer;
                    case  7 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("async" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        break;
                    case  6 :
                        state = 7;
                        continue outer;
                    case  7 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        attIdx = context.getAttribute("", "async");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText2(v);
                            continue outer;
                        }
                        break;
                    case  2 :
                        if (("async" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  6 :
                        state = 7;
                        continue outer;
                    case  7 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  5 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  0 :
                            attIdx = context.getAttribute("", "async");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  4 :
                            state = 5;
                            eatText2(value);
                            return ;
                        case  3 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText2(v);
                                continue outer;
                            }
                            break;
                        case  6 :
                            state = 7;
                            continue outer;
                        case  7 :
                            revertToParentFromText(value);
                            return ;
                        case  1 :
                            state = 2;
                            eatText1(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
