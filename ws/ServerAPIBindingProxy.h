#pragma once
/* soapServerAPIBindingProxy.h
   Generated by gSOAP 2.8.16 from ServerAPI.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapH.h"

class SOAP_CMAC ServerAPIBindingProxy
{ public:
	struct soap *soap;
	bool own;
	/// Endpoint URL of service 'ServerAPIBindingProxy' (change as needed)
	const char *soap_endpoint;
	/// Constructor
	ServerAPIBindingProxy();
	/// Constructor to use/share an engine state
	ServerAPIBindingProxy(struct soap*);
	/// Constructor with endpoint URL
	ServerAPIBindingProxy(const char *url);
	/// Constructor with engine input+output mode control
	ServerAPIBindingProxy(soap_mode iomode);
	/// Constructor with URL and input+output mode control
	ServerAPIBindingProxy(const char *url, soap_mode iomode);
	/// Constructor with engine input and output mode control
	ServerAPIBindingProxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~ServerAPIBindingProxy();
	/// Initializer used by constructors
	virtual	void ServerAPIBindingProxy_init(soap_mode imode, soap_mode omode);
	/// Delete all deserialized data (with soap_destroy and soap_end)
	virtual	void destroy();
	/// Delete all deserialized data and reset to default
	virtual	void reset();
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Get SOAP Header structure (NULL when absent)
	virtual	const SOAP_ENV__Header *soap_header();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Close connection (normally automatic, except for send_X ops)
	virtual	int soap_close_socket();
	/// Force close connection (can kill a thread blocked on IO)
	virtual	int soap_force_close_socket();
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
#ifndef WITH_COMPAT
	virtual	void soap_stream_fault(std::ostream&);
#endif

	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif

	/// Web service operation 'authenticateByCallerPrincipal' (returns error code or SOAP_OK)
	virtual	int authenticateByCallerPrincipal(ns1__authenticateByCallerPrincipal *ns1__authenticateByCallerPrincipal_, ns1__authenticateByCallerPrincipalResponse *ns1__authenticateByCallerPrincipalResponse_) { return this->authenticateByCallerPrincipal(NULL, NULL, ns1__authenticateByCallerPrincipal_, ns1__authenticateByCallerPrincipalResponse_); }
	virtual	int authenticateByCallerPrincipal(const char *endpoint, const char *soap_action, ns1__authenticateByCallerPrincipal *ns1__authenticateByCallerPrincipal_, ns1__authenticateByCallerPrincipalResponse *ns1__authenticateByCallerPrincipalResponse_);

	/// Web service operation 'authenticateByKerberos' (returns error code or SOAP_OK)
	virtual	int authenticateByKerberos(ns1__authenticateByKerberos *ns1__authenticateByKerberos_, ns1__authenticateByKerberosResponse *ns1__authenticateByKerberosResponse_) { return this->authenticateByKerberos(NULL, NULL, ns1__authenticateByKerberos_, ns1__authenticateByKerberosResponse_); }
	virtual	int authenticateByKerberos(const char *endpoint, const char *soap_action, ns1__authenticateByKerberos *ns1__authenticateByKerberos_, ns1__authenticateByKerberosResponse *ns1__authenticateByKerberosResponse_);

	/// Web service operation 'authenticateByLoginPassword' (returns error code or SOAP_OK)
	virtual	int authenticateByLoginPassword(ns1__authenticateByLoginPassword *ns1__authenticateByLoginPassword_, ns1__authenticateByLoginPasswordResponse *ns1__authenticateByLoginPasswordResponse_) { return this->authenticateByLoginPassword(NULL, NULL, ns1__authenticateByLoginPassword_, ns1__authenticateByLoginPasswordResponse_); }
	virtual	int authenticateByLoginPassword(const char *endpoint, const char *soap_action, ns1__authenticateByLoginPassword *ns1__authenticateByLoginPassword_, ns1__authenticateByLoginPasswordResponse *ns1__authenticateByLoginPasswordResponse_);

	/// Web service operation 'assignSwimlane' (returns error code or SOAP_OK)
	virtual	int assignSwimlane(ns1__assignSwimlane *ns1__assignSwimlane_, ns1__assignSwimlaneResponse *ns1__assignSwimlaneResponse_) { return this->assignSwimlane(NULL, NULL, ns1__assignSwimlane_, ns1__assignSwimlaneResponse_); }
	virtual	int assignSwimlane(const char *endpoint, const char *soap_action, ns1__assignSwimlane *ns1__assignSwimlane_, ns1__assignSwimlaneResponse *ns1__assignSwimlaneResponse_);

	/// Web service operation 'assignTask' (returns error code or SOAP_OK)
	virtual	int assignTask(ns1__assignTask *ns1__assignTask_, ns1__assignTaskResponse *ns1__assignTaskResponse_) { return this->assignTask(NULL, NULL, ns1__assignTask_, ns1__assignTaskResponse_); }
	virtual	int assignTask(const char *endpoint, const char *soap_action, ns1__assignTask *ns1__assignTask_, ns1__assignTaskResponse *ns1__assignTaskResponse_);

	/// Web service operation 'cancelProcess' (returns error code or SOAP_OK)
	virtual	int cancelProcess(ns1__cancelProcess *ns1__cancelProcess_, ns1__cancelProcessResponse *ns1__cancelProcessResponse_) { return this->cancelProcess(NULL, NULL, ns1__cancelProcess_, ns1__cancelProcessResponse_); }
	virtual	int cancelProcess(const char *endpoint, const char *soap_action, ns1__cancelProcess *ns1__cancelProcess_, ns1__cancelProcessResponse *ns1__cancelProcessResponse_);

	/// Web service operation 'completeTaskWS' (returns error code or SOAP_OK)
	virtual	int completeTaskWS(ns1__completeTaskWS *ns1__completeTaskWS_, ns1__completeTaskWSResponse *ns1__completeTaskWSResponse_) { return this->completeTaskWS(NULL, NULL, ns1__completeTaskWS_, ns1__completeTaskWSResponse_); }
	virtual	int completeTaskWS(const char *endpoint, const char *soap_action, ns1__completeTaskWS *ns1__completeTaskWS_, ns1__completeTaskWSResponse *ns1__completeTaskWSResponse_);

	/// Web service operation 'getParentProcess' (returns error code or SOAP_OK)
	virtual	int getParentProcess(ns1__getParentProcess *ns1__getParentProcess_, ns1__getParentProcessResponse *ns1__getParentProcessResponse_) { return this->getParentProcess(NULL, NULL, ns1__getParentProcess_, ns1__getParentProcessResponse_); }
	virtual	int getParentProcess(const char *endpoint, const char *soap_action, ns1__getParentProcess *ns1__getParentProcess_, ns1__getParentProcessResponse *ns1__getParentProcessResponse_);

	/// Web service operation 'getProcess' (returns error code or SOAP_OK)
	virtual	int getProcess(ns1__getProcess *ns1__getProcess_, ns1__getProcessResponse *ns1__getProcessResponse_) { return this->getProcess(NULL, NULL, ns1__getProcess_, ns1__getProcessResponse_); }
	virtual	int getProcess(const char *endpoint, const char *soap_action, ns1__getProcess *ns1__getProcess_, ns1__getProcessResponse *ns1__getProcessResponse_);

	/// Web service operation 'getProcessDiagram' (returns error code or SOAP_OK)
	virtual	int getProcessDiagram(ns1__getProcessDiagram *ns1__getProcessDiagram_, ns1__getProcessDiagramResponse *ns1__getProcessDiagramResponse_) { return this->getProcessDiagram(NULL, NULL, ns1__getProcessDiagram_, ns1__getProcessDiagramResponse_); }
	virtual	int getProcessDiagram(const char *endpoint, const char *soap_action, ns1__getProcessDiagram *ns1__getProcessDiagram_, ns1__getProcessDiagramResponse *ns1__getProcessDiagramResponse_);

	/// Web service operation 'getProcessDiagramElements' (returns error code or SOAP_OK)
	virtual	int getProcessDiagramElements(ns1__getProcessDiagramElements *ns1__getProcessDiagramElements_, ns1__getProcessDiagramElementsResponse *ns1__getProcessDiagramElementsResponse_) { return this->getProcessDiagramElements(NULL, NULL, ns1__getProcessDiagramElements_, ns1__getProcessDiagramElementsResponse_); }
	virtual	int getProcessDiagramElements(const char *endpoint, const char *soap_action, ns1__getProcessDiagramElements *ns1__getProcessDiagramElements_, ns1__getProcessDiagramElementsResponse *ns1__getProcessDiagramElementsResponse_);

	/// Web service operation 'getProcessHistoryDiagram' (returns error code or SOAP_OK)
	virtual	int getProcessHistoryDiagram(ns1__getProcessHistoryDiagram *ns1__getProcessHistoryDiagram_, ns1__getProcessHistoryDiagramResponse *ns1__getProcessHistoryDiagramResponse_) { return this->getProcessHistoryDiagram(NULL, NULL, ns1__getProcessHistoryDiagram_, ns1__getProcessHistoryDiagramResponse_); }
	virtual	int getProcessHistoryDiagram(const char *endpoint, const char *soap_action, ns1__getProcessHistoryDiagram *ns1__getProcessHistoryDiagram_, ns1__getProcessHistoryDiagramResponse *ns1__getProcessHistoryDiagramResponse_);

	/// Web service operation 'getProcessHistoryDiagramElements' (returns error code or SOAP_OK)
	virtual	int getProcessHistoryDiagramElements(ns1__getProcessHistoryDiagramElements *ns1__getProcessHistoryDiagramElements_, ns1__getProcessHistoryDiagramElementsResponse *ns1__getProcessHistoryDiagramElementsResponse_) { return this->getProcessHistoryDiagramElements(NULL, NULL, ns1__getProcessHistoryDiagramElements_, ns1__getProcessHistoryDiagramElementsResponse_); }
	virtual	int getProcessHistoryDiagramElements(const char *endpoint, const char *soap_action, ns1__getProcessHistoryDiagramElements *ns1__getProcessHistoryDiagramElements_, ns1__getProcessHistoryDiagramElementsResponse *ns1__getProcessHistoryDiagramElementsResponse_);

	/// Web service operation 'getProcessLogValue' (returns error code or SOAP_OK)
	virtual	int getProcessLogValue(ns1__getProcessLogValue *ns1__getProcessLogValue_, ns1__getProcessLogValueResponse *ns1__getProcessLogValueResponse_) { return this->getProcessLogValue(NULL, NULL, ns1__getProcessLogValue_, ns1__getProcessLogValueResponse_); }
	virtual	int getProcessLogValue(const char *endpoint, const char *soap_action, ns1__getProcessLogValue *ns1__getProcessLogValue_, ns1__getProcessLogValueResponse *ns1__getProcessLogValueResponse_);

	/// Web service operation 'getProcessLogs' (returns error code or SOAP_OK)
	virtual	int getProcessLogs(ns1__getProcessLogs *ns1__getProcessLogs_, ns1__getProcessLogsResponse *ns1__getProcessLogsResponse_) { return this->getProcessLogs(NULL, NULL, ns1__getProcessLogs_, ns1__getProcessLogsResponse_); }
	virtual	int getProcessLogs(const char *endpoint, const char *soap_action, ns1__getProcessLogs *ns1__getProcessLogs_, ns1__getProcessLogsResponse *ns1__getProcessLogsResponse_);

	/// Web service operation 'getProcessTasks' (returns error code or SOAP_OK)
	virtual	int getProcessTasks(ns1__getProcessTasks *ns1__getProcessTasks_, ns1__getProcessTasksResponse *ns1__getProcessTasksResponse_) { return this->getProcessTasks(NULL, NULL, ns1__getProcessTasks_, ns1__getProcessTasksResponse_); }
	virtual	int getProcessTasks(const char *endpoint, const char *soap_action, ns1__getProcessTasks *ns1__getProcessTasks_, ns1__getProcessTasksResponse *ns1__getProcessTasksResponse_);

	/// Web service operation 'getProcesses' (returns error code or SOAP_OK)
	virtual	int getProcesses(ns1__getProcesses *ns1__getProcesses_, ns1__getProcessesResponse *ns1__getProcessesResponse_) { return this->getProcesses(NULL, NULL, ns1__getProcesses_, ns1__getProcessesResponse_); }
	virtual	int getProcesses(const char *endpoint, const char *soap_action, ns1__getProcesses *ns1__getProcesses_, ns1__getProcessesResponse *ns1__getProcessesResponse_);

	/// Web service operation 'getProcessesByFilter' (returns error code or SOAP_OK)
	virtual	int getProcessesByFilter(ns1__getProcessesByFilter *ns1__getProcessesByFilter_, ns1__getProcessesByFilterResponse *ns1__getProcessesByFilterResponse_) { return this->getProcessesByFilter(NULL, NULL, ns1__getProcessesByFilter_, ns1__getProcessesByFilterResponse_); }
	virtual	int getProcessesByFilter(const char *endpoint, const char *soap_action, ns1__getProcessesByFilter *ns1__getProcessesByFilter_, ns1__getProcessesByFilterResponse *ns1__getProcessesByFilterResponse_);

	/// Web service operation 'getProcessesCount' (returns error code or SOAP_OK)
	virtual	int getProcessesCount(ns1__getProcessesCount *ns1__getProcessesCount_, ns1__getProcessesCountResponse *ns1__getProcessesCountResponse_) { return this->getProcessesCount(NULL, NULL, ns1__getProcessesCount_, ns1__getProcessesCountResponse_); }
	virtual	int getProcessesCount(const char *endpoint, const char *soap_action, ns1__getProcessesCount *ns1__getProcessesCount_, ns1__getProcessesCountResponse *ns1__getProcessesCountResponse_);

	/// Web service operation 'getSubprocesses' (returns error code or SOAP_OK)
	virtual	int getSubprocesses(ns1__getSubprocesses *ns1__getSubprocesses_, ns1__getSubprocessesResponse *ns1__getSubprocessesResponse_) { return this->getSubprocesses(NULL, NULL, ns1__getSubprocesses_, ns1__getSubprocessesResponse_); }
	virtual	int getSubprocesses(const char *endpoint, const char *soap_action, ns1__getSubprocesses *ns1__getSubprocesses_, ns1__getSubprocessesResponse *ns1__getSubprocessesResponse_);

	/// Web service operation 'getSwimlanes' (returns error code or SOAP_OK)
	virtual	int getSwimlanes(ns1__getSwimlanes *ns1__getSwimlanes_, ns1__getSwimlanesResponse *ns1__getSwimlanesResponse_) { return this->getSwimlanes(NULL, NULL, ns1__getSwimlanes_, ns1__getSwimlanesResponse_); }
	virtual	int getSwimlanes(const char *endpoint, const char *soap_action, ns1__getSwimlanes *ns1__getSwimlanes_, ns1__getSwimlanesResponse *ns1__getSwimlanesResponse_);

	/// Web service operation 'getSystemLogs' (returns error code or SOAP_OK)
	virtual	int getSystemLogs(ns1__getSystemLogs *ns1__getSystemLogs_, ns1__getSystemLogsResponse *ns1__getSystemLogsResponse_) { return this->getSystemLogs(NULL, NULL, ns1__getSystemLogs_, ns1__getSystemLogsResponse_); }
	virtual	int getSystemLogs(const char *endpoint, const char *soap_action, ns1__getSystemLogs *ns1__getSystemLogs_, ns1__getSystemLogsResponse *ns1__getSystemLogsResponse_);

	/// Web service operation 'getSystemLogsCount' (returns error code or SOAP_OK)
	virtual	int getSystemLogsCount(ns1__getSystemLogsCount *ns1__getSystemLogsCount_, ns1__getSystemLogsCountResponse *ns1__getSystemLogsCountResponse_) { return this->getSystemLogsCount(NULL, NULL, ns1__getSystemLogsCount_, ns1__getSystemLogsCountResponse_); }
	virtual	int getSystemLogsCount(const char *endpoint, const char *soap_action, ns1__getSystemLogsCount *ns1__getSystemLogsCount_, ns1__getSystemLogsCountResponse *ns1__getSystemLogsCountResponse_);

	/// Web service operation 'getTask' (returns error code or SOAP_OK)
	virtual	int getTask(ns1__getTask *ns1__getTask_, ns1__getTaskResponse *ns1__getTaskResponse_) { return this->getTask(NULL, NULL, ns1__getTask_, ns1__getTaskResponse_); }
	virtual	int getTask(const char *endpoint, const char *soap_action, ns1__getTask *ns1__getTask_, ns1__getTaskResponse *ns1__getTaskResponse_);

	/// Web service operation 'getTasks' (returns error code or SOAP_OK)
	virtual	int getTasks(ns1__getTasks *ns1__getTasks_, ns1__getTasksResponse *ns1__getTasksResponse_) { return this->getTasks(NULL, NULL, ns1__getTasks_, ns1__getTasksResponse_); }
	virtual	int getTasks(const char *endpoint, const char *soap_action, ns1__getTasks *ns1__getTasks_, ns1__getTasksResponse *ns1__getTasksResponse_);

	/// Web service operation 'getVariable' (returns error code or SOAP_OK)
	virtual	int getVariable(ns1__getVariable *ns1__getVariable_, ns1__getVariableResponse *ns1__getVariableResponse_) { return this->getVariable(NULL, NULL, ns1__getVariable_, ns1__getVariableResponse_); }
	virtual	int getVariable(const char *endpoint, const char *soap_action, ns1__getVariable *ns1__getVariable_, ns1__getVariableResponse *ns1__getVariableResponse_);

	/// Web service operation 'getVariablesWS' (returns error code or SOAP_OK)
	virtual	int getVariablesWS(ns1__getVariablesWS *ns1__getVariablesWS_, ns1__getVariablesWSResponse *ns1__getVariablesWSResponse_) { return this->getVariablesWS(NULL, NULL, ns1__getVariablesWS_, ns1__getVariablesWSResponse_); }
	virtual	int getVariablesWS(const char *endpoint, const char *soap_action, ns1__getVariablesWS *ns1__getVariablesWS_, ns1__getVariablesWSResponse *ns1__getVariablesWSResponse_);

	/// Web service operation 'markTaskOpened' (returns error code or SOAP_OK)
	virtual	int markTaskOpened(ns1__markTaskOpened *ns1__markTaskOpened_, ns1__markTaskOpenedResponse *ns1__markTaskOpenedResponse_) { return this->markTaskOpened(NULL, NULL, ns1__markTaskOpened_, ns1__markTaskOpenedResponse_); }
	virtual	int markTaskOpened(const char *endpoint, const char *soap_action, ns1__markTaskOpened *ns1__markTaskOpened_, ns1__markTaskOpenedResponse *ns1__markTaskOpenedResponse_);

	/// Web service operation 'removeProcesses' (returns error code or SOAP_OK)
	virtual	int removeProcesses(ns1__removeProcesses *ns1__removeProcesses_, ns1__removeProcessesResponse *ns1__removeProcessesResponse_) { return this->removeProcesses(NULL, NULL, ns1__removeProcesses_, ns1__removeProcessesResponse_); }
	virtual	int removeProcesses(const char *endpoint, const char *soap_action, ns1__removeProcesses *ns1__removeProcesses_, ns1__removeProcessesResponse *ns1__removeProcessesResponse_);

	/// Web service operation 'startProcessWS' (returns error code or SOAP_OK)
	virtual	int startProcessWS(ns1__startProcessWS *ns1__startProcessWS_, ns1__startProcessWSResponse *ns1__startProcessWSResponse_) { return this->startProcessWS(NULL, NULL, ns1__startProcessWS_, ns1__startProcessWSResponse_); }
	virtual	int startProcessWS(const char *endpoint, const char *soap_action, ns1__startProcessWS *ns1__startProcessWS_, ns1__startProcessWSResponse *ns1__startProcessWSResponse_);

	/// Web service operation 'updateVariablesWS' (returns error code or SOAP_OK)
	virtual	int updateVariablesWS(ns1__updateVariablesWS *ns1__updateVariablesWS_, ns1__updateVariablesWSResponse *ns1__updateVariablesWSResponse_) { return this->updateVariablesWS(NULL, NULL, ns1__updateVariablesWS_, ns1__updateVariablesWSResponse_); }
	virtual	int updateVariablesWS(const char *endpoint, const char *soap_action, ns1__updateVariablesWS *ns1__updateVariablesWS_, ns1__updateVariablesWSResponse *ns1__updateVariablesWSResponse_);
};
