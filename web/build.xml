<?xml version="1.0" encoding="UTF-8" ?>

<project name="Web Part of Runa WFE" default="dist" basedir=".">
	<dirname property="Web Part of Runa WFE.basedir" file="${ant.file.Web Part of Runa WFE}"/>
	<import file="${Web Part of Runa WFE.basedir}/../common.build.xml"/>

	<property name="src.dir" location="src" />
	<property name="src.test.dir" location="${src.dir}/test" />
	<property name="src.web.dir" location="${src.dir}/web" />

	<property name="resources.dir" location="resources" />

	<property name="src.generated.dir" location="src/generated" />

	<property name="build.app.classes.dir" location="${build.dir}/classes" />
	<property name="build.resources.dir" location="${build.dir}/resources" />
	<property name="build.resources.orgfunction.dir" location="${build.resources.dir}/orgfunction" />
	<property name="build.test.classes.dir" location="${build.dir}/test/classes" />

	<property name="merge.dir" location="resources/merge" />

	<property name="web.war.file" location="${dist.dir}/wfe.war" />
	<property name="portlet.war.file" location="${dist.dir}/wfe-portlet.war" />
	<property name="web.jar.file" location="${dist.dir}/wfe.web.jar" />
	<property name="custom.jar.file" location="${lib.dir}/wfe-custom.jar" />

	<property name="tests.war.file" location="${dist.dir}/cactus.war" />
	<property name="web.tests.jar.file" location="${dist.dir}/web.test.jar" />

	<target name="clean" description="clean up">
		<delete dir="${src.generated.dir}/*" />
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
	</target>

	<target name="init">
		<tstamp />
		<mkdir dir="${src.generated.dir}" />
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.app.classes.dir}" />
		<mkdir dir="${build.resources.dir}" />
		<mkdir dir="${build.resources.orgfunction.dir}" />
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${build.test.classes.dir}" />

	</target>

	<target name="generate.web" depends="init">
		<taskdef name="webdoclet" classname="xdoclet.modules.web.WebDocletTask" classpathref="lib.classpath" />
		<webdoclet destDir="${src.generated.dir}" excludedTags="${excluded.tags}" addedTags="${added.tags}" mergeDir="${merge.dir}">
			<fileset dir="${src.web.dir}" includes="**/*.java" />
			<deploymentdescriptor servletspec="2.4" validateXML="true" />
			<jbosswebxml version="3.2" validateXML="true" />
			<strutsconfigxml version="1.2" validateXML="true" />
			<strutsvalidationxml version="1.1.3" validateXML="true" />
			<jsptaglib jspversion="2.0" taglibversion="1.0" shortname="wf" filename="wf.tld" validateXML="true" />
		</webdoclet>

	</target>
	<target name="portlet.generate.web" depends="init">
		<delete dir="${resources.dir}/portletGenerated"/>
		<mkdir dir="${resources.dir}/portletGenerated"/>
		<copy todir="${resources.dir}/portletGenerated">
			<fileset dir="${resources.dir}" excludes=".svn">
				<include name="**/*" />
				<include name="*" />
				<exclude name="portletGenerated"/>
				<exclude name="portlet"/>
				<exclude name="portlet/*"/>
				<exclude name="portlet/**/*"/>
			</fileset>
		</copy>
		<copy todir="${resources.dir}/portletGenerated" overwrite="true">
			<fileset dir="${resources.dir}/portlet/" excludes=".svn">
				<include name="**/*" />
				<include name="*" />
			</fileset>
		</copy>

		<taskdef name="webdoclet" classname="xdoclet.modules.web.WebDocletTask" classpathref="lib.classpath" />
		<webdoclet destDir="${src.generated.dir}" excludedTags="${excluded.tags}" addedTags="${added.tags}" mergeDir="${resources.dir}/portletGenerated/merge">
			<fileset dir="${src.web.dir}" includes="**/*.java" />
			<deploymentdescriptor servletspec="2.4" validateXML="true" />
			<jbosswebxml version="3.2" validateXML="true" />
			<strutsconfigxml version="1.2" validateXML="true" />
			<strutsvalidationxml version="1.1.3" validateXML="true" />
			<jsptaglib jspversion="2.0" taglibversion="1.0" shortname="wf" filename="wf.tld" validateXML="true" />
		</webdoclet>

		<replace dir="${resources.dir}/portletGenerated/web/WEB-INF/" includes="*.jsp,**/*.jsp" token="&lt;%@ taglib uri=&quot;/WEB-INF/struts-html.tld&quot; prefix=&quot;html&quot;%&gt;" value="&lt;%@ taglib uri=&quot;/WEB-INF/struts-portlet-html.tld&quot; prefix=&quot;html&quot; %&gt;"/>
		<replace dir="${resources.dir}/portletGenerated/web/WEB-INF/" includes="*.jsp,**/*.jsp" token="html:rewrite page=" value="html:rewrite resourceURL=&quot;true&quot; page="/>
		<replace dir="${resources.dir}/portletGenerated/web/WEB-INF/" includes="*.jsp,**/*.jsp" token="html:rewrite action=" value="html:rewrite renderURL=&quot;true&quot; action="/>

		<xslt 			
			style="resources/portlet.xslt"
			in="${src.generated.dir}/web.xml"
			out="src/web/ru/runa/common/web/portlet/impl/DefaultExceptionHandler.java"
			includes=""
			force="true"/>
	</target>

	<target name="generate.properties" depends="init">
		<copy file="${resources.dir}/web/WEB-INF/classes/struts.properties" tofile="${resources.dir}/web/WEB-INF/classes/struts_en.properties" overwrite="true"/>
		<native2ascii encoding="UTF-8" src="${resources.dir}/web/WEB-INF" dest="${src.generated.dir}" includes="**/*.properties" />
    </target>

	<target name="compile" depends="generate.web,generate.properties">
		<javac destdir="${build.app.classes.dir}" debug="${javac.debug}"  encoding="UTF-8" target="${javac.target}" source="${javac.source}">
			<src path="${src.web.dir}" />
			<classpath refid="lib.classpath" />
		</javac>
	</target>

	<target name="compile.test" depends="generate.properties">
		<javac destdir="${build.test.classes.dir}" debug="${javac.debug}"  encoding="UTF-8" target="${javac.target}" source="${javac.source}">
			<src path="${src.test.dir}" />
			<classpath refid="app.class.path" />
		</javac>
		<copy todir="${build.test.classes.dir}" overwrite="true">
			<fileset dir="${src.test.dir}">
				<include name="**/*.par" />
				<include name="**/*.xml" />
				<include name="**/*.form" />
			</fileset>
		</copy>
	</target>

	<target name="build-ipwl">
		<ant dir="../ipwctrl" />
	</target>

	<target name="dist" depends="compile,build-ipwl">
		<jar destfile="${web.jar.file}">
			<zipfileset dir="${build.app.classes.dir}" />
		</jar>
		<mkdir dir="../ipwctrl/bin/Release"/>
		<war destfile="${web.war.file}" webxml="${src.generated.dir}/web.xml">
			<zipfileset dir="${resources.dir}/web" excludes="**/*.properties" />
			<zipfileset dir="../ipwctrl/bin/Release" includes="*.dll"/>
			<webinf dir="${src.generated.dir}" excludes="web.xml" />
		</war>
	</target>

	<target name="portlet.dist.simulation" depends="prepare.simulation,portlet.dist,undo.simulation" />
	<target name="portlet.dist" depends="compile,build-ipwl,portlet.generate.web">
		<jar destfile="${web.jar.file}">
			<zipfileset dir="${build.app.classes.dir}" />
		</jar>
		<mkdir dir="../ipwctrl/bin/Release"/>
		<war destfile="${portlet.war.file}" webxml="${src.generated.dir}/web.xml">
			<zipfileset dir="${resources.dir}/portletGenerated/web" excludes="**/*.properties" />
			<zipfileset dir="../ipwctrl/bin/Release" includes="*.dll"/>
			<webinf dir="${src.generated.dir}" excludes="web.xml" />
		</war>
	</target>

	<target name="dist.test" depends="compile.test">
		<jar destfile="${web.tests.jar.file}">
			<zipfileset dir="${build.test.classes.dir}" />
		</jar>
		<cactifywar destfile="${tests.war.file}" version="2.3">
			<lib file="${web.tests.jar.file}" />
			<lib file="${custom.jar.file}" />
			<lib file="lib/selenium/selenium-java-client-driver-*.jar" />
		</cactifywar>
		<copy file="${resources.dir}/cactus.properties" todir="${build.test.classes.dir}" overwrite="true" />
	</target>

	<target name="deploy" depends="dist">
		<copy file="${web.war.file}" todir="${deployment.dir}" overwrite="true" />
		<copy file="${web.jar.file}" todir="${deployment.dir}" overwrite="true" />
		<copy file="${resources.dir}/ntlm_support.properties" todir="${config.dir}" overwrite="true" />
		<copy file="${resources.dir}/kerberos_web_support.properties" todir="${config.dir}" overwrite="true" />
		<copy file="${resources.dir}/substitutions.xml" todir="${config.dir}" overwrite="true" />
		<copy file="${resources.dir}/substitutioncriterias.xml" todir="${config.dir}" overwrite="true" />
		<copy file="${resources.dir}/web/main_page.properties" todir="${config.dir}" overwrite="true" />
		<copy file="${resources.dir}/common_settings.properties" tofile="${config.dir}/common_settings.properties" overwrite="true"/>
		<copy file="${resources.dir}/showGraphMode.properties" todir="${config.dir}" overwrite="true"/>	
		<copy file="${resources.dir}/web/WEB-INF/classes/web.properties" todir="${config.dir}" overwrite="true"/>
		<copy todir="${jboss.home.dir}/server/${jboss.config}/lib" flatten="true" overwrite="true">
			<fileset dir="${lib.dir}" excludes=".svn">
				<include name="commons/*.jar" />
				<include name="ecs/*.jar" />
				<include name="struts/*.jar" />
				<include name="jcifs/*.jar" />
				<include name="nekohtml/*.jar" />
				<include name="portlet/*struts*.jar" />
			</fileset>
		</copy>
	</target>

	<target name="deploy.test" depends="dist.test">
		<copy file="${tests.war.file}" todir="${deployment.dir}" overwrite="true" />
	</target>

	<target name="undeploy">
		<basename property="file" file="${web.war.file}" />
		<delete>
			<fileset dir="${deployment.dir}" includes="${file}" />
			<fileset dir="${config.dir}" includes="ntlm_support.properties" />
		</delete>
	</target>

	<target name="undeploy.test">
		<basename property="file" file="${tests.war.file}" />
		<delete>
			<fileset dir="${deployment.dir}" includes="${file}" />
		</delete>
	</target>

	<target name="copy.libs">
		<property name="jboss.deploy.dir" value="${jboss.home.dir}/server/default/deploy/"/>
		<property name="jboss.lib.dir" value="${jboss.home.dir}/server/default/lib/"/>
		<property name="jboss.client.dir" value="${jboss.home.dir}/client/"/>

		<copy file="${jboss.client.dir}/mail.jar" todir="${lib.dir}/jboss" overwrite="true"/>
		<copy file="${jboss.client.dir}/jboss-j2ee.jar" todir="${lib.dir}/jboss" overwrite="true"/>

		<copy file="${jboss.deploy.dir}/wfe.core.jar" todir="${lib.dir}" overwrite="true"/>
		<copy file="${jboss.deploy.dir}/wfe.logic.jar" todir="${lib.dir}" overwrite="true"/>
		<copy file="${jboss.deploy.dir}/wfe.service.jar" todir="${lib.dir}" overwrite="true"/>
		<copy file="${jboss.deploy.dir}/wfe-botstation.jar" todir="${lib.dir}/wfe" overwrite="true"/>

		<copy file="${jboss.deploy.dir}/wfe-custom.jar" todir="${lib.dir}" overwrite="true"/>
	</target>

	<target name="test" depends="deploy.test,init.db">
		<mkdir dir="${report.dir}" />
		<sleep seconds="10" />
		<cactus warfile="${tests.war.file}" printsummary="yes" forkmode="once" fork="true" errorProperty="test.failed" failureProperty="test.failed">
			<cactusproperty server="true" propertiesFile="${build.test.classes.dir}/cactus.properties" />
			<containerset>
				<generic todir="${report.dir}" port="${web.port}">
					<startup>
						<fail>Start container!</fail>
					</startup>
					<shutdown>
						<echo>Container shutdown not supported</echo>
					</shutdown>
				</generic>
			</containerset>
			<formatter type="xml" />
			<batchtest>
				<fileset dir="${src.test.dir}"> 
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
			<classpath>
				<path refid="app.class.path" />
				<path location="${build.test.classes.dir}" />
			</classpath>
		</cactus>
		<antcall target="undeploy.test" />
		<fail if="test.failed">Unit tests failed.</fail>
		<antcall target="test.selenium"/>
		<antcall target="undeploy.test" />
	</target>

	<target name="test.selenium" depends="deploy.test,init.db" unless="selenium.tests.off">
		<copy file="resources/web/WEB-INF/wf/manage_tasks.jsp" tofile="resources/web/WEB-INF/wf/__bak__manage_tasks.jsp"/>
		<replace file="resources/web/WEB-INF/wf/manage_tasks.jsp">
			<replacetoken><![CDATA[<tiles:put name="head" type="string">
	<meta http-equiv="refresh" content="180; URL='<html:rewrite action="/manage_tasks.do?tabForwardName=manage_tasks"/>'">
</tiles:put>]]></replacetoken>
		</replace>
		<antcall target="dist"/>
		<copy file="${web.war.file}" todir="${deployment.dir}" overwrite="true" />
		<move tofile="resources/web/WEB-INF/wf/manage_tasks.jsp" file="resources/web/WEB-INF/wf/__bak__manage_tasks.jsp"/>
		<mkdir dir="${report.dir}" />
		<java jar="${basedir}/lib/selenium/selenium-server-0.9.2.jar" fork="true" spawn="true" dir="${basedir}/lib/selenium" >
			<arg line="-port 3344 -multiWindow -avoidProxy -timeout 7200"/>
		</java>
		
		<sleep seconds="10" />
		<cactus warfile="${tests.war.file}" printsummary="yes" forkmode="once" fork="true" errorProperty="test.failed" failureProperty="test.failed">
			<cactusproperty server="true" propertiesFile="${build.test.classes.dir}/cactus.properties" />
			<containerset>
				<generic todir="${report.dir}" port="${web.port}">
					<startup>
						<fail>Start container!</fail>
					</startup>
					<shutdown>
						<echo>Container shutdown not supported</echo>
					</shutdown>
				</generic>
			</containerset>
			<formatter type="xml" />
			<batchtest>
				<fileset dir="${src.test.dir}">
					<include name="**/*TestSelenium.java" />
				</fileset>
			</batchtest>
			<classpath>
				<path refid="app.class.path" />
				<path location="${build.test.classes.dir}" />
			</classpath>
		</cactus>
		<fail message="Could't stop selenium server">
			<condition>
				<not>
					<http url="http://localhost:3344/selenium-server/driver/?cmd=shutDown"/>
				</not>
			</condition>
		</fail>
		<antcall target="undeploy.test" />
		<fail if="test.failed">Unit tests failed.</fail>
	</target>

	<target name="init.db">
		<java classname="ru.runa.af.delegate.impl.InitializerServiceDelegateRemoteImpl" failonerror="true" fork="true">
			<classpath refid="app.class.path" />
		</java>
	</target>

	<target name="prepare.simulation">
		<move file="resources/web/images/big_logo.gif" tofile="resources/web/images/__bak__big_logo.gif"/>
		<copy file="../wfe/resources/distr-build/RunaWFE-Testing.gif" tofile="resources/web/images/big_logo.gif"/>
		<copy file="resources/web/WEB-INF/af/login.jsp" tofile="resources/web/WEB-INF/af/__bak__login.jsp"/>
		<replace file="resources/web/WEB-INF/af/login.jsp" token="&lt;/html:form&gt;">
			<replacevalue><![CDATA[
</html:form>
<% if ( ru.runa.common.web.Resources.readProperty("simulation", "skipLoginLinks") == null || !ru.runa.common.web.Resources.readProperty("simulation", "skipLoginLinks").trim().toLowerCase().equals("true") ){ %>
<table>
	<tr><td><bean:message key="login.page.login.as"/></td></tr>
	<tr><td><html:link action="/login.do?login=julius&amp;password=123">julius (manager)</html:link></td></tr>
	<tr><td><html:link action="/login.do?login=nero&amp;password=123">nero (manager)</html:link></td></tr>
	<tr><td><html:link action="/login.do?login=tiberius&amp;password=123">tiberius (bookkeeper)</html:link></td></tr>
	<tr><td><html:link action="/login.do?login=caligula&amp;password=123">caligula (bookkeeper)</html:link></td></tr>
	<tr><td><html:link action="/login.do?login=octavia&amp;password=123">octavia (human resource</html:link></td></tr>
	<tr><td><html:link action="/login.do?login=cleopatra&amp;password=123">cleopatra (human resource)</html:link></td></tr>
	<tr><td><html:link action="/login.do?login=marcus&amp;password=123">marcus (staff)</html:link></td></tr>
	<tr><td><html:link action="/login.do?login=gaiua&amp;password=123">gaiua (staff)</html:link></td></tr>
	<tr><td><html:link action="/login.do?login=attila&amp;password=123">attila (staff)</html:link></td></tr>
</table>
<% } %>
]]></replacevalue>
</replace>
	</target>
	<target name="undo.simulation">
		<move tofile="resources/web/images/big_logo.gif" file="resources/web/images/__bak__big_logo.gif"/>
		<move tofile="resources/web/WEB-INF/af/login.jsp" file="resources/web/WEB-INF/af/__bak__login.jsp"/>
	</target>

	<target name="abs-build" depends="copy.libs,deploy" />
	<target name="abs-build.simulation" depends="prepare.simulation,abs-build,undo.simulation" />
</project>
